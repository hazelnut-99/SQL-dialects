SET default_null_order='nulls_first';;
PRAGMA enable_verification;
PRAGMA verify_external;
create table quantiles as select range r, random() FROM range(0,1000000,100) union all values (NULL, 0.25), (NULL, 0.5), (NULL, 0.75) order by 2;;
SELECT quantile_cont('2021-01-01'::TIMESTAMP + interval (r/100) hour, [0.25, 0.5, 0.75]) FROM quantiles;
SELECT quantile_cont('2021-01-01'::TIMESTAMP + interval (r/100) hour, [0.25, 0.5, 0.75]) FROM quantiles;
;
SELECT quantile_cont('2021-01-01'::TIMESTAMP + interval (r/100) hour, [0.25, 0.5, 0.75]) FROM quantiles;
SELECT quantile_cont('2021-01-01'::TIMESTAMP + interval (r/100) hour, [0.25, 0.5, 0.75]) FROM quantiles;
SELECT quantile_cont((CAST('2021-01-01' AS TIMESTAMP) + to_hours(CAST(trunc(CAST((r / 100) AS DOUBLE)) AS BIGINT))), main.list_value(0.25, 0.5, 0.75)) FROM quantiles;
;
;
;
;
SELECT quantile_cont('2021-01-01'::TIMESTAMP + interval (r/100) hour, [0.25, 0.5, 0.75]) FROM quantiles;
SELECT quantile_cont('1990-01-01'::DATE + interval (r/100) day, [0.25, 0.5, 0.75]) FROM quantiles;
SELECT quantile_cont('1990-01-01'::DATE + interval (r/100) day, [0.25, 0.5, 0.75]) FROM quantiles;
;
SELECT quantile_cont('1990-01-01'::DATE + interval (r/100) day, [0.25, 0.5, 0.75]) FROM quantiles;
SELECT quantile_cont('1990-01-01'::DATE + interval (r/100) day, [0.25, 0.5, 0.75]) FROM quantiles;
SELECT quantile_cont((CAST('1990-01-01' AS DATE) + to_days(CAST(trunc(CAST((r / 100) AS DOUBLE)) AS INTEGER))), main.list_value(0.25, 0.5, 0.75)) FROM quantiles;
;
;
;
;
SELECT quantile_cont('1990-01-01'::DATE + interval (r/100) day, [0.25, 0.5, 0.75]) FROM quantiles;
SELECT quantile_cont('00:00:00'::TIME + interval (r/100) second, [0.25, 0.5, 0.75]) FROM quantiles;
SELECT quantile_cont('00:00:00'::TIME + interval (r/100) second, [0.25, 0.5, 0.75]) FROM quantiles;
;
SELECT quantile_cont('00:00:00'::TIME + interval (r/100) second, [0.25, 0.5, 0.75]) FROM quantiles;
SELECT quantile_cont('00:00:00'::TIME + interval (r/100) second, [0.25, 0.5, 0.75]) FROM quantiles;
SELECT quantile_cont((CAST('00:00:00' AS TIME) + to_seconds(CAST((r / 100) AS DOUBLE))), main.list_value(0.25, 0.5, 0.75)) FROM quantiles;
;
;
;
;
SELECT quantile_cont('00:00:00'::TIME + interval (r/100) second, [0.25, 0.5, 0.75]) FROM quantiles;
SELECT quantile_cont(('2021-01-01'::TIMESTAMP + interval (r/100) hour)::TIMESTAMPTZ, [0.25, 0.5, 0.75])
FROM quantiles;
SELECT quantile_cont(('2021-01-01'::TIMESTAMP + interval (r/100) hour)::TIMESTAMPTZ, [0.25, 0.5, 0.75])
FROM quantiles;
;
SELECT quantile_cont(('2021-01-01'::TIMESTAMP + interval (r/100) hour)::TIMESTAMPTZ, [0.25, 0.5, 0.75])
FROM quantiles;
SELECT quantile_cont(('2021-01-01'::TIMESTAMP + interval (r/100) hour)::TIMESTAMPTZ, [0.25, 0.5, 0.75])
FROM quantiles;
SELECT quantile_cont(CAST((CAST('2021-01-01' AS TIMESTAMP) + to_hours(CAST(trunc(CAST((r / 100) AS DOUBLE)) AS BIGINT))) AS TIMESTAMP WITH TIME ZONE), main.list_value(0.25, 0.5, 0.75)) FROM quantiles;
;
;
;
;
SELECT quantile_cont(('2021-01-01'::TIMESTAMP + interval (r/100) hour)::TIMESTAMPTZ, [0.25, 0.5, 0.75])
FROM quantiles;
SELECT quantile_cont(interval (r/100) second, [0.25, 0.5, 0.75]) FROM quantiles;
SELECT quantile_cont(interval (r/100) second, [0.25, 0.5, 0.75]) FROM quantiles;
;
SELECT quantile_cont(interval (r/100) second, [0.25, 0.5, 0.75]) FROM quantiles;
SELECT quantile_cont(interval (r/100) second, [0.25, 0.5, 0.75]) FROM quantiles;
SELECT quantile_cont(interval (r/100) second, [0.25, 0.5, 0.75]) FROM quantiles;
SELECT quantile_cont(r, [0.25, 0.5, 0.75]) FROM quantiles;
SELECT quantile_cont(r, [0.25, 0.5, 0.75]) FROM quantiles;
;
SELECT quantile_cont(r, [0.25, 0.5, 0.75]) FROM quantiles;
SELECT quantile_cont(r, [0.25, 0.5, 0.75]) FROM quantiles;
SELECT quantile_cont(r, main.list_value(0.25, 0.5, 0.75)) FROM quantiles;
;
;
;
;
SELECT quantile_cont(r, [0.25, 0.5, 0.75]) FROM quantiles;
SELECT quantile_cont(d::decimal(4,1), [0.25, 0.5, 0.75])
FROM range(0,100) tbl(d);
SELECT quantile_cont(d::decimal(4,1), [0.25, 0.5, 0.75])
FROM range(0,100) tbl(d);
;
SELECT quantile_cont(d::decimal(4,1), [0.25, 0.5, 0.75])
FROM range(0,100) tbl(d);
SELECT quantile_cont(d::decimal(4,1), [0.25, 0.5, 0.75])
FROM range(0,100) tbl(d);
SELECT quantile_cont(CAST(d AS DECIMAL(4,1)), main.list_value(0.25, 0.5, 0.75)) FROM range(0, 100) AS tbl(d);
;
;
;
;
SELECT quantile_cont(d::decimal(4,1), [0.25, 0.5, 0.75])
FROM range(0,100) tbl(d);
SELECT quantile_cont(d::decimal(8,1), [0.25, 0.5, 0.75])
FROM range(0,100) tbl(d);
SELECT quantile_cont(d::decimal(8,1), [0.25, 0.5, 0.75])
FROM range(0,100) tbl(d);
;
SELECT quantile_cont(d::decimal(8,1), [0.25, 0.5, 0.75])
FROM range(0,100) tbl(d);
SELECT quantile_cont(d::decimal(8,1), [0.25, 0.5, 0.75])
FROM range(0,100) tbl(d);
SELECT quantile_cont(CAST(d AS DECIMAL(8,1)), main.list_value(0.25, 0.5, 0.75)) FROM range(0, 100) AS tbl(d);
;
;
;
;
SELECT quantile_cont(d::decimal(8,1), [0.25, 0.5, 0.75])
FROM range(0,100) tbl(d);
SELECT quantile_cont(d::decimal(12,1), [0.25, 0.5, 0.75])
FROM range(0,100) tbl(d);
SELECT quantile_cont(d::decimal(12,1), [0.25, 0.5, 0.75])
FROM range(0,100) tbl(d);
;
SELECT quantile_cont(d::decimal(12,1), [0.25, 0.5, 0.75])
FROM range(0,100) tbl(d);
SELECT quantile_cont(d::decimal(12,1), [0.25, 0.5, 0.75])
FROM range(0,100) tbl(d);
SELECT quantile_cont(CAST(d AS DECIMAL(12,1)), main.list_value(0.25, 0.5, 0.75)) FROM range(0, 100) AS tbl(d);
;
;
;
;
SELECT quantile_cont(d::decimal(12,1), [0.25, 0.5, 0.75])
FROM range(0,100) tbl(d);
SELECT quantile_cont(d::decimal(18,1), [0.25, 0.5, 0.75])
FROM range(0,100) tbl(d);
SELECT quantile_cont(d::decimal(18,1), [0.25, 0.5, 0.75])
FROM range(0,100) tbl(d);
;
SELECT quantile_cont(d::decimal(18,1), [0.25, 0.5, 0.75])
FROM range(0,100) tbl(d);
SELECT quantile_cont(d::decimal(18,1), [0.25, 0.5, 0.75])
FROM range(0,100) tbl(d);
SELECT quantile_cont(CAST(d AS DECIMAL(18,1)), main.list_value(0.25, 0.5, 0.75)) FROM range(0, 100) AS tbl(d);
;
;
;
;
SELECT quantile_cont(d::decimal(18,1), [0.25, 0.5, 0.75])
FROM range(0,100) tbl(d);
SELECT quantile_cont(d::decimal(24,1), [0.25, 0.5, 0.75])
FROM range(0,100) tbl(d);
SELECT quantile_cont(d::decimal(24,1), [0.25, 0.5, 0.75])
FROM range(0,100) tbl(d);
;
SELECT quantile_cont(d::decimal(24,1), [0.25, 0.5, 0.75])
FROM range(0,100) tbl(d);
SELECT quantile_cont(d::decimal(24,1), [0.25, 0.5, 0.75])
FROM range(0,100) tbl(d);
SELECT quantile_cont(CAST(d AS DECIMAL(24,1)), main.list_value(0.25, 0.5, 0.75)) FROM range(0, 100) AS tbl(d);
;
;
;
;
SELECT quantile_cont(d::decimal(24,1), [0.25, 0.5, 0.75])
FROM range(0,100) tbl(d);
SELECT mod(r,1000) as g, quantile_cont(r, [0.25, 0.5, 0.75]) FROM quantiles GROUP BY 1 ORDER BY 1;
SELECT mod(r,1000) as g, quantile_cont(r, [0.25, 0.5, 0.75]) FROM quantiles GROUP BY 1 ORDER BY 1;
;
SELECT mod(r,1000) as g, quantile_cont(r, [0.25, 0.5, 0.75]) FROM quantiles GROUP BY 1 ORDER BY 1;
SELECT mod(r,1000) as g, quantile_cont(r, [0.25, 0.5, 0.75]) FROM quantiles GROUP BY 1 ORDER BY 1;
SELECT mod(r, 1000) AS g, quantile_cont(r, main.list_value(0.25, 0.5, 0.75)) FROM quantiles GROUP BY 1 ORDER BY 1;
;
;
;
SELECT mod(r,1000) as g, quantile_cont(r, [0.25, 0.5, 0.75]) FROM quantiles GROUP BY 1 ORDER BY 1;
SELECT quantile_cont(1, [0.25, 0.5, 0.75]) FROM quantiles;
SELECT quantile_cont(1, [0.25, 0.5, 0.75]) FROM quantiles;
;
SELECT quantile_cont(1, [0.25, 0.5, 0.75]) FROM quantiles;
SELECT quantile_cont(1, [0.25, 0.5, 0.75]) FROM quantiles;
SELECT quantile_cont(1, main.list_value(0.25, 0.5, 0.75)) FROM quantiles;
;
;
;
;
SELECT quantile_cont(1, [0.25, 0.5, 0.75]) FROM quantiles;
SELECT quantile_cont(r, [0.25, 0.5, 0.75]) FROM quantiles WHERE 1=0;
SELECT quantile_cont(r, [0.25, 0.5, 0.75]) FROM quantiles WHERE 1=0;
;
SELECT quantile_cont(r, [0.25, 0.5, 0.75]) FROM quantiles WHERE 1=0;
SELECT quantile_cont(r, [0.25, 0.5, 0.75]) FROM quantiles WHERE 1=0;
SELECT quantile_cont(r, main.list_value(0.25, 0.5, 0.75)) FROM quantiles WHERE (1 = 0);
;
;
;
;
SELECT quantile_cont(r, [0.25, 0.5, 0.75]) FROM quantiles WHERE 1=0;
SELECT quantile_cont(r, []) FROM quantiles;
SELECT quantile_cont(r, []) FROM quantiles;
;
SELECT quantile_cont(r, []) FROM quantiles;
SELECT quantile_cont(r, []) FROM quantiles;
SELECT quantile_cont(r, main.list_value()) FROM quantiles;
;
;
;
;
SELECT quantile_cont(r, []) FROM quantiles;
pragma threads=4;
PRAGMA verify_parallelism;
SELECT quantile_cont(r, [0.25, 0.5, 0.75]) FROM quantiles;
SELECT quantile_cont(r, [0.25, 0.5, 0.75]) FROM quantiles;
;
SELECT quantile_cont(r, [0.25, 0.5, 0.75]) FROM quantiles;
SELECT quantile_cont(r, [0.25, 0.5, 0.75]) FROM quantiles;
SELECT quantile_cont(r, main.list_value(0.25, 0.5, 0.75)) FROM quantiles;
;
;
;
;
SELECT quantile_cont(r, [0.25, 0.5, 0.75]) FROM quantiles;
SELECT mod(r,1000) as g, quantile_cont(r, [0.25, 0.5, 0.75]) FROM quantiles GROUP BY 1 ORDER BY 1;
SELECT mod(r,1000) as g, quantile_cont(r, [0.25, 0.5, 0.75]) FROM quantiles GROUP BY 1 ORDER BY 1;
;
SELECT mod(r,1000) as g, quantile_cont(r, [0.25, 0.5, 0.75]) FROM quantiles GROUP BY 1 ORDER BY 1;
SELECT mod(r,1000) as g, quantile_cont(r, [0.25, 0.5, 0.75]) FROM quantiles GROUP BY 1 ORDER BY 1;
SELECT mod(r, 1000) AS g, quantile_cont(r, main.list_value(0.25, 0.5, 0.75)) FROM quantiles GROUP BY 1 ORDER BY 1;
;
;
;
SELECT mod(r,1000) as g, quantile_cont(r, [0.25, 0.5, 0.75]) FROM quantiles GROUP BY 1 ORDER BY 1;
SELECT quantile_cont(1, [0.25, 0.5, 0.75]) FROM quantiles;
SELECT quantile_cont(1, [0.25, 0.5, 0.75]) FROM quantiles;
;
SELECT quantile_cont(1, [0.25, 0.5, 0.75]) FROM quantiles;
SELECT quantile_cont(1, [0.25, 0.5, 0.75]) FROM quantiles;
SELECT quantile_cont(1, main.list_value(0.25, 0.5, 0.75)) FROM quantiles;
;
;
;
;
SELECT quantile_cont(1, [0.25, 0.5, 0.75]) FROM quantiles;
SELECT quantile_cont(r, [0.25, 0.5, 0.75]) FROM quantiles WHERE 1=0;
SELECT quantile_cont(r, [0.25, 0.5, 0.75]) FROM quantiles WHERE 1=0;
;
SELECT quantile_cont(r, [0.25, 0.5, 0.75]) FROM quantiles WHERE 1=0;
SELECT quantile_cont(r, [0.25, 0.5, 0.75]) FROM quantiles WHERE 1=0;
SELECT quantile_cont(r, main.list_value(0.25, 0.5, 0.75)) FROM quantiles WHERE (1 = 0);
;
;
;
;
SELECT quantile_cont(r, [0.25, 0.5, 0.75]) FROM quantiles WHERE 1=0;
SELECT quantile_cont(r, []) FROM quantiles;
SELECT quantile_cont(r, []) FROM quantiles;
;
SELECT quantile_cont(r, []) FROM quantiles;
SELECT quantile_cont(r, []) FROM quantiles;
SELECT quantile_cont(r, main.list_value()) FROM quantiles;
;
;
;
;
SELECT quantile_cont(r, []) FROM quantiles;
SELECT quantile_cont(r, [-0.25, 0.5, 0.75]) FROM quantiles;
SELECT quantile_cont(r, [-0.25, 0.5, 0.75]) FROM quantiles;
;
SELECT quantile_cont(r, [-0.25, 0.5, 0.75]) FROM quantiles;
SELECT quantile_cont(r, [-0.25, 0.5, 0.75]) FROM quantiles;
SELECT quantile_cont(r, [-0.25, 0.5, 0.75]) FROM quantiles;
SELECT quantile_cont(r, (0.25, 0.5, 1.1)) FROM quantiles;
SELECT quantile_cont(r, (0.25, 0.5, 1.1)) FROM quantiles;
;
SELECT quantile_cont(r, (0.25, 0.5, 1.1)) FROM quantiles;
SELECT quantile_cont(r, (0.25, 0.5, 1.1)) FROM quantiles;
SELECT quantile_cont(r, (0.25, 0.5, 1.1)) FROM quantiles;
SELECT quantile_cont(r, [0.25, 0.5, NULL]) FROM quantiles;
SELECT quantile_cont(r, [0.25, 0.5, NULL]) FROM quantiles;
;
SELECT quantile_cont(r, [0.25, 0.5, NULL]) FROM quantiles;
SELECT quantile_cont(r, [0.25, 0.5, NULL]) FROM quantiles;
SELECT quantile_cont(r, [0.25, 0.5, NULL]) FROM quantiles;
SELECT quantile_cont(r, ["0.25", "0.5", "0.75"]) FROM quantiles;
SELECT quantile_cont(r, ["0.25", "0.5", "0.75"]) FROM quantiles;
;
SELECT quantile_cont(r, ["0.25", "0.5", "0.75"]) FROM quantiles;
SELECT quantile_cont(r, ["0.25", "0.5", "0.75"]) FROM quantiles;
SELECT quantile_cont(r, ["0.25", "0.5", "0.75"]) FROM quantiles;
SELECT quantile_cont(r::string, [0.25, 0.5, 0.75]) FROM quantiles;
SELECT quantile_cont(r::string, [0.25, 0.5, 0.75]) FROM quantiles;
;
SELECT quantile_cont(r::string, [0.25, 0.5, 0.75]) FROM quantiles;
SELECT quantile_cont(r::string, [0.25, 0.5, 0.75]) FROM quantiles;
SELECT quantile_cont(r::string, [0.25, 0.5, 0.75]) FROM quantiles;
SELECT quantile_cont(r, [0.25, 0.5, 0.75], 50) FROM quantiles;
SELECT quantile_cont(r, [0.25, 0.5, 0.75], 50) FROM quantiles;
;
SELECT quantile_cont(r, [0.25, 0.5, 0.75], 50) FROM quantiles;
SELECT quantile_cont(r, [0.25, 0.5, 0.75], 50) FROM quantiles;
SELECT quantile_cont(r, [0.25, 0.5, 0.75], 50) FROM quantiles;
