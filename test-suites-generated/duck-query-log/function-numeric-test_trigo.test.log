SET default_null_order='nulls_first';;
PRAGMA enable_verification;
CREATE TABLE numbers(n DOUBLE);
INSERT INTO numbers VALUES (-42),(-1),(0), (1), (42), (NULL);
SELECT cast(SIN(n::tinyint)*1000 as bigint) FROM numbers ORDER BY n;
SELECT cast(SIN(n::tinyint)*1000 as bigint) FROM numbers ORDER BY n;
;
SELECT cast(SIN(n::tinyint)*1000 as bigint) FROM numbers ORDER BY n;
SELECT CAST((sin(CAST(n AS TINYINT)) * 1000) AS BIGINT) FROM numbers ORDER BY n;
;
;
;
;
SELECT cast(SIN(n::tinyint)*1000 as bigint) FROM numbers ORDER BY n;
SELECT cast(SIN(n::smallint)*1000 as bigint) FROM numbers ORDER BY n;
SELECT cast(SIN(n::smallint)*1000 as bigint) FROM numbers ORDER BY n;
;
SELECT cast(SIN(n::smallint)*1000 as bigint) FROM numbers ORDER BY n;
SELECT CAST((sin(CAST(n AS SMALLINT)) * 1000) AS BIGINT) FROM numbers ORDER BY n;
;
;
;
;
SELECT cast(SIN(n::smallint)*1000 as bigint) FROM numbers ORDER BY n;
SELECT cast(SIN(n::integer)*1000 as bigint) FROM numbers ORDER BY n;
SELECT cast(SIN(n::integer)*1000 as bigint) FROM numbers ORDER BY n;
;
SELECT cast(SIN(n::integer)*1000 as bigint) FROM numbers ORDER BY n;
SELECT CAST((sin(CAST(n AS INTEGER)) * 1000) AS BIGINT) FROM numbers ORDER BY n;
;
;
;
;
SELECT cast(SIN(n::integer)*1000 as bigint) FROM numbers ORDER BY n;
SELECT cast(SIN(n::bigint)*1000 as bigint) FROM numbers ORDER BY n;
SELECT cast(SIN(n::bigint)*1000 as bigint) FROM numbers ORDER BY n;
;
SELECT cast(SIN(n::bigint)*1000 as bigint) FROM numbers ORDER BY n;
SELECT CAST((sin(CAST(n AS BIGINT)) * 1000) AS BIGINT) FROM numbers ORDER BY n;
;
;
;
;
SELECT cast(SIN(n::bigint)*1000 as bigint) FROM numbers ORDER BY n;
SELECT cast(SIN(n::float)*1000 as bigint) FROM numbers ORDER BY n;
SELECT cast(SIN(n::float)*1000 as bigint) FROM numbers ORDER BY n;
;
SELECT cast(SIN(n::float)*1000 as bigint) FROM numbers ORDER BY n;
SELECT CAST((sin(CAST(n AS FLOAT)) * 1000) AS BIGINT) FROM numbers ORDER BY n;
;
;
;
;
SELECT cast(SIN(n::float)*1000 as bigint) FROM numbers ORDER BY n;
SELECT cast(SIN(n::double)*1000 as bigint) FROM numbers ORDER BY n;
SELECT cast(SIN(n::double)*1000 as bigint) FROM numbers ORDER BY n;
;
SELECT cast(SIN(n::double)*1000 as bigint) FROM numbers ORDER BY n;
SELECT CAST((sin(CAST(n AS DOUBLE)) * 1000) AS BIGINT) FROM numbers ORDER BY n;
;
;
;
;
SELECT cast(SIN(n::double)*1000 as bigint) FROM numbers ORDER BY n;
SELECT cast(COS(n::tinyint)*1000 as bigint) FROM numbers ORDER BY n;
SELECT cast(COS(n::tinyint)*1000 as bigint) FROM numbers ORDER BY n;
;
SELECT cast(COS(n::tinyint)*1000 as bigint) FROM numbers ORDER BY n;
SELECT CAST((cos(CAST(n AS TINYINT)) * 1000) AS BIGINT) FROM numbers ORDER BY n;
;
;
;
;
SELECT cast(COS(n::tinyint)*1000 as bigint) FROM numbers ORDER BY n;
SELECT cast(COS(n::smallint)*1000 as bigint) FROM numbers ORDER BY n;
SELECT cast(COS(n::smallint)*1000 as bigint) FROM numbers ORDER BY n;
;
SELECT cast(COS(n::smallint)*1000 as bigint) FROM numbers ORDER BY n;
SELECT CAST((cos(CAST(n AS SMALLINT)) * 1000) AS BIGINT) FROM numbers ORDER BY n;
;
;
;
;
SELECT cast(COS(n::smallint)*1000 as bigint) FROM numbers ORDER BY n;
SELECT cast(COS(n::integer)*1000 as bigint) FROM numbers ORDER BY n;
SELECT cast(COS(n::integer)*1000 as bigint) FROM numbers ORDER BY n;
;
SELECT cast(COS(n::integer)*1000 as bigint) FROM numbers ORDER BY n;
SELECT CAST((cos(CAST(n AS INTEGER)) * 1000) AS BIGINT) FROM numbers ORDER BY n;
;
;
;
;
SELECT cast(COS(n::integer)*1000 as bigint) FROM numbers ORDER BY n;
SELECT cast(COS(n::bigint)*1000 as bigint) FROM numbers ORDER BY n;
SELECT cast(COS(n::bigint)*1000 as bigint) FROM numbers ORDER BY n;
;
SELECT cast(COS(n::bigint)*1000 as bigint) FROM numbers ORDER BY n;
SELECT CAST((cos(CAST(n AS BIGINT)) * 1000) AS BIGINT) FROM numbers ORDER BY n;
;
;
;
;
SELECT cast(COS(n::bigint)*1000 as bigint) FROM numbers ORDER BY n;
SELECT cast(COS(n::float)*1000 as bigint) FROM numbers ORDER BY n;
SELECT cast(COS(n::float)*1000 as bigint) FROM numbers ORDER BY n;
;
SELECT cast(COS(n::float)*1000 as bigint) FROM numbers ORDER BY n;
SELECT CAST((cos(CAST(n AS FLOAT)) * 1000) AS BIGINT) FROM numbers ORDER BY n;
;
;
;
;
SELECT cast(COS(n::float)*1000 as bigint) FROM numbers ORDER BY n;
SELECT cast(COS(n::double)*1000 as bigint) FROM numbers ORDER BY n;
SELECT cast(COS(n::double)*1000 as bigint) FROM numbers ORDER BY n;
;
SELECT cast(COS(n::double)*1000 as bigint) FROM numbers ORDER BY n;
SELECT CAST((cos(CAST(n AS DOUBLE)) * 1000) AS BIGINT) FROM numbers ORDER BY n;
;
;
;
;
SELECT cast(COS(n::double)*1000 as bigint) FROM numbers ORDER BY n;
SELECT cast(TAN(n::tinyint)*1000 as bigint) FROM numbers ORDER BY n;
SELECT cast(TAN(n::tinyint)*1000 as bigint) FROM numbers ORDER BY n;
;
SELECT cast(TAN(n::tinyint)*1000 as bigint) FROM numbers ORDER BY n;
SELECT CAST((tan(CAST(n AS TINYINT)) * 1000) AS BIGINT) FROM numbers ORDER BY n;
;
;
;
;
SELECT cast(TAN(n::tinyint)*1000 as bigint) FROM numbers ORDER BY n;
SELECT cast(TAN(n::smallint)*1000 as bigint) FROM numbers ORDER BY n;
SELECT cast(TAN(n::smallint)*1000 as bigint) FROM numbers ORDER BY n;
;
SELECT cast(TAN(n::smallint)*1000 as bigint) FROM numbers ORDER BY n;
SELECT CAST((tan(CAST(n AS SMALLINT)) * 1000) AS BIGINT) FROM numbers ORDER BY n;
;
;
;
;
SELECT cast(TAN(n::smallint)*1000 as bigint) FROM numbers ORDER BY n;
SELECT cast(TAN(n::integer)*1000 as bigint) FROM numbers ORDER BY n;
SELECT cast(TAN(n::integer)*1000 as bigint) FROM numbers ORDER BY n;
;
SELECT cast(TAN(n::integer)*1000 as bigint) FROM numbers ORDER BY n;
SELECT CAST((tan(CAST(n AS INTEGER)) * 1000) AS BIGINT) FROM numbers ORDER BY n;
;
;
;
;
SELECT cast(TAN(n::integer)*1000 as bigint) FROM numbers ORDER BY n;
SELECT cast(TAN(n::bigint)*1000 as bigint) FROM numbers ORDER BY n;
SELECT cast(TAN(n::bigint)*1000 as bigint) FROM numbers ORDER BY n;
;
SELECT cast(TAN(n::bigint)*1000 as bigint) FROM numbers ORDER BY n;
SELECT CAST((tan(CAST(n AS BIGINT)) * 1000) AS BIGINT) FROM numbers ORDER BY n;
;
;
;
;
SELECT cast(TAN(n::bigint)*1000 as bigint) FROM numbers ORDER BY n;
SELECT cast(TAN(n::float)*1000 as bigint) FROM numbers ORDER BY n;
SELECT cast(TAN(n::float)*1000 as bigint) FROM numbers ORDER BY n;
;
SELECT cast(TAN(n::float)*1000 as bigint) FROM numbers ORDER BY n;
SELECT CAST((tan(CAST(n AS FLOAT)) * 1000) AS BIGINT) FROM numbers ORDER BY n;
;
;
;
;
SELECT cast(TAN(n::float)*1000 as bigint) FROM numbers ORDER BY n;
SELECT cast(TAN(n::double)*1000 as bigint) FROM numbers ORDER BY n;
SELECT cast(TAN(n::double)*1000 as bigint) FROM numbers ORDER BY n;
;
SELECT cast(TAN(n::double)*1000 as bigint) FROM numbers ORDER BY n;
SELECT CAST((tan(CAST(n AS DOUBLE)) * 1000) AS BIGINT) FROM numbers ORDER BY n;
;
;
;
;
SELECT cast(TAN(n::double)*1000 as bigint) FROM numbers ORDER BY n;
SELECT cast(ATAN(n::tinyint)*1000 as bigint) FROM numbers ORDER BY n;
SELECT cast(ATAN(n::tinyint)*1000 as bigint) FROM numbers ORDER BY n;
;
SELECT cast(ATAN(n::tinyint)*1000 as bigint) FROM numbers ORDER BY n;
SELECT CAST((atan(CAST(n AS TINYINT)) * 1000) AS BIGINT) FROM numbers ORDER BY n;
;
;
;
;
SELECT cast(ATAN(n::tinyint)*1000 as bigint) FROM numbers ORDER BY n;
SELECT cast(ATAN(n::smallint)*1000 as bigint) FROM numbers ORDER BY n;
SELECT cast(ATAN(n::smallint)*1000 as bigint) FROM numbers ORDER BY n;
;
SELECT cast(ATAN(n::smallint)*1000 as bigint) FROM numbers ORDER BY n;
SELECT CAST((atan(CAST(n AS SMALLINT)) * 1000) AS BIGINT) FROM numbers ORDER BY n;
;
;
;
;
SELECT cast(ATAN(n::smallint)*1000 as bigint) FROM numbers ORDER BY n;
SELECT cast(ATAN(n::integer)*1000 as bigint) FROM numbers ORDER BY n;
SELECT cast(ATAN(n::integer)*1000 as bigint) FROM numbers ORDER BY n;
;
SELECT cast(ATAN(n::integer)*1000 as bigint) FROM numbers ORDER BY n;
SELECT CAST((atan(CAST(n AS INTEGER)) * 1000) AS BIGINT) FROM numbers ORDER BY n;
;
;
;
;
SELECT cast(ATAN(n::integer)*1000 as bigint) FROM numbers ORDER BY n;
SELECT cast(ATAN(n::bigint)*1000 as bigint) FROM numbers ORDER BY n;
SELECT cast(ATAN(n::bigint)*1000 as bigint) FROM numbers ORDER BY n;
;
SELECT cast(ATAN(n::bigint)*1000 as bigint) FROM numbers ORDER BY n;
SELECT CAST((atan(CAST(n AS BIGINT)) * 1000) AS BIGINT) FROM numbers ORDER BY n;
;
;
;
;
SELECT cast(ATAN(n::bigint)*1000 as bigint) FROM numbers ORDER BY n;
SELECT cast(ATAN(n::float)*1000 as bigint) FROM numbers ORDER BY n;
SELECT cast(ATAN(n::float)*1000 as bigint) FROM numbers ORDER BY n;
;
SELECT cast(ATAN(n::float)*1000 as bigint) FROM numbers ORDER BY n;
SELECT CAST((atan(CAST(n AS FLOAT)) * 1000) AS BIGINT) FROM numbers ORDER BY n;
;
;
;
;
SELECT cast(ATAN(n::float)*1000 as bigint) FROM numbers ORDER BY n;
SELECT cast(ATAN(n::double)*1000 as bigint) FROM numbers ORDER BY n;
SELECT cast(ATAN(n::double)*1000 as bigint) FROM numbers ORDER BY n;
;
SELECT cast(ATAN(n::double)*1000 as bigint) FROM numbers ORDER BY n;
SELECT CAST((atan(CAST(n AS DOUBLE)) * 1000) AS BIGINT) FROM numbers ORDER BY n;
;
;
;
;
SELECT cast(ATAN(n::double)*1000 as bigint) FROM numbers ORDER BY n;
SELECT cast(ASIN(n::tinyint)*1000 as bigint) FROM numbers  WHERE n between -1 and 1 ORDER BY n;
SELECT cast(ASIN(n::tinyint)*1000 as bigint) FROM numbers  WHERE n between -1 and 1 ORDER BY n;
;
SELECT cast(ASIN(n::tinyint)*1000 as bigint) FROM numbers  WHERE n between -1 and 1 ORDER BY n;
SELECT CAST((asin(CAST(n AS TINYINT)) * 1000) AS BIGINT) FROM numbers WHERE (n BETWEEN -1 AND 1) ORDER BY n;
;
;
;
;
SELECT cast(ASIN(n::tinyint)*1000 as bigint) FROM numbers  WHERE n between -1 and 1 ORDER BY n;
SELECT cast(ASIN(n::smallint)*1000 as bigint) FROM numbers  WHERE n between -1 and 1 ORDER BY n;
SELECT cast(ASIN(n::smallint)*1000 as bigint) FROM numbers  WHERE n between -1 and 1 ORDER BY n;
;
SELECT cast(ASIN(n::smallint)*1000 as bigint) FROM numbers  WHERE n between -1 and 1 ORDER BY n;
SELECT CAST((asin(CAST(n AS SMALLINT)) * 1000) AS BIGINT) FROM numbers WHERE (n BETWEEN -1 AND 1) ORDER BY n;
;
;
;
;
SELECT cast(ASIN(n::smallint)*1000 as bigint) FROM numbers  WHERE n between -1 and 1 ORDER BY n;
SELECT cast(ASIN(n::integer)*1000 as bigint) FROM numbers  WHERE n between -1 and 1 ORDER BY n;
SELECT cast(ASIN(n::integer)*1000 as bigint) FROM numbers  WHERE n between -1 and 1 ORDER BY n;
;
SELECT cast(ASIN(n::integer)*1000 as bigint) FROM numbers  WHERE n between -1 and 1 ORDER BY n;
SELECT CAST((asin(CAST(n AS INTEGER)) * 1000) AS BIGINT) FROM numbers WHERE (n BETWEEN -1 AND 1) ORDER BY n;
;
;
;
;
SELECT cast(ASIN(n::integer)*1000 as bigint) FROM numbers  WHERE n between -1 and 1 ORDER BY n;
SELECT cast(ASIN(n::bigint)*1000 as bigint) FROM numbers  WHERE n between -1 and 1 ORDER BY n;
SELECT cast(ASIN(n::bigint)*1000 as bigint) FROM numbers  WHERE n between -1 and 1 ORDER BY n;
;
SELECT cast(ASIN(n::bigint)*1000 as bigint) FROM numbers  WHERE n between -1 and 1 ORDER BY n;
SELECT CAST((asin(CAST(n AS BIGINT)) * 1000) AS BIGINT) FROM numbers WHERE (n BETWEEN -1 AND 1) ORDER BY n;
;
;
;
;
SELECT cast(ASIN(n::bigint)*1000 as bigint) FROM numbers  WHERE n between -1 and 1 ORDER BY n;
SELECT cast(ASIN(n::float)*1000 as bigint) FROM numbers  WHERE n between -1 and 1 ORDER BY n;
SELECT cast(ASIN(n::float)*1000 as bigint) FROM numbers  WHERE n between -1 and 1 ORDER BY n;
;
SELECT cast(ASIN(n::float)*1000 as bigint) FROM numbers  WHERE n between -1 and 1 ORDER BY n;
SELECT CAST((asin(CAST(n AS FLOAT)) * 1000) AS BIGINT) FROM numbers WHERE (n BETWEEN -1 AND 1) ORDER BY n;
;
;
;
;
SELECT cast(ASIN(n::float)*1000 as bigint) FROM numbers  WHERE n between -1 and 1 ORDER BY n;
SELECT cast(ASIN(n::double)*1000 as bigint) FROM numbers  WHERE n between -1 and 1 ORDER BY n;
SELECT cast(ASIN(n::double)*1000 as bigint) FROM numbers  WHERE n between -1 and 1 ORDER BY n;
;
SELECT cast(ASIN(n::double)*1000 as bigint) FROM numbers  WHERE n between -1 and 1 ORDER BY n;
SELECT CAST((asin(CAST(n AS DOUBLE)) * 1000) AS BIGINT) FROM numbers WHERE (n BETWEEN -1 AND 1) ORDER BY n;
;
;
;
;
SELECT cast(ASIN(n::double)*1000 as bigint) FROM numbers  WHERE n between -1 and 1 ORDER BY n;
SELECT cast(ACOS(n::tinyint)*1000 as bigint) FROM numbers  WHERE n between -1 and 1 ORDER BY n;
SELECT cast(ACOS(n::tinyint)*1000 as bigint) FROM numbers  WHERE n between -1 and 1 ORDER BY n;
;
SELECT cast(ACOS(n::tinyint)*1000 as bigint) FROM numbers  WHERE n between -1 and 1 ORDER BY n;
SELECT CAST((acos(CAST(n AS TINYINT)) * 1000) AS BIGINT) FROM numbers WHERE (n BETWEEN -1 AND 1) ORDER BY n;
;
;
;
;
SELECT cast(ACOS(n::tinyint)*1000 as bigint) FROM numbers  WHERE n between -1 and 1 ORDER BY n;
SELECT cast(ACOS(n::smallint)*1000 as bigint) FROM numbers  WHERE n between -1 and 1 ORDER BY n;
SELECT cast(ACOS(n::smallint)*1000 as bigint) FROM numbers  WHERE n between -1 and 1 ORDER BY n;
;
SELECT cast(ACOS(n::smallint)*1000 as bigint) FROM numbers  WHERE n between -1 and 1 ORDER BY n;
SELECT CAST((acos(CAST(n AS SMALLINT)) * 1000) AS BIGINT) FROM numbers WHERE (n BETWEEN -1 AND 1) ORDER BY n;
;
;
;
;
SELECT cast(ACOS(n::smallint)*1000 as bigint) FROM numbers  WHERE n between -1 and 1 ORDER BY n;
SELECT cast(ACOS(n::integer)*1000 as bigint) FROM numbers  WHERE n between -1 and 1 ORDER BY n;
SELECT cast(ACOS(n::integer)*1000 as bigint) FROM numbers  WHERE n between -1 and 1 ORDER BY n;
;
SELECT cast(ACOS(n::integer)*1000 as bigint) FROM numbers  WHERE n between -1 and 1 ORDER BY n;
SELECT CAST((acos(CAST(n AS INTEGER)) * 1000) AS BIGINT) FROM numbers WHERE (n BETWEEN -1 AND 1) ORDER BY n;
;
;
;
;
SELECT cast(ACOS(n::integer)*1000 as bigint) FROM numbers  WHERE n between -1 and 1 ORDER BY n;
SELECT cast(ACOS(n::bigint)*1000 as bigint) FROM numbers  WHERE n between -1 and 1 ORDER BY n;
SELECT cast(ACOS(n::bigint)*1000 as bigint) FROM numbers  WHERE n between -1 and 1 ORDER BY n;
;
SELECT cast(ACOS(n::bigint)*1000 as bigint) FROM numbers  WHERE n between -1 and 1 ORDER BY n;
SELECT CAST((acos(CAST(n AS BIGINT)) * 1000) AS BIGINT) FROM numbers WHERE (n BETWEEN -1 AND 1) ORDER BY n;
;
;
;
;
SELECT cast(ACOS(n::bigint)*1000 as bigint) FROM numbers  WHERE n between -1 and 1 ORDER BY n;
SELECT cast(ACOS(n::float)*1000 as bigint) FROM numbers  WHERE n between -1 and 1 ORDER BY n;
SELECT cast(ACOS(n::float)*1000 as bigint) FROM numbers  WHERE n between -1 and 1 ORDER BY n;
;
SELECT cast(ACOS(n::float)*1000 as bigint) FROM numbers  WHERE n between -1 and 1 ORDER BY n;
SELECT CAST((acos(CAST(n AS FLOAT)) * 1000) AS BIGINT) FROM numbers WHERE (n BETWEEN -1 AND 1) ORDER BY n;
;
;
;
;
SELECT cast(ACOS(n::float)*1000 as bigint) FROM numbers  WHERE n between -1 and 1 ORDER BY n;
SELECT cast(ACOS(n::double)*1000 as bigint) FROM numbers  WHERE n between -1 and 1 ORDER BY n;
SELECT cast(ACOS(n::double)*1000 as bigint) FROM numbers  WHERE n between -1 and 1 ORDER BY n;
;
SELECT cast(ACOS(n::double)*1000 as bigint) FROM numbers  WHERE n between -1 and 1 ORDER BY n;
SELECT CAST((acos(CAST(n AS DOUBLE)) * 1000) AS BIGINT) FROM numbers WHERE (n BETWEEN -1 AND 1) ORDER BY n;
;
;
;
;
SELECT cast(ACOS(n::double)*1000 as bigint) FROM numbers  WHERE n between -1 and 1 ORDER BY n;
SELECT cast(ASIN(n)*1000 as bigint) FROM numbers ORDER BY n;
SELECT cast(ASIN(n)*1000 as bigint) FROM numbers ORDER BY n;
;
SELECT cast(ASIN(n)*1000 as bigint) FROM numbers ORDER BY n;
SELECT cast(ASIN(n)*1000 as bigint) FROM numbers ORDER BY n;
SELECT cast(COT(n::tinyint)*1000 as bigint) FROM numbers  WHERE n > 0.1 OR N < -0.1 ORDER BY n;
SELECT cast(COT(n::tinyint)*1000 as bigint) FROM numbers  WHERE n > 0.1 OR N < -0.1 ORDER BY n;
;
SELECT cast(COT(n::tinyint)*1000 as bigint) FROM numbers  WHERE n > 0.1 OR N < -0.1 ORDER BY n;
SELECT CAST((cot(CAST(n AS TINYINT)) * 1000) AS BIGINT) FROM numbers WHERE ((n > 0.1) OR (N < -0.1)) ORDER BY n;
;
;
;
;
SELECT cast(COT(n::tinyint)*1000 as bigint) FROM numbers  WHERE n > 0.1 OR N < -0.1 ORDER BY n;
SELECT cast(COT(n::smallint)*1000 as bigint) FROM numbers  WHERE n > 0.1 OR N < -0.1 ORDER BY n;
SELECT cast(COT(n::smallint)*1000 as bigint) FROM numbers  WHERE n > 0.1 OR N < -0.1 ORDER BY n;
;
SELECT cast(COT(n::smallint)*1000 as bigint) FROM numbers  WHERE n > 0.1 OR N < -0.1 ORDER BY n;
SELECT CAST((cot(CAST(n AS SMALLINT)) * 1000) AS BIGINT) FROM numbers WHERE ((n > 0.1) OR (N < -0.1)) ORDER BY n;
;
;
;
;
SELECT cast(COT(n::smallint)*1000 as bigint) FROM numbers  WHERE n > 0.1 OR N < -0.1 ORDER BY n;
SELECT cast(COT(n::integer)*1000 as bigint) FROM numbers  WHERE n > 0.1 OR N < -0.1 ORDER BY n;
SELECT cast(COT(n::integer)*1000 as bigint) FROM numbers  WHERE n > 0.1 OR N < -0.1 ORDER BY n;
;
SELECT cast(COT(n::integer)*1000 as bigint) FROM numbers  WHERE n > 0.1 OR N < -0.1 ORDER BY n;
SELECT CAST((cot(CAST(n AS INTEGER)) * 1000) AS BIGINT) FROM numbers WHERE ((n > 0.1) OR (N < -0.1)) ORDER BY n;
;
;
;
;
SELECT cast(COT(n::integer)*1000 as bigint) FROM numbers  WHERE n > 0.1 OR N < -0.1 ORDER BY n;
SELECT cast(COT(n::bigint)*1000 as bigint) FROM numbers  WHERE n > 0.1 OR N < -0.1 ORDER BY n;
SELECT cast(COT(n::bigint)*1000 as bigint) FROM numbers  WHERE n > 0.1 OR N < -0.1 ORDER BY n;
;
SELECT cast(COT(n::bigint)*1000 as bigint) FROM numbers  WHERE n > 0.1 OR N < -0.1 ORDER BY n;
SELECT CAST((cot(CAST(n AS BIGINT)) * 1000) AS BIGINT) FROM numbers WHERE ((n > 0.1) OR (N < -0.1)) ORDER BY n;
;
;
;
;
SELECT cast(COT(n::bigint)*1000 as bigint) FROM numbers  WHERE n > 0.1 OR N < -0.1 ORDER BY n;
SELECT cast(COT(n::float)*1000 as bigint) FROM numbers  WHERE n > 0.1 OR N < -0.1 ORDER BY n;
SELECT cast(COT(n::float)*1000 as bigint) FROM numbers  WHERE n > 0.1 OR N < -0.1 ORDER BY n;
;
SELECT cast(COT(n::float)*1000 as bigint) FROM numbers  WHERE n > 0.1 OR N < -0.1 ORDER BY n;
SELECT CAST((cot(CAST(n AS FLOAT)) * 1000) AS BIGINT) FROM numbers WHERE ((n > 0.1) OR (N < -0.1)) ORDER BY n;
;
;
;
;
SELECT cast(COT(n::float)*1000 as bigint) FROM numbers  WHERE n > 0.1 OR N < -0.1 ORDER BY n;
SELECT cast(COT(n::double)*1000 as bigint) FROM numbers  WHERE n > 0.1 OR N < -0.1 ORDER BY n;
SELECT cast(COT(n::double)*1000 as bigint) FROM numbers  WHERE n > 0.1 OR N < -0.1 ORDER BY n;
;
SELECT cast(COT(n::double)*1000 as bigint) FROM numbers  WHERE n > 0.1 OR N < -0.1 ORDER BY n;
SELECT CAST((cot(CAST(n AS DOUBLE)) * 1000) AS BIGINT) FROM numbers WHERE ((n > 0.1) OR (N < -0.1)) ORDER BY n;
;
;
;
;
SELECT cast(COT(n::double)*1000 as bigint) FROM numbers  WHERE n > 0.1 OR N < -0.1 ORDER BY n;
SELECT cast(ATAN2(n::tinyint, 42)*1000 as bigint) FROM numbers ORDER BY n;
SELECT cast(ATAN2(n::tinyint, 42)*1000 as bigint) FROM numbers ORDER BY n;
;
SELECT cast(ATAN2(n::tinyint, 42)*1000 as bigint) FROM numbers ORDER BY n;
SELECT CAST((atan2(CAST(n AS TINYINT), 42) * 1000) AS BIGINT) FROM numbers ORDER BY n;
;
;
;
;
SELECT cast(ATAN2(n::tinyint, 42)*1000 as bigint) FROM numbers ORDER BY n;
SELECT cast(ATAN2(n::smallint, 42)*1000 as bigint) FROM numbers ORDER BY n;
SELECT cast(ATAN2(n::smallint, 42)*1000 as bigint) FROM numbers ORDER BY n;
;
SELECT cast(ATAN2(n::smallint, 42)*1000 as bigint) FROM numbers ORDER BY n;
SELECT CAST((atan2(CAST(n AS SMALLINT), 42) * 1000) AS BIGINT) FROM numbers ORDER BY n;
;
;
;
;
SELECT cast(ATAN2(n::smallint, 42)*1000 as bigint) FROM numbers ORDER BY n;
SELECT cast(ATAN2(n::integer, 42)*1000 as bigint) FROM numbers ORDER BY n;
SELECT cast(ATAN2(n::integer, 42)*1000 as bigint) FROM numbers ORDER BY n;
;
SELECT cast(ATAN2(n::integer, 42)*1000 as bigint) FROM numbers ORDER BY n;
SELECT CAST((atan2(CAST(n AS INTEGER), 42) * 1000) AS BIGINT) FROM numbers ORDER BY n;
;
;
;
;
SELECT cast(ATAN2(n::integer, 42)*1000 as bigint) FROM numbers ORDER BY n;
SELECT cast(ATAN2(n::bigint, 42)*1000 as bigint) FROM numbers ORDER BY n;
SELECT cast(ATAN2(n::bigint, 42)*1000 as bigint) FROM numbers ORDER BY n;
;
SELECT cast(ATAN2(n::bigint, 42)*1000 as bigint) FROM numbers ORDER BY n;
SELECT CAST((atan2(CAST(n AS BIGINT), 42) * 1000) AS BIGINT) FROM numbers ORDER BY n;
;
;
;
;
SELECT cast(ATAN2(n::bigint, 42)*1000 as bigint) FROM numbers ORDER BY n;
SELECT cast(ATAN2(n::float, 42)*1000 as bigint) FROM numbers ORDER BY n;
SELECT cast(ATAN2(n::float, 42)*1000 as bigint) FROM numbers ORDER BY n;
;
SELECT cast(ATAN2(n::float, 42)*1000 as bigint) FROM numbers ORDER BY n;
SELECT CAST((atan2(CAST(n AS FLOAT), 42) * 1000) AS BIGINT) FROM numbers ORDER BY n;
;
;
;
;
SELECT cast(ATAN2(n::float, 42)*1000 as bigint) FROM numbers ORDER BY n;
SELECT cast(ATAN2(n::double, 42)*1000 as bigint) FROM numbers ORDER BY n;
SELECT cast(ATAN2(n::double, 42)*1000 as bigint) FROM numbers ORDER BY n;
;
SELECT cast(ATAN2(n::double, 42)*1000 as bigint) FROM numbers ORDER BY n;
SELECT CAST((atan2(CAST(n AS DOUBLE), 42) * 1000) AS BIGINT) FROM numbers ORDER BY n;
;
;
;
;
SELECT cast(ATAN2(n::double, 42)*1000 as bigint) FROM numbers ORDER BY n;
select asin(-2);;
select asin(-2);;
;
select asin(-2);;
select asin(-2);;
select acos(-2);;
select acos(-2);;
;
select acos(-2);;
select acos(-2);;
