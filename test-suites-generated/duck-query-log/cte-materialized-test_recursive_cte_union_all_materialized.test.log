PRAGMA enable_verification;
with recursive t as MATERIALIZED (select 1 as x union all select x+1 from t where x < 3) select * from t;
with recursive t as MATERIALIZED (select 1 as x union all select x+1 from t where x < 3) select * from t;
;
with recursive t as MATERIALIZED (select 1 as x union all select x+1 from t where x < 3) select * from t;
WITH RECURSIVE t AS MATERIALIZED ((SELECT 1 AS x) UNION  ALL (SELECT (x + 1) FROM t WHERE (x < 3)))SELECT * FROM t;
;
;
;
;
with recursive t as MATERIALIZED (select 1 as x union all select x+1 from t where x < 3) select * from t;
with recursive t as MATERIALIZED (select 1 as x union all select x+1 from t as m where m.x < 3) select * from t;
with recursive t as MATERIALIZED (select 1 as x union all select x+1 from t as m where m.x < 3) select * from t;
;
with recursive t as MATERIALIZED (select 1 as x union all select x+1 from t as m where m.x < 3) select * from t;
WITH RECURSIVE t AS MATERIALIZED ((SELECT 1 AS x) UNION  ALL (SELECT (x + 1) FROM t AS m WHERE (m.x < 3)))SELECT * FROM t;
;
;
;
;
with recursive t as MATERIALIZED (select 1 as x union all select x+1 from t as m where m.x < 3) select * from t;
with recursive t as MATERIALIZED (select 1 as x union all select m.x+f.x from t as m, t as f where m.x < 3) select * from t;
with recursive t as MATERIALIZED (select 1 as x union all select m.x+f.x from t as m, t as f where m.x < 3) select * from t;
;
with recursive t as MATERIALIZED (select 1 as x union all select m.x+f.x from t as m, t as f where m.x < 3) select * from t;
WITH RECURSIVE t AS MATERIALIZED ((SELECT 1 AS x) UNION  ALL (SELECT (m.x + f.x) FROM t AS m , t AS f WHERE (m.x < 3)))SELECT * FROM t;
;
;
;
;
with recursive t as MATERIALIZED (select 1 as x union all select m.x+f.x from t as m, t as f where m.x < 3) select * from t;
with recursive t as MATERIALIZED (select 1 as x, 'hello' as y union all select x+1, y || '-' || 'hello' from t where x < 3) select * from t;;
with recursive t as MATERIALIZED (select 1 as x, 'hello' as y union all select x+1, y || '-' || 'hello' from t where x < 3) select * from t;;
;
with recursive t as MATERIALIZED (select 1 as x, 'hello' as y union all select x+1, y || '-' || 'hello' from t where x < 3) select * from t;;
WITH RECURSIVE t AS MATERIALIZED ((SELECT 1 AS x, 'hello' AS y) UNION  ALL (SELECT (x + 1), ((y || '-') || 'hello') FROM t WHERE (x < 3)))SELECT * FROM t;
;
;
;
;
with recursive t as MATERIALIZED (select 1 as x, 'hello' as y union all select x+1, y || '-' || 'hello' from t where x < 3) select * from t;;
with recursive t as MATERIALIZED (select 1 as x union all select x+1 from t where x < 3) select min(a1.x) from t a1, t a2;;
with recursive t as MATERIALIZED (select 1 as x union all select x+1 from t where x < 3) select min(a1.x) from t a1, t a2;;
;
with recursive t as MATERIALIZED (select 1 as x union all select x+1 from t where x < 3) select min(a1.x) from t a1, t a2;;
WITH RECURSIVE t AS MATERIALIZED ((SELECT 1 AS x) UNION  ALL (SELECT (x + 1) FROM t WHERE (x < 3)))SELECT min(a1.x) FROM t AS a1 , t AS a2;
;
;
;
;
with recursive t as MATERIALIZED (select 1 as x union all select x+1 from t where x < 3) select min(a1.x) from t a1, t a2;;
with recursive t as MATERIALIZED (select 1 as x union all select x+(SELECT 1) from t where x < 3) select * from t;;
with recursive t as MATERIALIZED (select 1 as x union all select x+(SELECT 1) from t where x < 3) select * from t;;
;
with recursive t as MATERIALIZED (select 1 as x union all select x+(SELECT 1) from t where x < 3) select * from t;;
WITH RECURSIVE t AS MATERIALIZED ((SELECT 1 AS x) UNION  ALL (SELECT (x + (SELECT 1)) FROM t WHERE (x < 3)))SELECT * FROM t;
;
;
;
;
with recursive t as MATERIALIZED (select 1 as x union all select x+(SELECT 1) from t where x < 3) select * from t;;
create table integers as with recursive t as MATERIALIZED (select 1 as x union all select x+1 from t where x < 3) select * from t;;
with recursive t as MATERIALIZED (select (select min(x) from integers) as x union all select x+1 from t where x < 3) select * from t;;
with recursive t as MATERIALIZED (select (select min(x) from integers) as x union all select x+1 from t where x < 3) select * from t;;
;
with recursive t as MATERIALIZED (select (select min(x) from integers) as x union all select x+1 from t where x < 3) select * from t;;
WITH RECURSIVE t AS MATERIALIZED ((SELECT (SELECT min(x) FROM integers) AS x) UNION  ALL (SELECT (x + 1) FROM t WHERE (x < 3)))SELECT * FROM t;
;
;
;
;
with recursive t as MATERIALIZED (select (select min(x) from integers) as x union all select x+1 from t where x < 3) select * from t;;
with recursive t as MATERIALIZED (select 1 as x union all select sum(x+1) AS x from t where x < 3 group by x) select * from t;
with recursive t as MATERIALIZED (select 1 as x union all select sum(x+1) AS x from t where x < 3 group by x) select * from t;
;
with recursive t as MATERIALIZED (select 1 as x union all select sum(x+1) AS x from t where x < 3 group by x) select * from t;
WITH RECURSIVE t AS MATERIALIZED ((SELECT 1 AS x) UNION  ALL (SELECT sum((x + 1)) AS x FROM t WHERE (x < 3) GROUP BY x))SELECT * FROM t;
;
;
;
;
with recursive t as MATERIALIZED (select 1 as x union all select sum(x+1) AS x from t where x < 3 group by x) select * from t;
WITH RECURSIVE t AS MATERIALIZED (
	SELECT 1 AS i
	UNION ALL
	SELECT j
	FROM t, generate_series(0, 10, 1) series(j)
	WHERE j=i+1
)
SELECT * FROM t;;
WITH RECURSIVE t AS MATERIALIZED (
	SELECT 1 AS i
	UNION ALL
	SELECT j
	FROM t, generate_series(0, 10, 1) series(j)
	WHERE j=i+1
)
SELECT * FROM t;;
;
WITH RECURSIVE t AS MATERIALIZED (
	SELECT 1 AS i
	UNION ALL
	SELECT j
	FROM t, generate_series(0, 10, 1) series(j)
	WHERE j=i+1
)
SELECT * FROM t;;
WITH RECURSIVE t AS MATERIALIZED ((SELECT 1 AS i) UNION  ALL (SELECT j FROM t , generate_series(0, 10, 1) AS series(j) WHERE (j = (i + 1))))SELECT * FROM t;
;
;
;
;
WITH RECURSIVE t AS MATERIALIZED (
	SELECT 1 AS i
	UNION ALL
	SELECT j
	FROM t, generate_series(0, 10, 1) series(j)
	WHERE j=i+1
)
SELECT * FROM t;;
