pragma enable_verification;
create table tbl (a integer, b integer unique, c integer default 10);
insert into tbl(a,b) values (1,2), (2,1);
insert or replace into tbl(a,b,c) values (5,2,20), (10,1,30);
select a,b,c from tbl;
insert or replace into tbl (a,b) values (5,2);
select c from tbl;
insert or replace into tbl AS not_tbl (a,b) values (5,2);
select c from tbl;
pragma enable_verification;
create or replace table tbl (
	a integer primary key default 4,
	b integer DEFAULT 3
);
insert into tbl VALUES (2,3), (4,5);
select * from tbl;
insert into tbl VALUES (DEFAULT, 6) ON CONFLICT (a) DO UPDATE SET b = DEFAULT;
select * from tbl;
insert into tbl VALUES (4,8) ON CONFLICT (a) WHERE a = DEFAULT DO UPDATE SET b = excluded.b;
insert into tbl VALUES (4,3) ON CONFLICT (a) DO UPDATE SET b = excluded.b WHERE excluded.b = DEFAULT * 2;
pragma enable_verification;
create table tbl (
	a integer,
	b integer unique,
	c integer unique,
	d integer unique
);
insert into tbl(b,c,d) values
	(1,2,3),
	(2,3,1),
	(3,1,2);
insert into tbl(b,c,d) values
	(3,3,3) on conflict do nothing;
pragma enable_verification;
create or replace table tbl (
	a integer primary key DEFAULT 5,
	b integer
);
insert into tbl DEFAULT VALUES;
FROM tbl;
pragma enable_verification;
create or replace table tbl(
	i integer UNIQUE,
	j integer,
	k integer PRIMARY KEY
);
insert into tbl values (3,4,2), (5,3,1);
select * from tbl;
insert into tbl(k, i) values (2,3), (4,4), (1,8) on conflict (k) do update set j = excluded.j;
select * from tbl;
insert into tbl(i,k) values (3,2), (5,5) on conflict (k) do update set j = 10;
select * from tbl;
insert into tbl(i,k) values (3,10), (6,2) on conflict(i) do update set j = 10;
select * from tbl;
pragma enable_verification;
create or replace table tbl (
	a integer primary key,
	b integer
);
insert into tbl VALUES (1,2), (2,2);
select * from tbl;
insert into tbl VALUES (1,3), (3,4);
insert into tbl VALUES (1,3), (3,4) ON CONFLICT (a) DO UPDATE SET b = excluded.b;
select * from tbl;
insert into tbl VALUES (4,3), (3,8) ON CONFLICT (a) WHERE excluded.b < 8 DO NOTHING;
insert into tbl VALUES (4,3), (3,8) ON CONFLICT (a) WHERE excluded.b >= 8 DO UPDATE SET b = 10;
select * from tbl;
insert into tbl VALUES (3,8), (2,2), (7,2) ON CONFLICT (a) DO UPDATE SET b = b*2 WHERE b == excluded.b;
select * from tbl;
pragma enable_verification;
create or replace table tbl(
	i integer PRIMARY KEY,
	j integer UNIQUE,
	k integer
);
insert into tbl VALUES
	(1, 10, 1),
	(2, 20, 1),
	(3, 30, 2);
insert into tbl VALUES (3,5,1) ON CONFLICT (i) DO UPDATE SET i = i;
select * from tbl;
insert into tbl VALUES (3,5,1) ON CONFLICT (i) DO UPDATE SET k = k + excluded.k;
select * from tbl;
insert into tbl VALUES (3,5,1) ON CONFLICT (k) DO UPDATE SET k = excluded.k;
insert into tbl VALUES (3,5,1) ON CONFLICT (i) DO UPDATE SET k = excluded.k;
select * from tbl;
insert into tbl VALUES (4,2,3), (3,5,10) ON CONFLICT (i) DO NOTHING;
select * from tbl;
insert into tbl VALUES
	(3,1,5),
	(3,3,1)
ON CONFLICT (i) DO UPDATE SET
	k = excluded.k;
select * from tbl;
insert into tbl VALUES
	(3,1,5),
ON CONFLICT (i) DO UPDATE SET
	k = excluded.k;
select * from tbl;
insert into tbl VALUES (3,5,1) ON CONFLICT (i) WHERE k < 5 DO UPDATE SET k = 1;
insert into tbl VALUES (3,5,1) ON CONFLICT (i) WHERE k >= 5 DO UPDATE SET k = 1;
select * from tbl;
insert into tbl VALUES (3,5,3) on conflict (i) do update set k = 10 WHERE k != 1;
select * from tbl;
insert into tbl VALUES (3,5,3) on conflict (i) do update set k = 10 WHERE k == 1;
select * from tbl;
insert into tbl VALUES (5,1,0), (3,5,20) ON CONFLICT DO NOTHING;
select * from tbl;
insert into tbl VALUES (5,1,0), (3,5,20) ON CONFLICT DO UPDATE set k = excluded.k;
create or replace table single_constraint (
	i integer PRIMARY KEY,
	j integer,
	k varchar,
);
insert into single_constraint values (5,1,'hello'), (1,10,'test');
insert into single_constraint values (1,5,'bye'), (3,10,'quack') on conflict do update set j = excluded.j, k = concat(k, excluded.k);
select * from single_constraint;
pragma enable_verification;
create or replace table tbl(
	i integer PRIMARY KEY,
	j integer UNIQUE,
	k integer
);
insert into tbl VALUES (1, 10, 1), (2, 20, 1), (3, 30, 2);
select * from tbl;
insert into tbl VALUES (3,5,1) ON CONFLICT (i) DO UPDATE SET k = k + excluded.k;
select * from tbl;
pragma enable_verification;
create or replace table tbl (
	a integer,
	b integer,
	c integer,
	primary key (a, b)
);
insert into tbl VALUES (1,2,3), (1,2,3);
insert into tbl VALUES (1,2,3), (1,4,5);
insert into tbl VALUES (1,4,7), (1,8,4) ON CONFLICT (a) DO UPDATE set c = 5;
insert into tbl VALUES (1,4,7), (1,8,4) ON CONFLICT (b) DO UPDATE set c = 5;
insert into tbl VALUES (1,4,7), (1,8,4) ON CONFLICT (a,b) DO UPDATE set c = 5;
select * from tbl;
pragma enable_verification;
create or replace table tbl (
	a integer unique,
	b integer
);
insert into tbl VALUES (3,2), (1,3);
insert into tbl(b) VALUES (5) ON CONFLICT (a) DO UPDATE SET b = 8;
select * from tbl;
insert into tbl(b) VALUES (5) ON CONFLICT (a) DO UPDATE SET b = 8;
select * from tbl;
BEGIN TRANSACTION;
CREATE TABLE tbl (a SHORT PRIMARY KEY, b SHORT);
INSERT INTO tbl VALUES (1, 2) ON CONFLICT (a) DO UPDATE SET b = excluded.b;
INSERT INTO tbl VALUES (1, 3) ON CONFLICT (a) DO UPDATE SET b = excluded.b;
select * from tbl;
COMMIT;
select * from tbl;
BEGIN TRANSACTION;
INSERT INTO tbl VALUES
	(2, 1),
	(3, 1),
	(4, 1);
INSERT INTO tbl VALUES
	(2, 1),
	(3, 1),
	(4, 1) ON CONFLICT (a) DO NOTHING;
COMMIT;
BEGIN TRANSACTION;
INSERT INTO tbl VALUES
	(5, 0);
insert into tbl VALUES
	(5, 0),
	(5, 1)
ON CONFLICT (a) DO UPDATE SET
	b = excluded.b;
COMMIT;
BEGIN TRANSACTION;
INSERT INTO tbl VALUES (6,0);
INSERT INTO tbl VALUES (5,0), (6,0), (7,0) ON CONFLICT (a) DO UPDATE set b = excluded.b;
INSERT INTO tbl VALUES (-1, 0), (5,0), (6,0) ON CONFLICT (a) DO NOTHING;
COMMIT;
BEGIN TRANSACTION;
CREATE OR REPLACE TABLE tbl (a SHORT PRIMARY KEY, b SHORT);
INSERT INTO tbl (select i, 0 from range(2500) tbl(i));
select max(b) from tbl;
INSERT INTO tbl (select i, i from range(2500) tbl(i)) ON CONFLICT (a) DO UPDATE SET b = excluded.b;
select max(b) from tbl;
COMMIT;
pragma enable_verification;
SET preserve_insertion_order=false;
CREATE TABLE integers(
	i INTEGER unique,
	j INTEGER DEFAULT 0,
	k INTEGER DEFAULT 0
);
INSERT INTO integers(i) SELECT i from range(5000) tbl(i);
SELECT COUNT(*) FROM integers;
INSERT INTO integers SELECT * FROM integers on conflict do nothing;
INSERT INTO integers SELECT * FROM integers on conflict do update set j = 10;
SELECT COUNT(*) FILTER (WHERE j = 10) FROM integers;
INSERT INTO integers(i,j) select i%5,i from range(5000) tbl(i) on conflict do update set j = excluded.j, k = excluded.i;
INSERT INTO integers(i,j) select i%5,i from range(4995, 5000) tbl(i) on conflict do update set j = excluded.j, k = excluded.i;
select j from integers limit 5;
insert into integers(i,j)
	select
		CASE WHEN i % 2 = 0
			THEN
				4999 - (i//2)
			ELSE
				i - ((i//2)+1)
		END,
		i
	from range(5000) tbl(i)
on conflict do update set j = excluded.j;
select j from integers limit 5;
select j from integers limit 5 offset 4995;
update integers set j = 0;
insert into integers(i,j)
	select
		CASE WHEN i % 2 = 0
			THEN
				4999 - (i//2)
			ELSE
				i - ((i//2)+1)
		END,
		i
	from range(5000) tbl(i)
on conflict do update set j = excluded.j where i % 2 = 0 AND excluded.j % 2 = 0;
select COUNT(j) filter (where j != 0) from integers;
pragma enable_verification;
create table tbl (
	i integer,
	j integer unique
);
insert into tbl values (5,3), (6,7);
insert into tbl AS test values (3,5), (8,3), (2,6) on conflict (j) where i <= excluded.i do update set i = excluded.i * 2;
select * from tbl;
insert into tbl AS test values (2,3) on conflict do update set i = test.i;
select * from tbl;
insert into tbl as test values (2,3) on conflict (j) where test.i < 5 do update set i = excluded.j;
insert into tbl as test values (2,3) on conflict (j) where test.i >= 5 do update set i = excluded.j;
select * from tbl;
insert into tbl as test (j, i) values (5,3) on conflict (j) do update set i = 10 where test.j <= 3;
select * from tbl;
insert into tbl as test (j, i) values (5,3) on conflict (j) do update set i = 10 where test.j > 3;
select * from tbl;
insert into tbl as excluded values (8,3) on conflict (j) do update set i = 5;
pragma enable_verification;
create table tbl (a integer, b integer unique);
insert into tbl values (1,2), (2,1);
insert into tbl values (1,2) on conflict do update set a = excluded.a;
insert or replace into tbl values (4,3) on conflict do nothing;
insert or ignore into tbl values (1,2), (2,1);
insert or replace into tbl values (5,2), (10,1);
select * from tbl;
create or replace table tbl (a integer unique, b integer unique);
insert or replace into tbl values (1,2);
pragma enable_verification;
create table tbl (
	a integer DEFAULT 5,
	b integer unique,
	c integer DEFAULT 10
);
insert into tbl(b) VALUES (3), (5), (6);
insert into tbl(b) VALUES (7), (3), (4) ON CONFLICT do update set c = 5, a = 10;
select * from tbl;
create table t (i int primary key, j int);
insert into t values (1, 1) on conflict do nothing;
insert into t values (1, 1) on conflict do nothing;
insert into t values (1, 1) on conflict (i) do update set j = excluded.i;
CREATE TABLE test_table_raw(id VARCHAR, name VARCHAR);
INSERT INTO test_table_raw VALUES
	('abc001','foo'),
	('abc002','bar'),
	('abc001','foo2'),
	('abc002','bar2');
CREATE TABLE test_table(id VARCHAR PRIMARY KEY, name VARCHAR);
INSERT INTO test_table
SELECT
  DISTINCT(id) as id,
  name
FROM test_table_raw;
INSERT INTO test_table
SELECT
  DISTINCT(id) as id,
  name
FROM test_table_raw;
INSERT OR IGNORE INTO test_table
SELECT
  DISTINCT(id) as id,
  name
FROM test_table_raw;
SELECT * FROM test_table_raw;
pragma enable_verification;
create or replace table tbl (a integer primary key, b integer);
insert into tbl VALUES (1,3), (2,2), (3,10), (4,3);
insert into tbl VALUES (3,8), (2,2) ON CONFLICT (a) DO UPDATE SET b = b*2 WHERE b == excluded.b;
select * from tbl;
pragma enable_verification;
create or replace table tbl (a integer default 3);
insert into tbl VALUES ((3+DEFAULT));
pragma enable_verification;
create or replace table tbl(
	i integer PRIMARY KEY,
	j integer UNIQUE,
	k integer
);
insert into tbl VALUES
	(1, 10, 1),
	(2, 20, 1),
	(3, 30, 2);
insert into tbl VALUES (3,5,1) ON CONFLICT (i) DO UPDATE SET k = 5;
select * from tbl;
insert into tbl VALUES (3,5,1) ON CONFLICT (i) DO UPDATE SET k = 1 + excluded.k;
select * from tbl;
insert into tbl VALUES (3,5,1) ON CONFLICT (i) DO UPDATE SET k = k + excluded.k;
select * from tbl;
pragma enable_verification;
create or replace table tbl (
	a integer primary key default 5,
	b integer
);
insert into tbl(b) VALUES (10);
select * from tbl;
insert into tbl(b) VALUES (10);
insert into tbl(b) VALUES (10) ON CONFLICT (a) DO NOTHING;
select * from tbl;
insert into tbl(b) VALUES (10) ON CONFLICT (a) DO UPDATE SET b = excluded.b * 2;
select * from tbl;
pragma enable_verification;
create table tbl (i integer, j integer);
insert into tbl values (5,3), (3,2);
create unique index my_index on tbl(i);
insert into tbl values (5,2) on conflict (i) do update set j = 10;
select * from tbl;
pragma enable_verification;
create or replace table index_tbl (
	i integer,
	j integer
);
insert into index_tbl values (5, 3);
create unique index other_index on index_tbl(i);
insert into index_tbl values (5, 5);
select * from index_tbl;
insert into index_tbl values (5, 10) on conflict on constraint other_index do update set j = excluded.j;
