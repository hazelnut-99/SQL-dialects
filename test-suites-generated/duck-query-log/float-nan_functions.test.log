PRAGMA enable_verification
SELECT nextafter(3, '-inf'::FLOAT)
SELECT nextafter(3, '-inf'::FLOAT)

SELECT nextafter(3, '-inf'::FLOAT)
SELECT nextafter(3, CAST('-inf' AS FLOAT))




SELECT nextafter(3, '-inf'::FLOAT)
SELECT nextafter(3, 'inf'::FLOAT)
SELECT nextafter(3, 'inf'::FLOAT)

SELECT nextafter(3, 'inf'::FLOAT)
SELECT nextafter(3, CAST('inf' AS FLOAT))




SELECT nextafter(3, 'inf'::FLOAT)
SELECT nextafter('inf'::FLOAT, 'inf'::FLOAT)
SELECT nextafter('inf'::FLOAT, 'inf'::FLOAT)

SELECT nextafter('inf'::FLOAT, 'inf'::FLOAT)
SELECT nextafter(CAST('inf' AS FLOAT), CAST('inf' AS FLOAT))




SELECT nextafter('inf'::FLOAT, 'inf'::FLOAT)
SELECT nextafter('-inf'::FLOAT, '-inf'::FLOAT)
SELECT nextafter('-inf'::FLOAT, '-inf'::FLOAT)

SELECT nextafter('-inf'::FLOAT, '-inf'::FLOAT)
SELECT nextafter(CAST('-inf' AS FLOAT), CAST('-inf' AS FLOAT))




SELECT nextafter('-inf'::FLOAT, '-inf'::FLOAT)
SELECT nextafter('nan'::FLOAT, '-inf'::FLOAT)
SELECT nextafter('nan'::FLOAT, '-inf'::FLOAT)

SELECT nextafter('nan'::FLOAT, '-inf'::FLOAT)
SELECT nextafter(CAST('nan' AS FLOAT), CAST('-inf' AS FLOAT))




SELECT nextafter('nan'::FLOAT, '-inf'::FLOAT)
SELECT nextafter(0, 'nan'::FLOAT)
SELECT nextafter(0, 'nan'::FLOAT)

SELECT nextafter(0, 'nan'::FLOAT)
SELECT nextafter(0, CAST('nan' AS FLOAT))




SELECT nextafter(0, 'nan'::FLOAT)
SELECT sign('-inf'::FLOAT)
SELECT sign('-inf'::FLOAT)

SELECT sign('-inf'::FLOAT)
SELECT sign(CAST('-inf' AS FLOAT))




SELECT sign('-inf'::FLOAT)
SELECT sign('inf'::FLOAT)
SELECT sign('inf'::FLOAT)

SELECT sign('inf'::FLOAT)
SELECT sign(CAST('inf' AS FLOAT))




SELECT sign('inf'::FLOAT)
SELECT sign('nan'::FLOAT)
SELECT sign('nan'::FLOAT)

SELECT sign('nan'::FLOAT)
SELECT sign(CAST('nan' AS FLOAT))




SELECT sign('nan'::FLOAT)
SELECT ceil('-inf'::FLOAT)
SELECT ceil('-inf'::FLOAT)

SELECT ceil('-inf'::FLOAT)
SELECT ceil(CAST('-inf' AS FLOAT))




SELECT ceil('-inf'::FLOAT)
SELECT ceil('inf'::FLOAT)
SELECT ceil('inf'::FLOAT)

SELECT ceil('inf'::FLOAT)
SELECT ceil(CAST('inf' AS FLOAT))




SELECT ceil('inf'::FLOAT)
SELECT ceil('nan'::FLOAT)
SELECT ceil('nan'::FLOAT)

SELECT ceil('nan'::FLOAT)
SELECT ceil(CAST('nan' AS FLOAT))




SELECT ceil('nan'::FLOAT)
SELECT floor('-inf'::FLOAT)
SELECT floor('-inf'::FLOAT)

SELECT floor('-inf'::FLOAT)
SELECT floor(CAST('-inf' AS FLOAT))




SELECT floor('-inf'::FLOAT)
SELECT floor('inf'::FLOAT)
SELECT floor('inf'::FLOAT)

SELECT floor('inf'::FLOAT)
SELECT floor(CAST('inf' AS FLOAT))




SELECT floor('inf'::FLOAT)
SELECT floor('nan'::FLOAT)
SELECT floor('nan'::FLOAT)

SELECT floor('nan'::FLOAT)
SELECT floor(CAST('nan' AS FLOAT))




SELECT floor('nan'::FLOAT)
SELECT round('-inf'::FLOAT)
SELECT round('-inf'::FLOAT)

SELECT round('-inf'::FLOAT)
SELECT round(CAST('-inf' AS FLOAT))




SELECT round('-inf'::FLOAT)
SELECT round('inf'::FLOAT)
SELECT round('inf'::FLOAT)

SELECT round('inf'::FLOAT)
SELECT round(CAST('inf' AS FLOAT))




SELECT round('inf'::FLOAT)
SELECT round('nan'::FLOAT)
SELECT round('nan'::FLOAT)

SELECT round('nan'::FLOAT)
SELECT round(CAST('nan' AS FLOAT))




SELECT round('nan'::FLOAT)
create table floats(f FLOAT);
insert into floats values ('inf'), ('-inf'), ('nan');
select f, abs(f), exp(f), pow(f, 2), sqrt(case when f < 0 then NULL else f end), cbrt(f), ln(case when f < 0 then NULL else f end), degrees(f), radians(f), gamma(f), lgamma(f), atan(f), atan2(f, 0)
from floats;
select f, abs(f), exp(f), pow(f, 2), sqrt(case when f < 0 then NULL else f end), cbrt(f), ln(case when f < 0 then NULL else f end), degrees(f), radians(f), gamma(f), lgamma(f), atan(f), atan2(f, 0)
from floats;

select f, abs(f), exp(f), pow(f, 2), sqrt(case when f < 0 then NULL else f end), cbrt(f), ln(case when f < 0 then NULL else f end), degrees(f), radians(f), gamma(f), lgamma(f), atan(f), atan2(f, 0)
from floats;
SELECT f, abs(f), exp(f), pow(f, 2), sqrt(CASE  WHEN ((f < 0)) THEN (NULL) ELSE f END), cbrt(f), ln(CASE  WHEN ((f < 0)) THEN (NULL) ELSE f END), degrees(f), radians(f), gamma(f), lgamma(f), atan(f), atan2(f, 0) FROM floats




select f, abs(f), exp(f), pow(f, 2), sqrt(case when f < 0 then NULL else f end), cbrt(f), ln(case when f < 0 then NULL else f end), degrees(f), radians(f), gamma(f), lgamma(f), atan(f), atan2(f, 0)
from floats;
select sin('inf'::FLOAT)
select sin('inf'::FLOAT)

select sin('inf'::FLOAT)
select sin('inf'::FLOAT)
select sin('-inf'::FLOAT)
select sin('-inf'::FLOAT)

select sin('-inf'::FLOAT)
select sin('-inf'::FLOAT)
select sin('nan'::FLOAT)
select sin('nan'::FLOAT)

select sin('nan'::FLOAT)
SELECT sin(CAST('nan' AS FLOAT))




select sin('nan'::FLOAT)
select sin('inf'::FLOAT)
select sin('inf'::FLOAT)

select sin('inf'::FLOAT)
select sin('inf'::FLOAT)
select sin('-inf'::FLOAT)
select sin('-inf'::FLOAT)

select sin('-inf'::FLOAT)
select sin('-inf'::FLOAT)
select sin('nan'::FLOAT)
select sin('nan'::FLOAT)

select sin('nan'::FLOAT)
SELECT sin(CAST('nan' AS FLOAT))




select sin('nan'::FLOAT)
select cos('inf'::FLOAT)
select cos('inf'::FLOAT)

select cos('inf'::FLOAT)
select cos('inf'::FLOAT)
select cos('-inf'::FLOAT)
select cos('-inf'::FLOAT)

select cos('-inf'::FLOAT)
select cos('-inf'::FLOAT)
select cos('nan'::FLOAT)
select cos('nan'::FLOAT)

select cos('nan'::FLOAT)
SELECT cos(CAST('nan' AS FLOAT))




select cos('nan'::FLOAT)
select tan('inf'::FLOAT)
select tan('inf'::FLOAT)

select tan('inf'::FLOAT)
select tan('inf'::FLOAT)
select tan('-inf'::FLOAT)
select tan('-inf'::FLOAT)

select tan('-inf'::FLOAT)
select tan('-inf'::FLOAT)
select tan('nan'::FLOAT)
select tan('nan'::FLOAT)

select tan('nan'::FLOAT)
SELECT tan(CAST('nan' AS FLOAT))




select tan('nan'::FLOAT)
select asin('inf'::FLOAT)
select asin('inf'::FLOAT)

select asin('inf'::FLOAT)
select asin('inf'::FLOAT)
select asin('-inf'::FLOAT)
select asin('-inf'::FLOAT)

select asin('-inf'::FLOAT)
select asin('-inf'::FLOAT)
select asin('nan'::FLOAT)
select asin('nan'::FLOAT)

select asin('nan'::FLOAT)
SELECT asin(CAST('nan' AS FLOAT))




select asin('nan'::FLOAT)
select acos('inf'::FLOAT)
select acos('inf'::FLOAT)

select acos('inf'::FLOAT)
select acos('inf'::FLOAT)
select acos('-inf'::FLOAT)
select acos('-inf'::FLOAT)

select acos('-inf'::FLOAT)
select acos('-inf'::FLOAT)
select acos('nan'::FLOAT)
select acos('nan'::FLOAT)

select acos('nan'::FLOAT)
SELECT acos(CAST('nan' AS FLOAT))




select acos('nan'::FLOAT)
select cot('inf'::FLOAT)
select cot('inf'::FLOAT)

select cot('inf'::FLOAT)
select cot('inf'::FLOAT)
select cot('-inf'::FLOAT)
select cot('-inf'::FLOAT)

select cot('-inf'::FLOAT)
select cot('-inf'::FLOAT)
select cot('nan'::FLOAT)
select cot('nan'::FLOAT)

select cot('nan'::FLOAT)
SELECT cot(CAST('nan' AS FLOAT))




select cot('nan'::FLOAT)
drop table floats
SELECT nextafter(3, '-inf'::DOUBLE)
SELECT nextafter(3, '-inf'::DOUBLE)

SELECT nextafter(3, '-inf'::DOUBLE)
SELECT nextafter(3, CAST('-inf' AS DOUBLE))




SELECT nextafter(3, '-inf'::DOUBLE)
SELECT nextafter(3, 'inf'::DOUBLE)
SELECT nextafter(3, 'inf'::DOUBLE)

SELECT nextafter(3, 'inf'::DOUBLE)
SELECT nextafter(3, CAST('inf' AS DOUBLE))




SELECT nextafter(3, 'inf'::DOUBLE)
SELECT nextafter('inf'::DOUBLE, 'inf'::DOUBLE)
SELECT nextafter('inf'::DOUBLE, 'inf'::DOUBLE)

SELECT nextafter('inf'::DOUBLE, 'inf'::DOUBLE)
SELECT nextafter(CAST('inf' AS DOUBLE), CAST('inf' AS DOUBLE))




SELECT nextafter('inf'::DOUBLE, 'inf'::DOUBLE)
SELECT nextafter('-inf'::DOUBLE, '-inf'::DOUBLE)
SELECT nextafter('-inf'::DOUBLE, '-inf'::DOUBLE)

SELECT nextafter('-inf'::DOUBLE, '-inf'::DOUBLE)
SELECT nextafter(CAST('-inf' AS DOUBLE), CAST('-inf' AS DOUBLE))




SELECT nextafter('-inf'::DOUBLE, '-inf'::DOUBLE)
SELECT nextafter('nan'::DOUBLE, '-inf'::DOUBLE)
SELECT nextafter('nan'::DOUBLE, '-inf'::DOUBLE)

SELECT nextafter('nan'::DOUBLE, '-inf'::DOUBLE)
SELECT nextafter(CAST('nan' AS DOUBLE), CAST('-inf' AS DOUBLE))




SELECT nextafter('nan'::DOUBLE, '-inf'::DOUBLE)
SELECT nextafter(0, 'nan'::DOUBLE)
SELECT nextafter(0, 'nan'::DOUBLE)

SELECT nextafter(0, 'nan'::DOUBLE)
SELECT nextafter(0, CAST('nan' AS DOUBLE))




SELECT nextafter(0, 'nan'::DOUBLE)
SELECT sign('-inf'::DOUBLE)
SELECT sign('-inf'::DOUBLE)

SELECT sign('-inf'::DOUBLE)
SELECT sign(CAST('-inf' AS DOUBLE))




SELECT sign('-inf'::DOUBLE)
SELECT sign('inf'::DOUBLE)
SELECT sign('inf'::DOUBLE)

SELECT sign('inf'::DOUBLE)
SELECT sign(CAST('inf' AS DOUBLE))




SELECT sign('inf'::DOUBLE)
SELECT sign('nan'::DOUBLE)
SELECT sign('nan'::DOUBLE)

SELECT sign('nan'::DOUBLE)
SELECT sign(CAST('nan' AS DOUBLE))




SELECT sign('nan'::DOUBLE)
SELECT ceil('-inf'::DOUBLE)
SELECT ceil('-inf'::DOUBLE)

SELECT ceil('-inf'::DOUBLE)
SELECT ceil(CAST('-inf' AS DOUBLE))




SELECT ceil('-inf'::DOUBLE)
SELECT ceil('inf'::DOUBLE)
SELECT ceil('inf'::DOUBLE)

SELECT ceil('inf'::DOUBLE)
SELECT ceil(CAST('inf' AS DOUBLE))




SELECT ceil('inf'::DOUBLE)
SELECT ceil('nan'::DOUBLE)
SELECT ceil('nan'::DOUBLE)

SELECT ceil('nan'::DOUBLE)
SELECT ceil(CAST('nan' AS DOUBLE))




SELECT ceil('nan'::DOUBLE)
SELECT floor('-inf'::DOUBLE)
SELECT floor('-inf'::DOUBLE)

SELECT floor('-inf'::DOUBLE)
SELECT floor(CAST('-inf' AS DOUBLE))




SELECT floor('-inf'::DOUBLE)
SELECT floor('inf'::DOUBLE)
SELECT floor('inf'::DOUBLE)

SELECT floor('inf'::DOUBLE)
SELECT floor(CAST('inf' AS DOUBLE))




SELECT floor('inf'::DOUBLE)
SELECT floor('nan'::DOUBLE)
SELECT floor('nan'::DOUBLE)

SELECT floor('nan'::DOUBLE)
SELECT floor(CAST('nan' AS DOUBLE))




SELECT floor('nan'::DOUBLE)
SELECT round('-inf'::DOUBLE)
SELECT round('-inf'::DOUBLE)

SELECT round('-inf'::DOUBLE)
SELECT round(CAST('-inf' AS DOUBLE))




SELECT round('-inf'::DOUBLE)
SELECT round('inf'::DOUBLE)
SELECT round('inf'::DOUBLE)

SELECT round('inf'::DOUBLE)
SELECT round(CAST('inf' AS DOUBLE))




SELECT round('inf'::DOUBLE)
SELECT round('nan'::DOUBLE)
SELECT round('nan'::DOUBLE)

SELECT round('nan'::DOUBLE)
SELECT round(CAST('nan' AS DOUBLE))




SELECT round('nan'::DOUBLE)
create table floats(f DOUBLE);
insert into floats values ('inf'), ('-inf'), ('nan');
select f, abs(f), exp(f), pow(f, 2), sqrt(case when f < 0 then NULL else f end), cbrt(f), ln(case when f < 0 then NULL else f end), degrees(f), radians(f), gamma(f), lgamma(f), atan(f), atan2(f, 0)
from floats;
select f, abs(f), exp(f), pow(f, 2), sqrt(case when f < 0 then NULL else f end), cbrt(f), ln(case when f < 0 then NULL else f end), degrees(f), radians(f), gamma(f), lgamma(f), atan(f), atan2(f, 0)
from floats;

select f, abs(f), exp(f), pow(f, 2), sqrt(case when f < 0 then NULL else f end), cbrt(f), ln(case when f < 0 then NULL else f end), degrees(f), radians(f), gamma(f), lgamma(f), atan(f), atan2(f, 0)
from floats;
SELECT f, abs(f), exp(f), pow(f, 2), sqrt(CASE  WHEN ((f < 0)) THEN (NULL) ELSE f END), cbrt(f), ln(CASE  WHEN ((f < 0)) THEN (NULL) ELSE f END), degrees(f), radians(f), gamma(f), lgamma(f), atan(f), atan2(f, 0) FROM floats




select f, abs(f), exp(f), pow(f, 2), sqrt(case when f < 0 then NULL else f end), cbrt(f), ln(case when f < 0 then NULL else f end), degrees(f), radians(f), gamma(f), lgamma(f), atan(f), atan2(f, 0)
from floats;
select sin('inf'::DOUBLE)
select sin('inf'::DOUBLE)

select sin('inf'::DOUBLE)
select sin('inf'::DOUBLE)
select sin('-inf'::DOUBLE)
select sin('-inf'::DOUBLE)

select sin('-inf'::DOUBLE)
select sin('-inf'::DOUBLE)
select sin('nan'::DOUBLE)
select sin('nan'::DOUBLE)

select sin('nan'::DOUBLE)
SELECT sin(CAST('nan' AS DOUBLE))




select sin('nan'::DOUBLE)
select sin('inf'::DOUBLE)
select sin('inf'::DOUBLE)

select sin('inf'::DOUBLE)
select sin('inf'::DOUBLE)
select sin('-inf'::DOUBLE)
select sin('-inf'::DOUBLE)

select sin('-inf'::DOUBLE)
select sin('-inf'::DOUBLE)
select sin('nan'::DOUBLE)
select sin('nan'::DOUBLE)

select sin('nan'::DOUBLE)
SELECT sin(CAST('nan' AS DOUBLE))




select sin('nan'::DOUBLE)
select cos('inf'::DOUBLE)
select cos('inf'::DOUBLE)

select cos('inf'::DOUBLE)
select cos('inf'::DOUBLE)
select cos('-inf'::DOUBLE)
select cos('-inf'::DOUBLE)

select cos('-inf'::DOUBLE)
select cos('-inf'::DOUBLE)
select cos('nan'::DOUBLE)
select cos('nan'::DOUBLE)

select cos('nan'::DOUBLE)
SELECT cos(CAST('nan' AS DOUBLE))




select cos('nan'::DOUBLE)
select tan('inf'::DOUBLE)
select tan('inf'::DOUBLE)

select tan('inf'::DOUBLE)
select tan('inf'::DOUBLE)
select tan('-inf'::DOUBLE)
select tan('-inf'::DOUBLE)

select tan('-inf'::DOUBLE)
select tan('-inf'::DOUBLE)
select tan('nan'::DOUBLE)
select tan('nan'::DOUBLE)

select tan('nan'::DOUBLE)
SELECT tan(CAST('nan' AS DOUBLE))




select tan('nan'::DOUBLE)
select asin('inf'::DOUBLE)
select asin('inf'::DOUBLE)

select asin('inf'::DOUBLE)
select asin('inf'::DOUBLE)
select asin('-inf'::DOUBLE)
select asin('-inf'::DOUBLE)

select asin('-inf'::DOUBLE)
select asin('-inf'::DOUBLE)
select asin('nan'::DOUBLE)
select asin('nan'::DOUBLE)

select asin('nan'::DOUBLE)
SELECT asin(CAST('nan' AS DOUBLE))




select asin('nan'::DOUBLE)
select acos('inf'::DOUBLE)
select acos('inf'::DOUBLE)

select acos('inf'::DOUBLE)
select acos('inf'::DOUBLE)
select acos('-inf'::DOUBLE)
select acos('-inf'::DOUBLE)

select acos('-inf'::DOUBLE)
select acos('-inf'::DOUBLE)
select acos('nan'::DOUBLE)
select acos('nan'::DOUBLE)

select acos('nan'::DOUBLE)
SELECT acos(CAST('nan' AS DOUBLE))




select acos('nan'::DOUBLE)
select cot('inf'::DOUBLE)
select cot('inf'::DOUBLE)

select cot('inf'::DOUBLE)
select cot('inf'::DOUBLE)
select cot('-inf'::DOUBLE)
select cot('-inf'::DOUBLE)

select cot('-inf'::DOUBLE)
select cot('-inf'::DOUBLE)
select cot('nan'::DOUBLE)
select cot('nan'::DOUBLE)

select cot('nan'::DOUBLE)
SELECT cot(CAST('nan' AS DOUBLE))




select cot('nan'::DOUBLE)
drop table floats
SELECT nextafter('inf'::float, '-inf'::float)
SELECT nextafter('inf'::float, '-inf'::float)

SELECT nextafter('inf'::float, '-inf'::float)
SELECT nextafter(CAST('inf' AS FLOAT), CAST('-inf' AS FLOAT))




SELECT nextafter('inf'::float, '-inf'::float)
SELECT nextafter('-inf'::float, 'inf'::float)
SELECT nextafter('-inf'::float, 'inf'::float)

SELECT nextafter('-inf'::float, 'inf'::float)
SELECT nextafter(CAST('-inf' AS FLOAT), CAST('inf' AS FLOAT))




SELECT nextafter('-inf'::float, 'inf'::float)
SELECT nextafter('inf'::double, '-inf'::double)
SELECT nextafter('inf'::double, '-inf'::double)

SELECT nextafter('inf'::double, '-inf'::double)
SELECT nextafter(CAST('inf' AS DOUBLE), CAST('-inf' AS DOUBLE))




SELECT nextafter('inf'::double, '-inf'::double)
SELECT nextafter('-inf'::double, 'inf'::double)
SELECT nextafter('-inf'::double, 'inf'::double)

SELECT nextafter('-inf'::double, 'inf'::double)
SELECT nextafter(CAST('-inf' AS DOUBLE), CAST('inf' AS DOUBLE))




SELECT nextafter('-inf'::double, 'inf'::double)
