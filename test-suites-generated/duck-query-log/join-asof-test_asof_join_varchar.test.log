PRAGMA enable_verification;
CREATE TABLE events0 (begin VARCHAR, value INTEGER);;
INSERT INTO events0 VALUES
	(NULL, -1),
	(1, 0),
	(3, 1),
	(6, 2),
	(8, 3),
	('infinity', 9)
;;
CREATE TABLE probe0 AS 
	SELECT range::VARCHAR AS begin
	FROM range(0,10)
;;
SELECT p.begin, e.value
FROM probe0 p ASOF JOIN events0 e
ON p.begin >= e.begin
ORDER BY p.begin ASC;
SELECT p.begin, e.value
FROM probe0 p ASOF JOIN events0 e
ON p.begin >= e.begin
ORDER BY p.begin ASC;
;
SELECT p.begin, e.value
FROM probe0 p ASOF JOIN events0 e
ON p.begin >= e.begin
ORDER BY p.begin ASC;
SELECT p."begin", e."value" FROM probe0 AS p ASOF INNER JOIN events0 AS e ON ((p."begin" >= e."begin")) ORDER BY p."begin" ASC;
;
;
;
;
SELECT p.begin, e.value
FROM probe0 p ASOF JOIN events0 e
ON p.begin >= e.begin
ORDER BY p.begin ASC;
SELECT p.begin, e.value
FROM probe0 p ASOF JOIN events0 e
USING (begin)
ORDER BY p.begin ASC;
SELECT p.begin, e.value
FROM probe0 p ASOF JOIN events0 e
USING (begin)
ORDER BY p.begin ASC;
;
SELECT p.begin, e.value
FROM probe0 p ASOF JOIN events0 e
USING (begin)
ORDER BY p.begin ASC;
SELECT p."begin", e."value" FROM probe0 AS p ASOF INNER JOIN events0 AS e USING (begin) ORDER BY p."begin" ASC;
;
;
;
;
SELECT p.begin, e.value
FROM probe0 p ASOF JOIN events0 e
USING (begin)
ORDER BY p.begin ASC;
SELECT p.begin, e.value
FROM probe0 p ASOF LEFT JOIN events0 e
ON p.begin >= e.begin
ORDER BY p.begin ASC;
SELECT p.begin, e.value
FROM probe0 p ASOF LEFT JOIN events0 e
ON p.begin >= e.begin
ORDER BY p.begin ASC;
;
SELECT p.begin, e.value
FROM probe0 p ASOF LEFT JOIN events0 e
ON p.begin >= e.begin
ORDER BY p.begin ASC;
SELECT p."begin", e."value" FROM probe0 AS p ASOF LEFT JOIN events0 AS e ON ((p."begin" >= e."begin")) ORDER BY p."begin" ASC;
;
;
;
;
SELECT p.begin, e.value
FROM probe0 p ASOF LEFT JOIN events0 e
ON p.begin >= e.begin
ORDER BY p.begin ASC;
SELECT p.begin, e.value
FROM probe0 p ASOF LEFT JOIN events0 e
USING (begin)
ORDER BY p.begin ASC;
SELECT p.begin, e.value
FROM probe0 p ASOF LEFT JOIN events0 e
USING (begin)
ORDER BY p.begin ASC;
;
SELECT p.begin, e.value
FROM probe0 p ASOF LEFT JOIN events0 e
USING (begin)
ORDER BY p.begin ASC;
SELECT p."begin", e."value" FROM probe0 AS p ASOF LEFT JOIN events0 AS e USING (begin) ORDER BY p."begin" ASC;
;
;
;
;
SELECT p.begin, e.value
FROM probe0 p ASOF LEFT JOIN events0 e
USING (begin)
ORDER BY p.begin ASC;
SELECT p.begin, e.value
FROM probe0 p ASOF RIGHT JOIN events0 e
ON p.begin >= e.begin
ORDER BY ALL;
SELECT p.begin, e.value
FROM probe0 p ASOF RIGHT JOIN events0 e
ON p.begin >= e.begin
ORDER BY ALL;
;
SELECT p.begin, e.value
FROM probe0 p ASOF RIGHT JOIN events0 e
ON p.begin >= e.begin
ORDER BY ALL;
SELECT p."begin", e."value" FROM probe0 AS p ASOF RIGHT JOIN events0 AS e ON ((p."begin" >= e."begin")) ORDER BY COLUMNS(*);
;
;
;
;
SELECT p.begin, e.value
FROM probe0 p ASOF RIGHT JOIN events0 e
ON p.begin >= e.begin
ORDER BY ALL;
SELECT p.begin, e.value
FROM probe0 p ASOF RIGHT JOIN events0 e
USING (begin)
ORDER BY ALL;
SELECT p.begin, e.value
FROM probe0 p ASOF RIGHT JOIN events0 e
USING (begin)
ORDER BY ALL;
;
SELECT p.begin, e.value
FROM probe0 p ASOF RIGHT JOIN events0 e
USING (begin)
ORDER BY ALL;
SELECT p."begin", e."value" FROM probe0 AS p ASOF RIGHT JOIN events0 AS e USING (begin) ORDER BY COLUMNS(*);
;
;
;
;
SELECT p.begin, e.value
FROM probe0 p ASOF RIGHT JOIN events0 e
USING (begin)
ORDER BY ALL;
