WITH t AS (
  SELECT 1 AS r, [{n:1}, {n:2}] AS s
  UNION
  SELECT 2 AS r, [{n:3}, {n:4}] AS s
)
SELECT r, s1.s.n FROM t
LEFT JOIN UNNEST(s) AS s1(s) ON TRUE
ORDER BY 1, 2;
WITH t AS (
  SELECT 1 AS r, ARRAY[1, 2, 3] AS a
  UNION SELECT 2 AS r, ARRAY[4] AS a
  UNION SELECT 4 AS r, ARRAY[] AS a
)
SELECT r, a.value
FROM t
LEFT JOIN UNNEST(a) AS a(value) ON TRUE
ORDER BY 1, 2;
WITH t AS (
  SELECT 1 AS r, ARRAY[1, 2, 3] AS a
  UNION SELECT 2 AS r, ARRAY[4] AS a
  UNION SELECT 4 AS r, ARRAY[]::INTEGER[] AS a
)
SELECT r, a.value
FROM t
LEFT JOIN UNNEST(a) AS a(value) ON TRUE AND a.value IS NULL
ORDER BY 1, 2;
WITH t AS (
  SELECT 1 AS r, ARRAY[1, 2, 3] AS a
  UNION SELECT 2 AS r, ARRAY[4] AS a
  UNION SELECT 4 AS r, ARRAY[] AS a
)
SELECT r, a.value
FROM t
LEFT JOIN UNNEST(a) AS a(value) ON (1 = 1) AND TRUE AND list_contains([2, 3], 2)
ORDER BY 1, 2;
WITH t AS (
  SELECT 1 AS r, [{n:1}, {n:2}] AS s
  UNION
  SELECT 2 AS r, [{n:3}, {n:4}] AS s
)
SELECT r, s1.s.n FROM t
LEFT JOIN UNNEST(s) AS s1(s) ON FALSE;
CREATE TABLE integers(i INTEGER, j INTEGER);
INSERT INTO integers VALUES (1, 2), (2, 3), (3, 4);
CREATE TABLE integers2(k INTEGER, l INTEGER);
INSERT INTO integers2 VALUES (1, 10), (2, 20);
SELECT * FROM integers LEFT OUTER JOIN integers2 ON TRUE AND integers.i=integers2.k AND TRUE ORDER BY i;
SELECT * FROM integers LEFT OUTER JOIN integers2 ON TRUE AND integers.i=integers2.k AND FALSE ORDER BY i;
SELECT * FROM integers LEFT OUTER JOIN integers2 ON TRUE ORDER BY i;
