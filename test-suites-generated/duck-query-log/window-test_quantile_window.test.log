SET default_null_order='nulls_first';;
PRAGMA enable_verification;
PRAGMA verify_external;
create table quantiles as select range r from range(10) union all values (NULL), (NULL), (NULL);;
SELECT r % 2, r, median(r) over (partition by r % 2 order by r) FROM quantiles ORDER BY 1, 2;
SELECT r % 2, r, median(r) over (partition by r % 2 order by r) FROM quantiles ORDER BY 1, 2;
;
SELECT r % 2, r, median(r) over (partition by r % 2 order by r) FROM quantiles ORDER BY 1, 2;
SELECT r % 2, r, median(r) over (partition by r % 2 order by r) FROM quantiles ORDER BY 1, 2;
SELECT (r % 2), r, median(r) OVER (PARTITION BY (r % 2) ORDER BY r) FROM quantiles ORDER BY 1, 2;
;
;
;
SELECT r % 2, r, median(r) over (partition by r % 2 order by r) FROM quantiles ORDER BY 1, 2;
SELECT r, median(r) over (order by r rows between 1 preceding and 1 following) FROM quantiles ORDER BY 1, 2;
SELECT r, median(r) over (order by r rows between 1 preceding and 1 following) FROM quantiles ORDER BY 1, 2;
;
SELECT r, median(r) over (order by r rows between 1 preceding and 1 following) FROM quantiles ORDER BY 1, 2;
SELECT r, median(r) over (order by r rows between 1 preceding and 1 following) FROM quantiles ORDER BY 1, 2;
SELECT r, median(r) OVER (ORDER BY r ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING) FROM quantiles ORDER BY 1, 2;
;
;
;
SELECT r, median(r) over (order by r rows between 1 preceding and 1 following) FROM quantiles ORDER BY 1, 2;
SELECT r, median(r) over (order by r rows between 1 preceding and 3 following) FROM quantiles ORDER BY 1, 2;
SELECT r, median(r) over (order by r rows between 1 preceding and 3 following) FROM quantiles ORDER BY 1, 2;
;
SELECT r, median(r) over (order by r rows between 1 preceding and 3 following) FROM quantiles ORDER BY 1, 2;
SELECT r, median(r) over (order by r rows between 1 preceding and 3 following) FROM quantiles ORDER BY 1, 2;
SELECT r, median(r) OVER (ORDER BY r ROWS BETWEEN 1 PRECEDING AND 3 FOLLOWING) FROM quantiles ORDER BY 1, 2;
;
;
;
SELECT r, median(r) over (order by r rows between 1 preceding and 3 following) FROM quantiles ORDER BY 1, 2;
SELECT r, quantile(r, 0.5) over (order by r rows between 1 preceding and 3 following) FROM quantiles ORDER BY 1, 2;
SELECT r, quantile(r, 0.5) over (order by r rows between 1 preceding and 3 following) FROM quantiles ORDER BY 1, 2;
;
SELECT r, quantile(r, 0.5) over (order by r rows between 1 preceding and 3 following) FROM quantiles ORDER BY 1, 2;
SELECT r, quantile(r, 0.5) over (order by r rows between 1 preceding and 3 following) FROM quantiles ORDER BY 1, 2;
SELECT r, quantile(r, 0.5) OVER (ORDER BY r ROWS BETWEEN 1 PRECEDING AND 3 FOLLOWING) FROM quantiles ORDER BY 1, 2;
;
;
;
SELECT r, quantile(r, 0.5) over (order by r rows between 1 preceding and 3 following) FROM quantiles ORDER BY 1, 2;
SELECT r % 2, r, median(r::VARCHAR) over (partition by r % 2 order by r) FROM quantiles ORDER BY 1, 2;
SELECT r % 2, r, median(r::VARCHAR) over (partition by r % 2 order by r) FROM quantiles ORDER BY 1, 2;
;
SELECT r % 2, r, median(r::VARCHAR) over (partition by r % 2 order by r) FROM quantiles ORDER BY 1, 2;
SELECT r % 2, r, median(r::VARCHAR) over (partition by r % 2 order by r) FROM quantiles ORDER BY 1, 2;
SELECT (r % 2), r, median(CAST(r AS VARCHAR)) OVER (PARTITION BY (r % 2) ORDER BY r) FROM quantiles ORDER BY 1, 2;
;
;
;
SELECT r % 2, r, median(r::VARCHAR) over (partition by r % 2 order by r) FROM quantiles ORDER BY 1, 2;
SELECT r, median(r::VARCHAR) over (order by r rows between 1 preceding and 1 following) FROM quantiles ORDER BY 1, 2;
SELECT r, median(r::VARCHAR) over (order by r rows between 1 preceding and 1 following) FROM quantiles ORDER BY 1, 2;
;
SELECT r, median(r::VARCHAR) over (order by r rows between 1 preceding and 1 following) FROM quantiles ORDER BY 1, 2;
SELECT r, median(r::VARCHAR) over (order by r rows between 1 preceding and 1 following) FROM quantiles ORDER BY 1, 2;
SELECT r, median(CAST(r AS VARCHAR)) OVER (ORDER BY r ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING) FROM quantiles ORDER BY 1, 2;
;
;
;
SELECT r, median(r::VARCHAR) over (order by r rows between 1 preceding and 1 following) FROM quantiles ORDER BY 1, 2;
SELECT r, quantile(r::VARCHAR, 0.5) over (order by r rows between 1 preceding and 3 following) FROM quantiles ORDER BY 1, 2;
SELECT r, quantile(r::VARCHAR, 0.5) over (order by r rows between 1 preceding and 3 following) FROM quantiles ORDER BY 1, 2;
;
SELECT r, quantile(r::VARCHAR, 0.5) over (order by r rows between 1 preceding and 3 following) FROM quantiles ORDER BY 1, 2;
SELECT r, quantile(r::VARCHAR, 0.5) over (order by r rows between 1 preceding and 3 following) FROM quantiles ORDER BY 1, 2;
SELECT r, quantile(CAST(r AS VARCHAR), 0.5) OVER (ORDER BY r ROWS BETWEEN 1 PRECEDING AND 3 FOLLOWING) FROM quantiles ORDER BY 1, 2;
;
;
;
SELECT r, quantile(r::VARCHAR, 0.5) over (order by r rows between 1 preceding and 3 following) FROM quantiles ORDER BY 1, 2;
SELECT r, median('prefix-' || r::VARCHAR || '-suffix') over (order by r rows between 1 preceding and 1 following) FROM quantiles ORDER BY 1, 2;
SELECT r, median('prefix-' || r::VARCHAR || '-suffix') over (order by r rows between 1 preceding and 1 following) FROM quantiles ORDER BY 1, 2;
;
SELECT r, median('prefix-' || r::VARCHAR || '-suffix') over (order by r rows between 1 preceding and 1 following) FROM quantiles ORDER BY 1, 2;
SELECT r, median('prefix-' || r::VARCHAR || '-suffix') over (order by r rows between 1 preceding and 1 following) FROM quantiles ORDER BY 1, 2;
SELECT r, median((('prefix-' || CAST(r AS VARCHAR)) || '-suffix')) OVER (ORDER BY r ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING) FROM quantiles ORDER BY 1, 2;
;
;
;
SELECT r, median('prefix-' || r::VARCHAR || '-suffix') over (order by r rows between 1 preceding and 1 following) FROM quantiles ORDER BY 1, 2;
SELECT r % 3, r, n, median(n) over (partition by r % 3 order by r)
FROM (SELECT r, CASE r % 2 WHEN 0 THEN r ELSE NULL END AS n FROM quantiles) nulls
ORDER BY 1, 2;
SELECT r % 3, r, n, median(n) over (partition by r % 3 order by r)
FROM (SELECT r, CASE r % 2 WHEN 0 THEN r ELSE NULL END AS n FROM quantiles) nulls
ORDER BY 1, 2;
;
SELECT r % 3, r, n, median(n) over (partition by r % 3 order by r)
FROM (SELECT r, CASE r % 2 WHEN 0 THEN r ELSE NULL END AS n FROM quantiles) nulls
ORDER BY 1, 2;
SELECT r % 3, r, n, median(n) over (partition by r % 3 order by r)
FROM (SELECT r, CASE r % 2 WHEN 0 THEN r ELSE NULL END AS n FROM quantiles) nulls
ORDER BY 1, 2;
SELECT (r % 3), r, n, median(n) OVER (PARTITION BY (r % 3) ORDER BY r) FROM (SELECT r, CASE  WHEN (((r % 2) = 0)) THEN (r) ELSE NULL END AS n FROM quantiles) AS "nulls" ORDER BY 1, 2;
;
;
;
;
SELECT r % 3, r, n, median(n) over (partition by r % 3 order by r)
FROM (SELECT r, CASE r % 2 WHEN 0 THEN r ELSE NULL END AS n FROM quantiles) nulls
ORDER BY 1, 2;
SELECT r, n, median(n) over (order by r rows between 1 preceding and 1 following)
FROM (SELECT r, CASE r % 2 WHEN 0 THEN r ELSE NULL END AS n FROM quantiles) nulls
ORDER BY 1;
SELECT r, n, median(n) over (order by r rows between 1 preceding and 1 following)
FROM (SELECT r, CASE r % 2 WHEN 0 THEN r ELSE NULL END AS n FROM quantiles) nulls
ORDER BY 1;
;
SELECT r, n, median(n) over (order by r rows between 1 preceding and 1 following)
FROM (SELECT r, CASE r % 2 WHEN 0 THEN r ELSE NULL END AS n FROM quantiles) nulls
ORDER BY 1;
SELECT r, n, median(n) over (order by r rows between 1 preceding and 1 following)
FROM (SELECT r, CASE r % 2 WHEN 0 THEN r ELSE NULL END AS n FROM quantiles) nulls
ORDER BY 1;
SELECT r, n, median(n) OVER (ORDER BY r ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING) FROM (SELECT r, CASE  WHEN (((r % 2) = 0)) THEN (r) ELSE NULL END AS n FROM quantiles) AS "nulls" ORDER BY 1;
;
;
;
;
SELECT r, n, median(n) over (order by r rows between 1 preceding and 1 following)
FROM (SELECT r, CASE r % 2 WHEN 0 THEN r ELSE NULL END AS n FROM quantiles) nulls
ORDER BY 1;
SELECT r, n, median(n) over (order by r rows between 1 preceding and 3 following)
FROM (SELECT r, CASE r % 2 WHEN 0 THEN r ELSE NULL END AS n FROM quantiles) nulls
ORDER BY 1;
SELECT r, n, median(n) over (order by r rows between 1 preceding and 3 following)
FROM (SELECT r, CASE r % 2 WHEN 0 THEN r ELSE NULL END AS n FROM quantiles) nulls
ORDER BY 1;
;
SELECT r, n, median(n) over (order by r rows between 1 preceding and 3 following)
FROM (SELECT r, CASE r % 2 WHEN 0 THEN r ELSE NULL END AS n FROM quantiles) nulls
ORDER BY 1;
SELECT r, n, median(n) over (order by r rows between 1 preceding and 3 following)
FROM (SELECT r, CASE r % 2 WHEN 0 THEN r ELSE NULL END AS n FROM quantiles) nulls
ORDER BY 1;
SELECT r, n, median(n) OVER (ORDER BY r ROWS BETWEEN 1 PRECEDING AND 3 FOLLOWING) FROM (SELECT r, CASE  WHEN (((r % 2) = 0)) THEN (r) ELSE NULL END AS n FROM quantiles) AS "nulls" ORDER BY 1;
;
;
;
;
SELECT r, n, median(n) over (order by r rows between 1 preceding and 3 following)
FROM (SELECT r, CASE r % 2 WHEN 0 THEN r ELSE NULL END AS n FROM quantiles) nulls
ORDER BY 1;
SELECT r, n, median(n) over (order by r rows between unbounded preceding and unbounded following)
FROM (SELECT r, CASE r % 2 WHEN 0 THEN r ELSE NULL END AS n FROM quantiles) nulls
ORDER BY 1;
SELECT r, n, median(n) over (order by r rows between unbounded preceding and unbounded following)
FROM (SELECT r, CASE r % 2 WHEN 0 THEN r ELSE NULL END AS n FROM quantiles) nulls
ORDER BY 1;
;
SELECT r, n, median(n) over (order by r rows between unbounded preceding and unbounded following)
FROM (SELECT r, CASE r % 2 WHEN 0 THEN r ELSE NULL END AS n FROM quantiles) nulls
ORDER BY 1;
SELECT r, n, median(n) over (order by r rows between unbounded preceding and unbounded following)
FROM (SELECT r, CASE r % 2 WHEN 0 THEN r ELSE NULL END AS n FROM quantiles) nulls
ORDER BY 1;
SELECT r, n, median(n) OVER (ORDER BY r ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) FROM (SELECT r, CASE  WHEN (((r % 2) = 0)) THEN (r) ELSE NULL END AS n FROM quantiles) AS "nulls" ORDER BY 1;
;
;
;
;
SELECT r, n, median(n) over (order by r rows between unbounded preceding and unbounded following)
FROM (SELECT r, CASE r % 2 WHEN 0 THEN r ELSE NULL END AS n FROM quantiles) nulls
ORDER BY 1;
WITH t(i, p, f) AS (VALUES
	(0, 1, 1),
	(1, 1, 1),
	(2, 1, 1),
	(3, 3, 1),
	(4, 1, 1),
	(5, 3, 1)
)
SELECT i, MEDIAN(i) OVER (ORDER BY i ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
WITH t(i, p, f) AS (VALUES
	(0, 1, 1),
	(1, 1, 1),
	(2, 1, 1),
	(3, 3, 1),
	(4, 1, 1),
	(5, 3, 1)
)
SELECT i, MEDIAN(i) OVER (ORDER BY i ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
;
WITH t(i, p, f) AS (VALUES
	(0, 1, 1),
	(1, 1, 1),
	(2, 1, 1),
	(3, 3, 1),
	(4, 1, 1),
	(5, 3, 1)
)
SELECT i, MEDIAN(i) OVER (ORDER BY i ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
WITH t(i, p, f) AS (VALUES
	(0, 1, 1),
	(1, 1, 1),
	(2, 1, 1),
	(3, 3, 1),
	(4, 1, 1),
	(5, 3, 1)
)
SELECT i, MEDIAN(i) OVER (ORDER BY i ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
WITH t (i, p, f) AS (SELECT * FROM (VALUES (0, 1, 1), (1, 1, 1), (2, 1, 1), (3, 3, 1), (4, 1, 1), (5, 3, 1)) AS valueslist)SELECT i, median(i) OVER (ORDER BY i ROWS BETWEEN p PRECEDING AND f FOLLOWING) FROM t ORDER BY 1;
;
;
;
;
WITH t(i, p, f) AS (VALUES
	(0, 1, 1),
	(1, 1, 1),
	(2, 1, 1),
	(3, 3, 1),
	(4, 1, 1),
	(5, 3, 1)
)
SELECT i, MEDIAN(i) OVER (ORDER BY i ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
WITH t(r, i, p, f) AS (VALUES
	(0, 0, 1, 1),
	(1, 1, 1, 1),
	(2, 2, 1, 1),
	(3, 0, 1, 1),
	(4, 1, 1, 1),
	(5, 2, 1, 1)
)
SELECT r, MEDIAN(i) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
WITH t(r, i, p, f) AS (VALUES
	(0, 0, 1, 1),
	(1, 1, 1, 1),
	(2, 2, 1, 1),
	(3, 0, 1, 1),
	(4, 1, 1, 1),
	(5, 2, 1, 1)
)
SELECT r, MEDIAN(i) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
;
WITH t(r, i, p, f) AS (VALUES
	(0, 0, 1, 1),
	(1, 1, 1, 1),
	(2, 2, 1, 1),
	(3, 0, 1, 1),
	(4, 1, 1, 1),
	(5, 2, 1, 1)
)
SELECT r, MEDIAN(i) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
WITH t(r, i, p, f) AS (VALUES
	(0, 0, 1, 1),
	(1, 1, 1, 1),
	(2, 2, 1, 1),
	(3, 0, 1, 1),
	(4, 1, 1, 1),
	(5, 2, 1, 1)
)
SELECT r, MEDIAN(i) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
WITH t (r, i, p, f) AS (SELECT * FROM (VALUES (0, 0, 1, 1), (1, 1, 1, 1), (2, 2, 1, 1), (3, 0, 1, 1), (4, 1, 1, 1), (5, 2, 1, 1)) AS valueslist)SELECT r, median(i) OVER (ORDER BY r ROWS BETWEEN p PRECEDING AND f FOLLOWING) FROM t ORDER BY 1;
;
;
;
;
WITH t(r, i, p, f) AS (VALUES
	(0, 0, 1, 1),
	(1, 1, 1, 1),
	(2, 2, 1, 1),
	(3, 0, 1, 1),
	(4, 1, 1, 1),
	(5, 2, 1, 1)
)
SELECT r, MEDIAN(i) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
WITH t(r, i, p, f) AS (VALUES
	(0, 0, 1, 2),
	(1, 1, 1, 2),
	(2, 2, 1, 2),
	(3, 3, 1, 2),
	(4, 4, 1, 2),
	(5, 5, 1, 2)
)
SELECT r, QUANTILE_DISC(i, [0.25, 0.5, 0.75]) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
WITH t(r, i, p, f) AS (VALUES
	(0, 0, 1, 2),
	(1, 1, 1, 2),
	(2, 2, 1, 2),
	(3, 3, 1, 2),
	(4, 4, 1, 2),
	(5, 5, 1, 2)
)
SELECT r, QUANTILE_DISC(i, [0.25, 0.5, 0.75]) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
;
WITH t(r, i, p, f) AS (VALUES
	(0, 0, 1, 2),
	(1, 1, 1, 2),
	(2, 2, 1, 2),
	(3, 3, 1, 2),
	(4, 4, 1, 2),
	(5, 5, 1, 2)
)
SELECT r, QUANTILE_DISC(i, [0.25, 0.5, 0.75]) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
WITH t(r, i, p, f) AS (VALUES
	(0, 0, 1, 2),
	(1, 1, 1, 2),
	(2, 2, 1, 2),
	(3, 3, 1, 2),
	(4, 4, 1, 2),
	(5, 5, 1, 2)
)
SELECT r, QUANTILE_DISC(i, [0.25, 0.5, 0.75]) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
WITH t (r, i, p, f) AS (SELECT * FROM (VALUES (0, 0, 1, 2), (1, 1, 1, 2), (2, 2, 1, 2), (3, 3, 1, 2), (4, 4, 1, 2), (5, 5, 1, 2)) AS valueslist)SELECT r, quantile_disc(i, main.list_value(0.25, 0.5, 0.75)) OVER (ORDER BY r ROWS BETWEEN p PRECEDING AND f FOLLOWING) FROM t ORDER BY 1;
;
;
;
;
WITH t(r, i, p, f) AS (VALUES
	(0, 0, 1, 2),
	(1, 1, 1, 2),
	(2, 2, 1, 2),
	(3, 3, 1, 2),
	(4, 4, 1, 2),
	(5, 5, 1, 2)
)
SELECT r, QUANTILE_DISC(i, [0.25, 0.5, 0.75]) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
WITH t(r, i, p, f) AS (VALUES
	(0, NULL, 1, 2),
	(1, 1, 1, 2),
	(2, 2, 1, 2),
	(3, 3, 1, 2),
	(4, 4, 1, 2),
	(5, 5, 1, 2)
)
SELECT r, QUANTILE_DISC(i, [0.25, 0.5, 0.75]) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
WITH t(r, i, p, f) AS (VALUES
	(0, NULL, 1, 2),
	(1, 1, 1, 2),
	(2, 2, 1, 2),
	(3, 3, 1, 2),
	(4, 4, 1, 2),
	(5, 5, 1, 2)
)
SELECT r, QUANTILE_DISC(i, [0.25, 0.5, 0.75]) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
;
WITH t(r, i, p, f) AS (VALUES
	(0, NULL, 1, 2),
	(1, 1, 1, 2),
	(2, 2, 1, 2),
	(3, 3, 1, 2),
	(4, 4, 1, 2),
	(5, 5, 1, 2)
)
SELECT r, QUANTILE_DISC(i, [0.25, 0.5, 0.75]) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
WITH t(r, i, p, f) AS (VALUES
	(0, NULL, 1, 2),
	(1, 1, 1, 2),
	(2, 2, 1, 2),
	(3, 3, 1, 2),
	(4, 4, 1, 2),
	(5, 5, 1, 2)
)
SELECT r, QUANTILE_DISC(i, [0.25, 0.5, 0.75]) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
WITH t (r, i, p, f) AS (SELECT * FROM (VALUES (0, NULL, 1, 2), (1, 1, 1, 2), (2, 2, 1, 2), (3, 3, 1, 2), (4, 4, 1, 2), (5, 5, 1, 2)) AS valueslist)SELECT r, quantile_disc(i, main.list_value(0.25, 0.5, 0.75)) OVER (ORDER BY r ROWS BETWEEN p PRECEDING AND f FOLLOWING) FROM t ORDER BY 1;
;
;
;
;
WITH t(r, i, p, f) AS (VALUES
	(0, NULL, 1, 2),
	(1, 1, 1, 2),
	(2, 2, 1, 2),
	(3, 3, 1, 2),
	(4, 4, 1, 2),
	(5, 5, 1, 2)
)
SELECT r, QUANTILE_DISC(i, [0.25, 0.5, 0.75]) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
WITH t(r, i, p, f) AS (VALUES
	(0, NULL, 1, 2),
	(1, NULL, 1, 2),
	(2, NULL, 1, 2),
	(3, NULL, 1, 2),
	(4, NULL, 1, 2),
	(5, NULL, 1, 2)
)
SELECT r, QUANTILE_DISC(i, [0.25, 0.5, 0.75]) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
WITH t(r, i, p, f) AS (VALUES
	(0, NULL, 1, 2),
	(1, NULL, 1, 2),
	(2, NULL, 1, 2),
	(3, NULL, 1, 2),
	(4, NULL, 1, 2),
	(5, NULL, 1, 2)
)
SELECT r, QUANTILE_DISC(i, [0.25, 0.5, 0.75]) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
;
WITH t(r, i, p, f) AS (VALUES
	(0, NULL, 1, 2),
	(1, NULL, 1, 2),
	(2, NULL, 1, 2),
	(3, NULL, 1, 2),
	(4, NULL, 1, 2),
	(5, NULL, 1, 2)
)
SELECT r, QUANTILE_DISC(i, [0.25, 0.5, 0.75]) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
WITH t(r, i, p, f) AS (VALUES
	(0, NULL, 1, 2),
	(1, NULL, 1, 2),
	(2, NULL, 1, 2),
	(3, NULL, 1, 2),
	(4, NULL, 1, 2),
	(5, NULL, 1, 2)
)
SELECT r, QUANTILE_DISC(i, [0.25, 0.5, 0.75]) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
WITH t (r, i, p, f) AS (SELECT * FROM (VALUES (0, NULL, 1, 2), (1, NULL, 1, 2), (2, NULL, 1, 2), (3, NULL, 1, 2), (4, NULL, 1, 2), (5, NULL, 1, 2)) AS valueslist)SELECT r, quantile_disc(i, main.list_value(0.25, 0.5, 0.75)) OVER (ORDER BY r ROWS BETWEEN p PRECEDING AND f FOLLOWING) FROM t ORDER BY 1;
;
;
;
;
WITH t(r, i, p, f) AS (VALUES
	(0, NULL, 1, 2),
	(1, NULL, 1, 2),
	(2, NULL, 1, 2),
	(3, NULL, 1, 2),
	(4, NULL, 1, 2),
	(5, NULL, 1, 2)
)
SELECT r, QUANTILE_DISC(i, [0.25, 0.5, 0.75]) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
WITH t(r, i, p, f) AS (VALUES
	(0, 0, 1, 2),
	(1, 1, 1, 2),
	(2, 2, 1, 2),
	(3, 3, 1, 2),
	(4, 4, 1, 2),
	(5, 5, 1, 2)
)
SELECT r, QUANTILE_CONT(i, [0.25, 0.5, 0.75]) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
WITH t(r, i, p, f) AS (VALUES
	(0, 0, 1, 2),
	(1, 1, 1, 2),
	(2, 2, 1, 2),
	(3, 3, 1, 2),
	(4, 4, 1, 2),
	(5, 5, 1, 2)
)
SELECT r, QUANTILE_CONT(i, [0.25, 0.5, 0.75]) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
;
WITH t(r, i, p, f) AS (VALUES
	(0, 0, 1, 2),
	(1, 1, 1, 2),
	(2, 2, 1, 2),
	(3, 3, 1, 2),
	(4, 4, 1, 2),
	(5, 5, 1, 2)
)
SELECT r, QUANTILE_CONT(i, [0.25, 0.5, 0.75]) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
WITH t(r, i, p, f) AS (VALUES
	(0, 0, 1, 2),
	(1, 1, 1, 2),
	(2, 2, 1, 2),
	(3, 3, 1, 2),
	(4, 4, 1, 2),
	(5, 5, 1, 2)
)
SELECT r, QUANTILE_CONT(i, [0.25, 0.5, 0.75]) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
WITH t (r, i, p, f) AS (SELECT * FROM (VALUES (0, 0, 1, 2), (1, 1, 1, 2), (2, 2, 1, 2), (3, 3, 1, 2), (4, 4, 1, 2), (5, 5, 1, 2)) AS valueslist)SELECT r, quantile_cont(i, main.list_value(0.25, 0.5, 0.75)) OVER (ORDER BY r ROWS BETWEEN p PRECEDING AND f FOLLOWING) FROM t ORDER BY 1;
;
;
;
;
WITH t(r, i, p, f) AS (VALUES
	(0, 0, 1, 2),
	(1, 1, 1, 2),
	(2, 2, 1, 2),
	(3, 3, 1, 2),
	(4, 4, 1, 2),
	(5, 5, 1, 2)
)
SELECT r, QUANTILE_CONT(i, [0.25, 0.5, 0.75]) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
WITH t(r, i, p, f) AS (VALUES
	(0, 0, 1, 2),
	(1, 1, 1, 2),
	(2, 2, 1, 2),
	(3, 0, 1, 2),
	(4, 1, 1, 2),
	(5, 2, 1, 2)
)
SELECT r, QUANTILE_CONT(i, [0.25, 0.5, 0.75]) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
WITH t(r, i, p, f) AS (VALUES
	(0, 0, 1, 2),
	(1, 1, 1, 2),
	(2, 2, 1, 2),
	(3, 0, 1, 2),
	(4, 1, 1, 2),
	(5, 2, 1, 2)
)
SELECT r, QUANTILE_CONT(i, [0.25, 0.5, 0.75]) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
;
WITH t(r, i, p, f) AS (VALUES
	(0, 0, 1, 2),
	(1, 1, 1, 2),
	(2, 2, 1, 2),
	(3, 0, 1, 2),
	(4, 1, 1, 2),
	(5, 2, 1, 2)
)
SELECT r, QUANTILE_CONT(i, [0.25, 0.5, 0.75]) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
WITH t(r, i, p, f) AS (VALUES
	(0, 0, 1, 2),
	(1, 1, 1, 2),
	(2, 2, 1, 2),
	(3, 0, 1, 2),
	(4, 1, 1, 2),
	(5, 2, 1, 2)
)
SELECT r, QUANTILE_CONT(i, [0.25, 0.5, 0.75]) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
WITH t (r, i, p, f) AS (SELECT * FROM (VALUES (0, 0, 1, 2), (1, 1, 1, 2), (2, 2, 1, 2), (3, 0, 1, 2), (4, 1, 1, 2), (5, 2, 1, 2)) AS valueslist)SELECT r, quantile_cont(i, main.list_value(0.25, 0.5, 0.75)) OVER (ORDER BY r ROWS BETWEEN p PRECEDING AND f FOLLOWING) FROM t ORDER BY 1;
;
;
;
;
WITH t(r, i, p, f) AS (VALUES
	(0, 0, 1, 2),
	(1, 1, 1, 2),
	(2, 2, 1, 2),
	(3, 0, 1, 2),
	(4, 1, 1, 2),
	(5, 2, 1, 2)
)
SELECT r, QUANTILE_CONT(i, [0.25, 0.5, 0.75]) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
SELECT r, quantile_disc(i, 0.5) OVER (ORDER BY r ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING) q
FROM (VALUES
	(0, 0),
	(1, 1),
	(2, 2),
	(3, 0),
	(4, 1)
	) tbl(r, i)
ORDER BY 1, 2;
SELECT r, quantile_disc(i, 0.5) OVER (ORDER BY r ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING) q
FROM (VALUES
	(0, 0),
	(1, 1),
	(2, 2),
	(3, 0),
	(4, 1)
	) tbl(r, i)
ORDER BY 1, 2;
;
SELECT r, quantile_disc(i, 0.5) OVER (ORDER BY r ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING) q
FROM (VALUES
	(0, 0),
	(1, 1),
	(2, 2),
	(3, 0),
	(4, 1)
	) tbl(r, i)
ORDER BY 1, 2;
SELECT r, quantile_disc(i, 0.5) OVER (ORDER BY r ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING) q
FROM (VALUES
	(0, 0),
	(1, 1),
	(2, 2),
	(3, 0),
	(4, 1)
	) tbl(r, i)
ORDER BY 1, 2;
SELECT r, quantile_disc(i, 0.5) OVER (ORDER BY r ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING) AS q FROM (SELECT * FROM (VALUES (0, 0), (1, 1), (2, 2), (3, 0), (4, 1)) AS valueslist) AS tbl(r, i) ORDER BY 1, 2;
;
;
;
;
SELECT r, quantile_disc(i, 0.5) OVER (ORDER BY r ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING) q
FROM (VALUES
	(0, 0),
	(1, 1),
	(2, 2),
	(3, 0),
	(4, 1)
	) tbl(r, i)
ORDER BY 1, 2;
SELECT r, quantile_cont(i, 0.5) OVER (ORDER BY r ROWS BETWEEN 2 PRECEDING AND 1 FOLLOWING) q
FROM (VALUES
	(0, 0),
	(1, 1),
	(2, 2),
	(3, 3),
	(4, 0),
	(5, 1)
	) tbl(r, i)
ORDER BY 1, 2;
SELECT r, quantile_cont(i, 0.5) OVER (ORDER BY r ROWS BETWEEN 2 PRECEDING AND 1 FOLLOWING) q
FROM (VALUES
	(0, 0),
	(1, 1),
	(2, 2),
	(3, 3),
	(4, 0),
	(5, 1)
	) tbl(r, i)
ORDER BY 1, 2;
;
SELECT r, quantile_cont(i, 0.5) OVER (ORDER BY r ROWS BETWEEN 2 PRECEDING AND 1 FOLLOWING) q
FROM (VALUES
	(0, 0),
	(1, 1),
	(2, 2),
	(3, 3),
	(4, 0),
	(5, 1)
	) tbl(r, i)
ORDER BY 1, 2;
SELECT r, quantile_cont(i, 0.5) OVER (ORDER BY r ROWS BETWEEN 2 PRECEDING AND 1 FOLLOWING) q
FROM (VALUES
	(0, 0),
	(1, 1),
	(2, 2),
	(3, 3),
	(4, 0),
	(5, 1)
	) tbl(r, i)
ORDER BY 1, 2;
SELECT r, quantile_cont(i, 0.5) OVER (ORDER BY r ROWS BETWEEN 2 PRECEDING AND 1 FOLLOWING) AS q FROM (SELECT * FROM (VALUES (0, 0), (1, 1), (2, 2), (3, 3), (4, 0), (5, 1)) AS valueslist) AS tbl(r, i) ORDER BY 1, 2;
;
;
;
;
SELECT r, quantile_cont(i, 0.5) OVER (ORDER BY r ROWS BETWEEN 2 PRECEDING AND 1 FOLLOWING) q
FROM (VALUES
	(0, 0),
	(1, 1),
	(2, 2),
	(3, 3),
	(4, 0),
	(5, 1)
	) tbl(r, i)
ORDER BY 1, 2;
SELECT r, quantile_cont(i, 0.5) OVER (ORDER BY r ROWS BETWEEN 2 PRECEDING AND 1 FOLLOWING) q
FROM (VALUES
	(0, NULL),
	(1, 1),
	(2, 2),
	(3, 3),
	(4, NULL),
	(5, 1)
	) tbl(r, i)
ORDER BY 1, 2;
SELECT r, quantile_cont(i, 0.5) OVER (ORDER BY r ROWS BETWEEN 2 PRECEDING AND 1 FOLLOWING) q
FROM (VALUES
	(0, NULL),
	(1, 1),
	(2, 2),
	(3, 3),
	(4, NULL),
	(5, 1)
	) tbl(r, i)
ORDER BY 1, 2;
;
SELECT r, quantile_cont(i, 0.5) OVER (ORDER BY r ROWS BETWEEN 2 PRECEDING AND 1 FOLLOWING) q
FROM (VALUES
	(0, NULL),
	(1, 1),
	(2, 2),
	(3, 3),
	(4, NULL),
	(5, 1)
	) tbl(r, i)
ORDER BY 1, 2;
SELECT r, quantile_cont(i, 0.5) OVER (ORDER BY r ROWS BETWEEN 2 PRECEDING AND 1 FOLLOWING) q
FROM (VALUES
	(0, NULL),
	(1, 1),
	(2, 2),
	(3, 3),
	(4, NULL),
	(5, 1)
	) tbl(r, i)
ORDER BY 1, 2;
SELECT r, quantile_cont(i, 0.5) OVER (ORDER BY r ROWS BETWEEN 2 PRECEDING AND 1 FOLLOWING) AS q FROM (SELECT * FROM (VALUES (0, NULL), (1, 1), (2, 2), (3, 3), (4, NULL), (5, 1)) AS valueslist) AS tbl(r, i) ORDER BY 1, 2;
;
;
;
;
SELECT r, quantile_cont(i, 0.5) OVER (ORDER BY r ROWS BETWEEN 2 PRECEDING AND 1 FOLLOWING) q
FROM (VALUES
	(0, NULL),
	(1, 1),
	(2, 2),
	(3, 3),
	(4, NULL),
	(5, 1)
	) tbl(r, i)
ORDER BY 1, 2;
PRAGMA debug_window_mode="window";
WITH t(r, i, p, f) AS (VALUES
	(0, 0, 1, 1),
	(1, 1, 1, 1),
	(2, 2, 1, 1),
	(3, 0, 1, 1),
	(4, 1, 1, 1),
	(5, 2, 1, 1)
)
SELECT r, MEDIAN(i) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
WITH t(r, i, p, f) AS (VALUES
	(0, 0, 1, 1),
	(1, 1, 1, 1),
	(2, 2, 1, 1),
	(3, 0, 1, 1),
	(4, 1, 1, 1),
	(5, 2, 1, 1)
)
SELECT r, MEDIAN(i) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
;
WITH t(r, i, p, f) AS (VALUES
	(0, 0, 1, 1),
	(1, 1, 1, 1),
	(2, 2, 1, 1),
	(3, 0, 1, 1),
	(4, 1, 1, 1),
	(5, 2, 1, 1)
)
SELECT r, MEDIAN(i) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
WITH t(r, i, p, f) AS (VALUES
	(0, 0, 1, 1),
	(1, 1, 1, 1),
	(2, 2, 1, 1),
	(3, 0, 1, 1),
	(4, 1, 1, 1),
	(5, 2, 1, 1)
)
SELECT r, MEDIAN(i) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
WITH t (r, i, p, f) AS (SELECT * FROM (VALUES (0, 0, 1, 1), (1, 1, 1, 1), (2, 2, 1, 1), (3, 0, 1, 1), (4, 1, 1, 1), (5, 2, 1, 1)) AS valueslist)SELECT r, median(i) OVER (ORDER BY r ROWS BETWEEN p PRECEDING AND f FOLLOWING) FROM t ORDER BY 1;
;
;
;
;
WITH t(r, i, p, f) AS (VALUES
	(0, 0, 1, 1),
	(1, 1, 1, 1),
	(2, 2, 1, 1),
	(3, 0, 1, 1),
	(4, 1, 1, 1),
	(5, 2, 1, 1)
)
SELECT r, MEDIAN(i) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
WITH t(r, i, p, f) AS (VALUES
	(0, 0, 1, 1),
	(1, 1, 1, 1),
	(2, 2, 1, 1),
	(3, 0, 1, 1),
	(4, 1, 1, 1),
	(5, 2, 1, 1)
)
SELECT r, QUANTILE_DISC(i, 0.5) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
WITH t(r, i, p, f) AS (VALUES
	(0, 0, 1, 1),
	(1, 1, 1, 1),
	(2, 2, 1, 1),
	(3, 0, 1, 1),
	(4, 1, 1, 1),
	(5, 2, 1, 1)
)
SELECT r, QUANTILE_DISC(i, 0.5) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
;
WITH t(r, i, p, f) AS (VALUES
	(0, 0, 1, 1),
	(1, 1, 1, 1),
	(2, 2, 1, 1),
	(3, 0, 1, 1),
	(4, 1, 1, 1),
	(5, 2, 1, 1)
)
SELECT r, QUANTILE_DISC(i, 0.5) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
WITH t(r, i, p, f) AS (VALUES
	(0, 0, 1, 1),
	(1, 1, 1, 1),
	(2, 2, 1, 1),
	(3, 0, 1, 1),
	(4, 1, 1, 1),
	(5, 2, 1, 1)
)
SELECT r, QUANTILE_DISC(i, 0.5) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
WITH t (r, i, p, f) AS (SELECT * FROM (VALUES (0, 0, 1, 1), (1, 1, 1, 1), (2, 2, 1, 1), (3, 0, 1, 1), (4, 1, 1, 1), (5, 2, 1, 1)) AS valueslist)SELECT r, quantile_disc(i, 0.5) OVER (ORDER BY r ROWS BETWEEN p PRECEDING AND f FOLLOWING) FROM t ORDER BY 1;
;
;
;
;
WITH t(r, i, p, f) AS (VALUES
	(0, 0, 1, 1),
	(1, 1, 1, 1),
	(2, 2, 1, 1),
	(3, 0, 1, 1),
	(4, 1, 1, 1),
	(5, 2, 1, 1)
)
SELECT r, QUANTILE_DISC(i, 0.5) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
WITH t(r, i, p, f) AS (VALUES
	(0, NULL, 1, 2),
	(1, 1, 1, 2),
	(2, 2, 1, 2),
	(3, 3, 1, 2),
	(4, 4, 1, 2),
	(5, 5, 1, 2)
)
SELECT r, QUANTILE_DISC(i, [0.25, 0.5, 0.75]) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
WITH t(r, i, p, f) AS (VALUES
	(0, NULL, 1, 2),
	(1, 1, 1, 2),
	(2, 2, 1, 2),
	(3, 3, 1, 2),
	(4, 4, 1, 2),
	(5, 5, 1, 2)
)
SELECT r, QUANTILE_DISC(i, [0.25, 0.5, 0.75]) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
;
WITH t(r, i, p, f) AS (VALUES
	(0, NULL, 1, 2),
	(1, 1, 1, 2),
	(2, 2, 1, 2),
	(3, 3, 1, 2),
	(4, 4, 1, 2),
	(5, 5, 1, 2)
)
SELECT r, QUANTILE_DISC(i, [0.25, 0.5, 0.75]) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
WITH t(r, i, p, f) AS (VALUES
	(0, NULL, 1, 2),
	(1, 1, 1, 2),
	(2, 2, 1, 2),
	(3, 3, 1, 2),
	(4, 4, 1, 2),
	(5, 5, 1, 2)
)
SELECT r, QUANTILE_DISC(i, [0.25, 0.5, 0.75]) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
WITH t (r, i, p, f) AS (SELECT * FROM (VALUES (0, NULL, 1, 2), (1, 1, 1, 2), (2, 2, 1, 2), (3, 3, 1, 2), (4, 4, 1, 2), (5, 5, 1, 2)) AS valueslist)SELECT r, quantile_disc(i, main.list_value(0.25, 0.5, 0.75)) OVER (ORDER BY r ROWS BETWEEN p PRECEDING AND f FOLLOWING) FROM t ORDER BY 1;
;
;
;
;
WITH t(r, i, p, f) AS (VALUES
	(0, NULL, 1, 2),
	(1, 1, 1, 2),
	(2, 2, 1, 2),
	(3, 3, 1, 2),
	(4, 4, 1, 2),
	(5, 5, 1, 2)
)
SELECT r, QUANTILE_DISC(i, [0.25, 0.5, 0.75]) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
WITH t(r, i, p, f) AS (VALUES
	(0, 0, 1, 2),
	(1, 1, 1, 2),
	(2, 2, 1, 2),
	(3, 0, 1, 2),
	(4, 1, 1, 2),
	(5, 2, 1, 2)
)
SELECT r, QUANTILE_CONT(i, [0.25, 0.5, 0.75]) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
WITH t(r, i, p, f) AS (VALUES
	(0, 0, 1, 2),
	(1, 1, 1, 2),
	(2, 2, 1, 2),
	(3, 0, 1, 2),
	(4, 1, 1, 2),
	(5, 2, 1, 2)
)
SELECT r, QUANTILE_CONT(i, [0.25, 0.5, 0.75]) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
;
WITH t(r, i, p, f) AS (VALUES
	(0, 0, 1, 2),
	(1, 1, 1, 2),
	(2, 2, 1, 2),
	(3, 0, 1, 2),
	(4, 1, 1, 2),
	(5, 2, 1, 2)
)
SELECT r, QUANTILE_CONT(i, [0.25, 0.5, 0.75]) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
WITH t(r, i, p, f) AS (VALUES
	(0, 0, 1, 2),
	(1, 1, 1, 2),
	(2, 2, 1, 2),
	(3, 0, 1, 2),
	(4, 1, 1, 2),
	(5, 2, 1, 2)
)
SELECT r, QUANTILE_CONT(i, [0.25, 0.5, 0.75]) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
WITH t (r, i, p, f) AS (SELECT * FROM (VALUES (0, 0, 1, 2), (1, 1, 1, 2), (2, 2, 1, 2), (3, 0, 1, 2), (4, 1, 1, 2), (5, 2, 1, 2)) AS valueslist)SELECT r, quantile_cont(i, main.list_value(0.25, 0.5, 0.75)) OVER (ORDER BY r ROWS BETWEEN p PRECEDING AND f FOLLOWING) FROM t ORDER BY 1;
;
;
;
;
WITH t(r, i, p, f) AS (VALUES
	(0, 0, 1, 2),
	(1, 1, 1, 2),
	(2, 2, 1, 2),
	(3, 0, 1, 2),
	(4, 1, 1, 2),
	(5, 2, 1, 2)
)
SELECT r, QUANTILE_CONT(i, [0.25, 0.5, 0.75]) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
PRAGMA debug_window_mode="combine";
WITH t(r, i, p, f) AS (VALUES
	(0, 0, 1, 1),
	(1, 1, 1, 1),
	(2, 2, 1, 1),
	(3, 0, 1, 1),
	(4, 1, 1, 1),
	(5, 2, 1, 1)
)
SELECT r, MEDIAN(i) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
WITH t(r, i, p, f) AS (VALUES
	(0, 0, 1, 1),
	(1, 1, 1, 1),
	(2, 2, 1, 1),
	(3, 0, 1, 1),
	(4, 1, 1, 1),
	(5, 2, 1, 1)
)
SELECT r, MEDIAN(i) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
;
WITH t(r, i, p, f) AS (VALUES
	(0, 0, 1, 1),
	(1, 1, 1, 1),
	(2, 2, 1, 1),
	(3, 0, 1, 1),
	(4, 1, 1, 1),
	(5, 2, 1, 1)
)
SELECT r, MEDIAN(i) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
WITH t(r, i, p, f) AS (VALUES
	(0, 0, 1, 1),
	(1, 1, 1, 1),
	(2, 2, 1, 1),
	(3, 0, 1, 1),
	(4, 1, 1, 1),
	(5, 2, 1, 1)
)
SELECT r, MEDIAN(i) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
WITH t (r, i, p, f) AS (SELECT * FROM (VALUES (0, 0, 1, 1), (1, 1, 1, 1), (2, 2, 1, 1), (3, 0, 1, 1), (4, 1, 1, 1), (5, 2, 1, 1)) AS valueslist)SELECT r, median(i) OVER (ORDER BY r ROWS BETWEEN p PRECEDING AND f FOLLOWING) FROM t ORDER BY 1;
;
;
;
;
WITH t(r, i, p, f) AS (VALUES
	(0, 0, 1, 1),
	(1, 1, 1, 1),
	(2, 2, 1, 1),
	(3, 0, 1, 1),
	(4, 1, 1, 1),
	(5, 2, 1, 1)
)
SELECT r, MEDIAN(i) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
WITH t(r, i, p, f) AS (VALUES
	(0, 0, 1, 1),
	(1, 1, 1, 1),
	(2, 2, 1, 1),
	(3, 0, 1, 1),
	(4, 1, 1, 1),
	(5, 2, 1, 1)
)
SELECT r, QUANTILE_DISC(i, 0.5) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
WITH t(r, i, p, f) AS (VALUES
	(0, 0, 1, 1),
	(1, 1, 1, 1),
	(2, 2, 1, 1),
	(3, 0, 1, 1),
	(4, 1, 1, 1),
	(5, 2, 1, 1)
)
SELECT r, QUANTILE_DISC(i, 0.5) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
;
WITH t(r, i, p, f) AS (VALUES
	(0, 0, 1, 1),
	(1, 1, 1, 1),
	(2, 2, 1, 1),
	(3, 0, 1, 1),
	(4, 1, 1, 1),
	(5, 2, 1, 1)
)
SELECT r, QUANTILE_DISC(i, 0.5) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
WITH t(r, i, p, f) AS (VALUES
	(0, 0, 1, 1),
	(1, 1, 1, 1),
	(2, 2, 1, 1),
	(3, 0, 1, 1),
	(4, 1, 1, 1),
	(5, 2, 1, 1)
)
SELECT r, QUANTILE_DISC(i, 0.5) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
WITH t (r, i, p, f) AS (SELECT * FROM (VALUES (0, 0, 1, 1), (1, 1, 1, 1), (2, 2, 1, 1), (3, 0, 1, 1), (4, 1, 1, 1), (5, 2, 1, 1)) AS valueslist)SELECT r, quantile_disc(i, 0.5) OVER (ORDER BY r ROWS BETWEEN p PRECEDING AND f FOLLOWING) FROM t ORDER BY 1;
;
;
;
;
WITH t(r, i, p, f) AS (VALUES
	(0, 0, 1, 1),
	(1, 1, 1, 1),
	(2, 2, 1, 1),
	(3, 0, 1, 1),
	(4, 1, 1, 1),
	(5, 2, 1, 1)
)
SELECT r, QUANTILE_DISC(i, 0.5) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
WITH t(r, i, p, f) AS (VALUES
	(0, NULL, 1, 2),
	(1, 1, 1, 2),
	(2, 2, 1, 2),
	(3, 3, 1, 2),
	(4, 4, 1, 2),
	(5, 5, 1, 2)
)
SELECT r, QUANTILE_DISC(i, [0.25, 0.5, 0.75]) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
WITH t(r, i, p, f) AS (VALUES
	(0, NULL, 1, 2),
	(1, 1, 1, 2),
	(2, 2, 1, 2),
	(3, 3, 1, 2),
	(4, 4, 1, 2),
	(5, 5, 1, 2)
)
SELECT r, QUANTILE_DISC(i, [0.25, 0.5, 0.75]) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
;
WITH t(r, i, p, f) AS (VALUES
	(0, NULL, 1, 2),
	(1, 1, 1, 2),
	(2, 2, 1, 2),
	(3, 3, 1, 2),
	(4, 4, 1, 2),
	(5, 5, 1, 2)
)
SELECT r, QUANTILE_DISC(i, [0.25, 0.5, 0.75]) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
WITH t(r, i, p, f) AS (VALUES
	(0, NULL, 1, 2),
	(1, 1, 1, 2),
	(2, 2, 1, 2),
	(3, 3, 1, 2),
	(4, 4, 1, 2),
	(5, 5, 1, 2)
)
SELECT r, QUANTILE_DISC(i, [0.25, 0.5, 0.75]) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
WITH t (r, i, p, f) AS (SELECT * FROM (VALUES (0, NULL, 1, 2), (1, 1, 1, 2), (2, 2, 1, 2), (3, 3, 1, 2), (4, 4, 1, 2), (5, 5, 1, 2)) AS valueslist)SELECT r, quantile_disc(i, main.list_value(0.25, 0.5, 0.75)) OVER (ORDER BY r ROWS BETWEEN p PRECEDING AND f FOLLOWING) FROM t ORDER BY 1;
;
;
;
;
WITH t(r, i, p, f) AS (VALUES
	(0, NULL, 1, 2),
	(1, 1, 1, 2),
	(2, 2, 1, 2),
	(3, 3, 1, 2),
	(4, 4, 1, 2),
	(5, 5, 1, 2)
)
SELECT r, QUANTILE_DISC(i, [0.25, 0.5, 0.75]) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
WITH t(r, i, p, f) AS (VALUES
	(0, 0, 1, 2),
	(1, 1, 1, 2),
	(2, 2, 1, 2),
	(3, 0, 1, 2),
	(4, 1, 1, 2),
	(5, 2, 1, 2)
)
SELECT r, QUANTILE_CONT(i, [0.25, 0.5, 0.75]) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
WITH t(r, i, p, f) AS (VALUES
	(0, 0, 1, 2),
	(1, 1, 1, 2),
	(2, 2, 1, 2),
	(3, 0, 1, 2),
	(4, 1, 1, 2),
	(5, 2, 1, 2)
)
SELECT r, QUANTILE_CONT(i, [0.25, 0.5, 0.75]) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
;
WITH t(r, i, p, f) AS (VALUES
	(0, 0, 1, 2),
	(1, 1, 1, 2),
	(2, 2, 1, 2),
	(3, 0, 1, 2),
	(4, 1, 1, 2),
	(5, 2, 1, 2)
)
SELECT r, QUANTILE_CONT(i, [0.25, 0.5, 0.75]) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
WITH t(r, i, p, f) AS (VALUES
	(0, 0, 1, 2),
	(1, 1, 1, 2),
	(2, 2, 1, 2),
	(3, 0, 1, 2),
	(4, 1, 1, 2),
	(5, 2, 1, 2)
)
SELECT r, QUANTILE_CONT(i, [0.25, 0.5, 0.75]) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
WITH t (r, i, p, f) AS (SELECT * FROM (VALUES (0, 0, 1, 2), (1, 1, 1, 2), (2, 2, 1, 2), (3, 0, 1, 2), (4, 1, 1, 2), (5, 2, 1, 2)) AS valueslist)SELECT r, quantile_cont(i, main.list_value(0.25, 0.5, 0.75)) OVER (ORDER BY r ROWS BETWEEN p PRECEDING AND f FOLLOWING) FROM t ORDER BY 1;
;
;
;
;
WITH t(r, i, p, f) AS (VALUES
	(0, 0, 1, 2),
	(1, 1, 1, 2),
	(2, 2, 1, 2),
	(3, 0, 1, 2),
	(4, 1, 1, 2),
	(5, 2, 1, 2)
)
SELECT r, QUANTILE_CONT(i, [0.25, 0.5, 0.75]) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
PRAGMA debug_window_mode="separate";
WITH t(r, i, p, f) AS (VALUES
	(0, 0, 1, 1),
	(1, 1, 1, 1),
	(2, 2, 1, 1),
	(3, 0, 1, 1),
	(4, 1, 1, 1),
	(5, 2, 1, 1)
)
SELECT r, MEDIAN(i) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
WITH t(r, i, p, f) AS (VALUES
	(0, 0, 1, 1),
	(1, 1, 1, 1),
	(2, 2, 1, 1),
	(3, 0, 1, 1),
	(4, 1, 1, 1),
	(5, 2, 1, 1)
)
SELECT r, MEDIAN(i) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
;
WITH t(r, i, p, f) AS (VALUES
	(0, 0, 1, 1),
	(1, 1, 1, 1),
	(2, 2, 1, 1),
	(3, 0, 1, 1),
	(4, 1, 1, 1),
	(5, 2, 1, 1)
)
SELECT r, MEDIAN(i) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
WITH t(r, i, p, f) AS (VALUES
	(0, 0, 1, 1),
	(1, 1, 1, 1),
	(2, 2, 1, 1),
	(3, 0, 1, 1),
	(4, 1, 1, 1),
	(5, 2, 1, 1)
)
SELECT r, MEDIAN(i) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
WITH t (r, i, p, f) AS (SELECT * FROM (VALUES (0, 0, 1, 1), (1, 1, 1, 1), (2, 2, 1, 1), (3, 0, 1, 1), (4, 1, 1, 1), (5, 2, 1, 1)) AS valueslist)SELECT r, median(i) OVER (ORDER BY r ROWS BETWEEN p PRECEDING AND f FOLLOWING) FROM t ORDER BY 1;
;
;
;
;
WITH t(r, i, p, f) AS (VALUES
	(0, 0, 1, 1),
	(1, 1, 1, 1),
	(2, 2, 1, 1),
	(3, 0, 1, 1),
	(4, 1, 1, 1),
	(5, 2, 1, 1)
)
SELECT r, MEDIAN(i) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
WITH t(r, i, p, f) AS (VALUES
	(0, 0, 1, 1),
	(1, 1, 1, 1),
	(2, 2, 1, 1),
	(3, 0, 1, 1),
	(4, 1, 1, 1),
	(5, 2, 1, 1)
)
SELECT r, QUANTILE_DISC(i, 0.5) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
WITH t(r, i, p, f) AS (VALUES
	(0, 0, 1, 1),
	(1, 1, 1, 1),
	(2, 2, 1, 1),
	(3, 0, 1, 1),
	(4, 1, 1, 1),
	(5, 2, 1, 1)
)
SELECT r, QUANTILE_DISC(i, 0.5) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
;
WITH t(r, i, p, f) AS (VALUES
	(0, 0, 1, 1),
	(1, 1, 1, 1),
	(2, 2, 1, 1),
	(3, 0, 1, 1),
	(4, 1, 1, 1),
	(5, 2, 1, 1)
)
SELECT r, QUANTILE_DISC(i, 0.5) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
WITH t(r, i, p, f) AS (VALUES
	(0, 0, 1, 1),
	(1, 1, 1, 1),
	(2, 2, 1, 1),
	(3, 0, 1, 1),
	(4, 1, 1, 1),
	(5, 2, 1, 1)
)
SELECT r, QUANTILE_DISC(i, 0.5) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
WITH t (r, i, p, f) AS (SELECT * FROM (VALUES (0, 0, 1, 1), (1, 1, 1, 1), (2, 2, 1, 1), (3, 0, 1, 1), (4, 1, 1, 1), (5, 2, 1, 1)) AS valueslist)SELECT r, quantile_disc(i, 0.5) OVER (ORDER BY r ROWS BETWEEN p PRECEDING AND f FOLLOWING) FROM t ORDER BY 1;
;
;
;
;
WITH t(r, i, p, f) AS (VALUES
	(0, 0, 1, 1),
	(1, 1, 1, 1),
	(2, 2, 1, 1),
	(3, 0, 1, 1),
	(4, 1, 1, 1),
	(5, 2, 1, 1)
)
SELECT r, QUANTILE_DISC(i, 0.5) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
WITH t(r, i, p, f) AS (VALUES
	(0, NULL, 1, 2),
	(1, 1, 1, 2),
	(2, 2, 1, 2),
	(3, 3, 1, 2),
	(4, 4, 1, 2),
	(5, 5, 1, 2)
)
SELECT r, QUANTILE_DISC(i, [0.25, 0.5, 0.75]) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
WITH t(r, i, p, f) AS (VALUES
	(0, NULL, 1, 2),
	(1, 1, 1, 2),
	(2, 2, 1, 2),
	(3, 3, 1, 2),
	(4, 4, 1, 2),
	(5, 5, 1, 2)
)
SELECT r, QUANTILE_DISC(i, [0.25, 0.5, 0.75]) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
;
WITH t(r, i, p, f) AS (VALUES
	(0, NULL, 1, 2),
	(1, 1, 1, 2),
	(2, 2, 1, 2),
	(3, 3, 1, 2),
	(4, 4, 1, 2),
	(5, 5, 1, 2)
)
SELECT r, QUANTILE_DISC(i, [0.25, 0.5, 0.75]) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
WITH t(r, i, p, f) AS (VALUES
	(0, NULL, 1, 2),
	(1, 1, 1, 2),
	(2, 2, 1, 2),
	(3, 3, 1, 2),
	(4, 4, 1, 2),
	(5, 5, 1, 2)
)
SELECT r, QUANTILE_DISC(i, [0.25, 0.5, 0.75]) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
WITH t (r, i, p, f) AS (SELECT * FROM (VALUES (0, NULL, 1, 2), (1, 1, 1, 2), (2, 2, 1, 2), (3, 3, 1, 2), (4, 4, 1, 2), (5, 5, 1, 2)) AS valueslist)SELECT r, quantile_disc(i, main.list_value(0.25, 0.5, 0.75)) OVER (ORDER BY r ROWS BETWEEN p PRECEDING AND f FOLLOWING) FROM t ORDER BY 1;
;
;
;
;
WITH t(r, i, p, f) AS (VALUES
	(0, NULL, 1, 2),
	(1, 1, 1, 2),
	(2, 2, 1, 2),
	(3, 3, 1, 2),
	(4, 4, 1, 2),
	(5, 5, 1, 2)
)
SELECT r, QUANTILE_DISC(i, [0.25, 0.5, 0.75]) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
WITH t(r, i, p, f) AS (VALUES
	(0, 0, 1, 2),
	(1, 1, 1, 2),
	(2, 2, 1, 2),
	(3, 0, 1, 2),
	(4, 1, 1, 2),
	(5, 2, 1, 2)
)
SELECT r, QUANTILE_CONT(i, [0.25, 0.5, 0.75]) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
WITH t(r, i, p, f) AS (VALUES
	(0, 0, 1, 2),
	(1, 1, 1, 2),
	(2, 2, 1, 2),
	(3, 0, 1, 2),
	(4, 1, 1, 2),
	(5, 2, 1, 2)
)
SELECT r, QUANTILE_CONT(i, [0.25, 0.5, 0.75]) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
;
WITH t(r, i, p, f) AS (VALUES
	(0, 0, 1, 2),
	(1, 1, 1, 2),
	(2, 2, 1, 2),
	(3, 0, 1, 2),
	(4, 1, 1, 2),
	(5, 2, 1, 2)
)
SELECT r, QUANTILE_CONT(i, [0.25, 0.5, 0.75]) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
WITH t(r, i, p, f) AS (VALUES
	(0, 0, 1, 2),
	(1, 1, 1, 2),
	(2, 2, 1, 2),
	(3, 0, 1, 2),
	(4, 1, 1, 2),
	(5, 2, 1, 2)
)
SELECT r, QUANTILE_CONT(i, [0.25, 0.5, 0.75]) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
WITH t (r, i, p, f) AS (SELECT * FROM (VALUES (0, 0, 1, 2), (1, 1, 1, 2), (2, 2, 1, 2), (3, 0, 1, 2), (4, 1, 1, 2), (5, 2, 1, 2)) AS valueslist)SELECT r, quantile_cont(i, main.list_value(0.25, 0.5, 0.75)) OVER (ORDER BY r ROWS BETWEEN p PRECEDING AND f FOLLOWING) FROM t ORDER BY 1;
;
;
;
;
WITH t(r, i, p, f) AS (VALUES
	(0, 0, 1, 2),
	(1, 1, 1, 2),
	(2, 2, 1, 2),
	(3, 0, 1, 2),
	(4, 1, 1, 2),
	(5, 2, 1, 2)
)
SELECT r, QUANTILE_CONT(i, [0.25, 0.5, 0.75]) OVER (ORDER BY r ROWS BETWEEN p PRECEDING and f FOLLOWING)
FROM t
ORDER BY 1;
