PRAGMA enable_verification;
CREATE TABLE two (a INTEGER, b INTEGER);;
INSERT INTO two VALUES (11, 1), (12, 2);;
CREATE TABLE three AS 
	SELECT * FROM (VALUES
		(11, 1),
		(12, 2),
		(13, 3)
	) tbl(a, b);;
CREATE TABLE threek AS
	SELECT * FROM generate_series(0, 3001) tbl(id);;
SELECT * 
FROM two t1 POSITIONAL JOIN two t2 ;
SELECT * 
FROM two t1 POSITIONAL JOIN two t2 ;
;
SELECT * 
FROM two t1 POSITIONAL JOIN two t2 ;
SELECT * FROM two AS t1 POSITIONAL JOIN two AS t2;
;
;
;
;
SELECT * 
FROM two t1 POSITIONAL JOIN two t2 ;
SELECT *
FROM threek t1 POSITIONAL JOIN threek t2
WHERE t1.id <> t2.id;
SELECT *
FROM threek t1 POSITIONAL JOIN threek t2
WHERE t1.id <> t2.id;
;
SELECT *
FROM threek t1 POSITIONAL JOIN threek t2
WHERE t1.id <> t2.id;
SELECT * FROM threek AS t1 POSITIONAL JOIN threek AS t2 WHERE (t1.id != t2.id);
;
;
;
;
SELECT *
FROM threek t1 POSITIONAL JOIN threek t2
WHERE t1.id <> t2.id;
SELECT * 
FROM two t1 POSITIONAL JOIN three t2 ;
SELECT * 
FROM two t1 POSITIONAL JOIN three t2 ;
;
SELECT * 
FROM two t1 POSITIONAL JOIN three t2 ;
SELECT * FROM two AS t1 POSITIONAL JOIN three AS t2;
;
;
;
;
SELECT * 
FROM two t1 POSITIONAL JOIN three t2 ;
SELECT * 
FROM three t1 POSITIONAL JOIN two t2 ;
SELECT * 
FROM three t1 POSITIONAL JOIN two t2 ;
;
SELECT * 
FROM three t1 POSITIONAL JOIN two t2 ;
SELECT * FROM three AS t1 POSITIONAL JOIN two AS t2;
;
;
;
;
SELECT * 
FROM three t1 POSITIONAL JOIN two t2 ;
SELECT COUNT(a), COUNT(id)
FROM three POSITIONAL JOIN threek;
SELECT COUNT(a), COUNT(id)
FROM three POSITIONAL JOIN threek;
;
SELECT COUNT(a), COUNT(id)
FROM three POSITIONAL JOIN threek;
SELECT count(a), count(id) FROM three POSITIONAL JOIN threek;
;
;
;
;
SELECT COUNT(a), COUNT(id)
FROM three POSITIONAL JOIN threek;
SELECT COUNT(id), COUNT(a)
FROM threek POSITIONAL JOIN three;
SELECT COUNT(id), COUNT(a)
FROM threek POSITIONAL JOIN three;
;
SELECT COUNT(id), COUNT(a)
FROM threek POSITIONAL JOIN three;
SELECT count(id), count(a) FROM threek POSITIONAL JOIN three;
;
;
;
;
SELECT COUNT(id), COUNT(a)
FROM threek POSITIONAL JOIN three;
SELECT *
FROM 
	(SELECT * FROM two WHERE a % 2 = 0) t1
	POSITIONAL JOIN
	(SELECT * FROM two WHERE a % 2 = 1) t2;
SELECT *
FROM 
	(SELECT * FROM two WHERE a % 2 = 0) t1
	POSITIONAL JOIN
	(SELECT * FROM two WHERE a % 2 = 1) t2;
;
SELECT *
FROM 
	(SELECT * FROM two WHERE a % 2 = 0) t1
	POSITIONAL JOIN
	(SELECT * FROM two WHERE a % 2 = 1) t2;
SELECT * FROM (SELECT * FROM two WHERE ((a % 2) = 0)) AS t1 POSITIONAL JOIN (SELECT * FROM two WHERE ((a % 2) = 1)) AS t2;
;
;
;
;
SELECT *
FROM 
	(SELECT * FROM two WHERE a % 2 = 0) t1
	POSITIONAL JOIN
	(SELECT * FROM two WHERE a % 2 = 1) t2;
SELECT *
FROM 
	(SELECT * FROM threek WHERE id % 2 = 0) t1
	POSITIONAL JOIN
	(SELECT * FROM threek WHERE id % 2 = 1) t2
WHERE t1.id + 1 <> t2.id;
SELECT *
FROM 
	(SELECT * FROM threek WHERE id % 2 = 0) t1
	POSITIONAL JOIN
	(SELECT * FROM threek WHERE id % 2 = 1) t2
WHERE t1.id + 1 <> t2.id;
;
SELECT *
FROM 
	(SELECT * FROM threek WHERE id % 2 = 0) t1
	POSITIONAL JOIN
	(SELECT * FROM threek WHERE id % 2 = 1) t2
WHERE t1.id + 1 <> t2.id;
SELECT * FROM (SELECT * FROM threek WHERE ((id % 2) = 0)) AS t1 POSITIONAL JOIN (SELECT * FROM threek WHERE ((id % 2) = 1)) AS t2 WHERE ((t1.id + 1) != t2.id);
;
;
;
;
SELECT *
FROM 
	(SELECT * FROM threek WHERE id % 2 = 0) t1
	POSITIONAL JOIN
	(SELECT * FROM threek WHERE id % 2 = 1) t2
WHERE t1.id + 1 <> t2.id;
SELECT *
FROM 
	(SELECT * FROM three WHERE a % 2 = 1) t1
	POSITIONAL JOIN
	(SELECT * FROM two WHERE a % 2 = 0) t2;
SELECT *
FROM 
	(SELECT * FROM three WHERE a % 2 = 1) t1
	POSITIONAL JOIN
	(SELECT * FROM two WHERE a % 2 = 0) t2;
;
SELECT *
FROM 
	(SELECT * FROM three WHERE a % 2 = 1) t1
	POSITIONAL JOIN
	(SELECT * FROM two WHERE a % 2 = 0) t2;
SELECT * FROM (SELECT * FROM three WHERE ((a % 2) = 1)) AS t1 POSITIONAL JOIN (SELECT * FROM two WHERE ((a % 2) = 0)) AS t2;
;
;
;
;
SELECT *
FROM 
	(SELECT * FROM three WHERE a % 2 = 1) t1
	POSITIONAL JOIN
	(SELECT * FROM two WHERE a % 2 = 0) t2;
SELECT *
FROM 
	(SELECT * FROM two WHERE a % 2 = 0) t1
	POSITIONAL JOIN
	(SELECT * FROM three WHERE a % 2 = 1) t2;
SELECT *
FROM 
	(SELECT * FROM two WHERE a % 2 = 0) t1
	POSITIONAL JOIN
	(SELECT * FROM three WHERE a % 2 = 1) t2;
;
SELECT *
FROM 
	(SELECT * FROM two WHERE a % 2 = 0) t1
	POSITIONAL JOIN
	(SELECT * FROM three WHERE a % 2 = 1) t2;
SELECT * FROM (SELECT * FROM two WHERE ((a % 2) = 0)) AS t1 POSITIONAL JOIN (SELECT * FROM three WHERE ((a % 2) = 1)) AS t2;
;
;
;
;
SELECT *
FROM 
	(SELECT * FROM two WHERE a % 2 = 0) t1
	POSITIONAL JOIN
	(SELECT * FROM three WHERE a % 2 = 1) t2;
SELECT COUNT(t1.id), COUNT(t2.id)
FROM 
	(SELECT * FROM threek WHERE id % 2 = 0) t1
	POSITIONAL JOIN
	(SELECT * FROM threek WHERE id % 3 = 0) t2;
SELECT COUNT(t1.id), COUNT(t2.id)
FROM 
	(SELECT * FROM threek WHERE id % 2 = 0) t1
	POSITIONAL JOIN
	(SELECT * FROM threek WHERE id % 3 = 0) t2;
;
SELECT COUNT(t1.id), COUNT(t2.id)
FROM 
	(SELECT * FROM threek WHERE id % 2 = 0) t1
	POSITIONAL JOIN
	(SELECT * FROM threek WHERE id % 3 = 0) t2;
SELECT count(t1.id), count(t2.id) FROM (SELECT * FROM threek WHERE ((id % 2) = 0)) AS t1 POSITIONAL JOIN (SELECT * FROM threek WHERE ((id % 3) = 0)) AS t2;
;
;
;
;
SELECT COUNT(t1.id), COUNT(t2.id)
FROM 
	(SELECT * FROM threek WHERE id % 2 = 0) t1
	POSITIONAL JOIN
	(SELECT * FROM threek WHERE id % 3 = 0) t2;
SELECT COUNT(t1.id), COUNT(t2.id)
FROM 
	(SELECT * FROM threek WHERE id % 3 = 0) t2
	POSITIONAL JOIN
	(SELECT * FROM threek WHERE id % 2 = 0) t1;
SELECT COUNT(t1.id), COUNT(t2.id)
FROM 
	(SELECT * FROM threek WHERE id % 3 = 0) t2
	POSITIONAL JOIN
	(SELECT * FROM threek WHERE id % 2 = 0) t1;
;
SELECT COUNT(t1.id), COUNT(t2.id)
FROM 
	(SELECT * FROM threek WHERE id % 3 = 0) t2
	POSITIONAL JOIN
	(SELECT * FROM threek WHERE id % 2 = 0) t1;
SELECT count(t1.id), count(t2.id) FROM (SELECT * FROM threek WHERE ((id % 3) = 0)) AS t2 POSITIONAL JOIN (SELECT * FROM threek WHERE ((id % 2) = 0)) AS t1;
;
;
;
;
SELECT COUNT(t1.id), COUNT(t2.id)
FROM 
	(SELECT * FROM threek WHERE id % 3 = 0) t2
	POSITIONAL JOIN
	(SELECT * FROM threek WHERE id % 2 = 0) t1;
