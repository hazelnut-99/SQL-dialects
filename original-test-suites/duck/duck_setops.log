PRAGMA enable_verification;
SELECT x::INT FROM (SELECT x::VARCHAR x FROM range(10) tbl(x) UNION ALL SELECT 'hello' x) tbl(x);
CREATE TABLE a AS SELECT i, i+1 AS j, i+2 AS k, i+3 AS l FROM range(42,43) t(i);
CREATE TABLE b AS SELECT i, i+1 AS j, i+2 AS k, i+3 AS l FROM range(40,41) t(i);
select COUNT(*) from (SELECT * FROM a UNION ALL SELECT * FROM b) t1 join (select 43) t2(l) on t1.l=t2.l;
select COUNT(*) from (SELECT * FROM a UNION ALL SELECT * FROM b) t1;
select COUNT(*) from (SELECT i, j, MIN(k), MIN(l) FROM a GROUP BY i, j UNION ALL SELECT * FROM b) t1;
select COUNT(*) from (SELECT DISTINCT i, j, k, l FROM a UNION ALL SELECT * FROM b) t1;
select COUNT(*) from (SELECT DISTINCT * FROM (SELECT DISTINCT i, j, k, l FROM a UNION ALL SELECT * FROM b) t1) t2;
select COUNT(*) from (SELECT * FROM a UNION ALL SELECT * FROM b UNION ALL SELECT a.i,a.j,a.k,a.l FROM a,b) t1;
select COUNT(*) from (SELECT * FROM a UNION SELECT * FROM b UNION SELECT a.i,a.j,a.k,a.l FROM a,b) t1;
select COUNT(*) from (SELECT * FROM a WHERE 1=0 UNION ALL SELECT * FROM b) t1;
select j from (SELECT * FROM a WHERE i=42 UNION ALL SELECT * FROM b) t1 WHERE i=40;
select j from (SELECT i, COUNT(*) j, COUNT(*) k, COUNT(*) l FROM a WHERE i=42 GROUP BY i UNION ALL SELECT * FROM b) t1 WHERE i=40;
select j from (SELECT i i, i j, k, l FROM a UNION ALL SELECT * FROM b) t1 WHERE i=40 AND j=41;
select * from (select 'hello' i union all select 'h' i) t1 where i='h';
select COUNT(*) from (SELECT * FROM a UNION ALL SELECT * FROM b) t1 join (select 43) t2(l) on t1.l=t2.l;
select MIN(t2.b) from (SELECT * FROM a UNION ALL SELECT * FROM b) t1 join (select 43, 'hello', 44, 'world') t2(l, a, b, c) on t1.l=t2.l;
PRAGMA enable_verification;
CREATE VIEW vals AS SELECT * FROM (VALUES (1, 10), (2, 5), (3, 4)) tbl(i, j);
SELECT * FROM vals;
CREATE VIEW vunion AS
SELECT * FROM vals
UNION ALL
SELECT * FROM vals;
SELECT * FROM vunion ORDER BY i;
SELECT * FROM vunion ORDER BY i LIMIT 1;
SELECT * FROM (SELECT * FROM vunion ORDER BY i LIMIT 4) tbl ORDER BY j LIMIT 2;
SELECT * FROM vunion WHERE i=1;
SELECT DISTINCT * FROM (SELECT * FROM vunion UNION ALL SELECT * FROM vunion) tbl ORDER BY 1;
SELECT * FROM (SELECT * FROM vunion INTERSECT SELECT * FROM vunion) tbl ORDER BY 1;
SELECT * FROM (SELECT * FROM vunion EXCEPT SELECT * FROM vunion) tbl;
SELECT 42 WHERE 1=0 EXCEPT SELECT 42;
SELECT 42 EXCEPT SELECT 42 WHERE 1=0;
SELECT 42 WHERE 1=0 EXCEPT SELECT 42 WHERE 1=0;
SELECT 42 WHERE 1=0 INTERSECT SELECT 42;
SELECT 42 INTERSECT SELECT 42 WHERE 1=0;
SELECT 42 WHERE 1=0 INTERSECT SELECT 42 WHERE 1=0;
SELECT 42 WHERE 1=0 UNION ALL SELECT 42;
SELECT 42 UNION ALL SELECT 42 WHERE 1=0;
SELECT 42 WHERE 1=0 UNION ALL SELECT 42 WHERE 1=0;
SET default_null_order='nulls_first';
PRAGMA enable_verification;
CREATE TABLE t1 (x INT, y INT);
INSERT INTO t1 VALUES (3, 3), (1, 1);
CREATE TABLE t2 (y INT, z INT);
INSERT INTO t2 VALUES (2, 2), (4, 4);
SELECT x, y FROM t1 UNION ALL BY NAME SELECT y, z FROM t2;
SELECT t1.x FROM t1 UNION ALL BY NAME SELECT x FROM t1 ORDER BY t1.x;
SELECT x FROM t1 UNION ALL BY NAME SELECT x FROM t1 ORDER BY t1.x;
(SELECT x FROM t1 UNION ALL SELECT x FROM t1) UNION ALL BY NAME SELECT 5 ORDER BY t1.x;
(SELECT x FROM t1 UNION ALL SELECT y FROM t1) UNION ALL BY NAME SELECT 5 ORDER BY y;
SELECT x AS a FROM t1 UNION ALL BY NAME SELECT x AS b FROM t1 ORDER BY t1.x;
(SELECT x FROM t1 UNION ALL SELECT y FROM t1) UNION ALL BY NAME (SELECT z FROM t2 UNION ALL SELECT y FROM t2) ORDER BY y, z;
(SELECT x FROM t1 UNION ALL SELECT y FROM t1) UNION ALL BY NAME (SELECT z FROM t2 UNION ALL SELECT y FROM t2) ORDER BY t1.y;
SELECT 1 UNION ALL BY NAME SELECT * FROM range(2, 100) UNION ALL BY NAME SELECT 999 LIMIT 5;
SELECT x, y FROM t1 UNION ALL BY NAME SELECT y, z FROM t2 ORDER BY z DESC;
SELECT x, y FROM t1 UNION ALL BY NAME SELECT y, z FROM t2 ORDER BY y;
SELECT x, y FROM t1 UNION ALL BY NAME SELECT y, z FROM t2 ORDER BY 3;
SELECT x, y FROM t1 UNION ALL BY NAME SELECT y, z FROM t2 ORDER BY 4;
(SELECT x FROM t1 ORDER BY y) UNION ALL BY NAME (SELECT y FROM t2 ORDER BY z) ORDER BY x DESC;
SELECT 1 UNION ALL BY NAME SELECT x, y FROM t1 UNION ALL BY NAME SELECT y, z FROM t2;
SELECT 1, 2 FROM t1 UNION SELECT x, y FROM t1 UNION ALL BY NAME SELECT y, z FROM t2;
SELECT 1, 2 FROM t1 UNION (SELECT x, y FROM t1 UNION ALL BY NAME SELECT y, z FROM t2);
SELECT x, y FROM t1 UNION ALL BY NAME SELECT y, z FROM t2 INTERSECT SELECT 2, 2 FROM t1;
SELECT x, y FROM t1 UNION ALL BY NAME SELECT y, z FROM t2 EXCEPT SELECT 2, 2 FROM t1;
(SELECT x, y FROM t1 UNION ALL BY NAME SELECT y, z FROM t2) EXCEPT SELECT NULL, 2, 2 FROM t1;
SELECT x, x FROM t1 UNION ALL BY NAME SELECT y FROM t2;
SELECT x, x as a FROM t1 UNION ALL BY NAME SELECT y FROM t2;
SELECT x as a FROM t1 UNION ALL BY NAME SELECT x FROM t1;
SELECT DISTINCT ON(x) x FROM (SELECT 1 as x UNION ALL BY NAME SELECT '1' as x);
SELECT DISTINCT ON(x) x FROM (SELECT 1 as x UNION ALL BY NAME SELECT 1.1 as x);
CREATE TABLE new_table AS (SELECT x, y FROM t1 UNION ALL BY NAME SELECT y, z FROM t2);
SELECT * FROM new_table;
PRAGMA enable_verification;
CREATE TABLE test AS SELECT * FROM range(0, 1024, 1) t1(a);
CREATE TABLE test2 AS SELECT * FROM range(0, 1024, 1) t1(b);
(SELECT * FROM test, test2 WHERE a=b) UNION (SELECT * FROM test,test2 WHERE a=b) ORDER BY 1;
WITH test_cte AS ((SELECT * FROM test, test2 WHERE a=b) UNION (SELECT * FROM test,test2 WHERE a=b)) SELECT SUM(ta.a) FROM test_cte ta, test_cte tb WHERE ta.a=tb.a;
WITH test_cte AS ((SELECT * FROM test, test2 WHERE a=b) UNION (SELECT * FROM test,test2 WHERE a=b)), results AS (SELECT SUM(ta.a) AS sum_a FROM test_cte ta, test_cte tb WHERE ta.a=tb.a) SELECT * FROM (SELECT * FROM results GROUP BY sum_a UNION SELECT * FROM results GROUP BY sum_a UNION SELECT * FROM results GROUP BY sum_a UNION SELECT * FROM results GROUP BY sum_a) AS t;
CREATE TABLE a(i INTEGER);
INSERT INTO a VALUES (41), (42), (43);
CREATE TABLE b(i INTEGER);
INSERT INTO b VALUES (40), (43), (43);
select * from a except select * from b order by 1;
select * from a intersect select * from b;
SET default_null_order='nulls_first';
PRAGMA enable_verification;
CREATE TABLE t1 (x INT, y INT);
INSERT INTO t1 VALUES (3, 3), (3, 3), (1, 1);
CREATE TABLE t2 (y INT, z INT);
INSERT INTO t2 VALUES (2, 2), (4, 4);
SELECT t1.x FROM t1 UNION BY NAME SELECT x FROM t1 ORDER BY t1.x;
SELECT x FROM t1 UNION BY NAME SELECT x FROM t1 ORDER BY t1.x;
(SELECT x FROM t1 UNION ALL SELECT x FROM t1) UNION BY NAME SELECT 5 ORDER BY t1.x;
(SELECT x FROM t1 UNION ALL SELECT y FROM t1) UNION BY NAME SELECT 5 ORDER BY y;
SELECT x AS a FROM t1 UNION BY NAME SELECT x AS b FROM t1 ORDER BY t1.x;
(SELECT x FROM t1 UNION ALL SELECT y FROM t1) UNION BY NAME (SELECT z FROM t2 UNION ALL SELECT y FROM t2) ORDER BY y, z;
SELECT 1 UNION BY NAME SELECT * FROM range(2, 100) UNION BY NAME SELECT 999 ORDER BY #2, #1 LIMIT 5;
SELECT x, y FROM t1 UNION BY NAME SELECT y, z FROM t2 ORDER BY y;
SELECT x, y FROM t1 UNION BY NAME SELECT y, z FROM t2 ORDER BY 3, 1;
SELECT x, y FROM t1 UNION BY NAME SELECT y, z FROM t2 ORDER BY 4;
(SELECT 1 UNION BY NAME SELECT x, y FROM t1) UNION BY NAME SELECT y, z FROM t2 ORDER BY ALL;
SELECT x, y FROM t1 UNION BY NAME (SELECT y, z FROM t2 INTERSECT SELECT 2, 2 FROM t1 ORDER BY #1) ORDER BY #1;
(SELECT x, y FROM t1 UNION BY NAME SELECT y, z FROM t2 ORDER BY #1) EXCEPT SELECT NULL, 2, 2 FROM t1 ORDER BY #1;
SELECT x, x as a FROM t1 UNION BY NAME SELECT y FROM t2 ORDER BY #1, #3;
SELECT x as a FROM t1 UNION BY NAME SELECT x FROM t1 ORDER BY #1, #2;
PRAGMA enable_verification;
SELECT 1 UNION ALL SELECT 2;
SELECT 1, 'a' UNION ALL SELECT 2, 'b';
SELECT 1, 'a' UNION ALL SELECT 2, 'b' UNION ALL SELECT 3, 'c' order by 1;
SELECT 1, 'a' UNION ALL SELECT 2, 'b' UNION ALL SELECT 3, 'c' UNION ALL SELECT 4, 'd' order by 1;
SELECT NULL UNION SELECT NULL;
SELECT NULL EXCEPT SELECT NULL;
SELECT NULL INTERSECT SELECT NULL;
CREATE TABLE test (a INTEGER, b INTEGER);
INSERT INTO test VALUES (11, 1), (12, 1), (13, 2);
SELECT a FROM test WHERE a < 13 UNION ALL SELECT a FROM test WHERE a = 13;
SELECT b FROM test WHERE a < 13 UNION ALL SELECT b FROM test WHERE a > 11;
SELECT 1 UNION ALL SELECT 'asdf';
SELECT NULL UNION ALL SELECT 'asdf';
SELECT 1 UNION SELECT 1;
SELECT 1, 'a' UNION SELECT 2, 'b' UNION SELECT 3, 'c' UNION SELECT 1, 'a' order by 1;
SELECT b FROM test WHERE a < 13 UNION  SELECT b FROM test WHERE a > 11 ORDER BY 1;
SELECT 1, 'a' UNION ALL SELECT 1, 'a' UNION SELECT 2, 'b' UNION SELECT 1, 'a' ORDER BY 1;
SELECT 1, 'a' UNION ALL SELECT 1, 'a' UNION SELECT 2, 'b' UNION SELECT 1, 'a' ORDER BY 1 DESC;
select x, count(*) as c
from ((select * from (values(1),(2),(2),(3),(3),(3),(4),(4),(4),(4)) s(x) except all select * from (values(1),(3),(3)) t(x)) intersect all select * from (values(2),(2),(2),(4),(3),(3)) u(x)) s
group by x order by x;
SELECT COUNT(*) FROM (SELECT * FROM range(1000000) tbl(i) UNION ALL SELECT * FROM range(1000000) tbl(i)) tbl(i);
CREATE TABLE t1 AS SELECT COUNT(*) FROM (SELECT * FROM range(1000000) tbl(i) UNION ALL SELECT * FROM range(1000000) tbl(i)) tbl(i);
SELECT * FROM t1;
SELECT COUNT(*) FROM (SELECT * FROM range(1000000) tbl(i) UNION ALL SELECT * FROM range(1000000) tbl(i) UNION ALL SELECT * FROM range(1000000) tbl(i) UNION ALL SELECT * FROM range(1000000) tbl(i) UNION ALL SELECT * FROM range(1000000) tbl(i)) tbl(i);
PRAGMA enable_verification;
SELECT COUNT(*) FROM range(1)
UNION ALL SELECT COUNT(*) FROM range(1);
SELECT COUNT(*) FROM range(1)
UNION ALL SELECT COUNT(*) FROM range(1)
UNION ALL SELECT COUNT(*) FROM range(1)
UNION ALL SELECT COUNT(*) FROM range(1)
UNION ALL SELECT COUNT(*) FROM range(1);
SELECT COUNT(*) FROM range(1) UNION SELECT COUNT(*) FROM range(1);
SELECT COUNT(*) FROM range(1)
UNION SELECT COUNT(*) FROM range(2)
ORDER BY 1;
SELECT COUNT(*) FROM range(1)
UNION SELECT COUNT(*) FROM range(2)
UNION SELECT COUNT(*) FROM range(3)
UNION SELECT COUNT(*) FROM range(4)
UNION SELECT COUNT(*) FROM range(5)
ORDER BY 1;
SELECT * FROM (
	SELECT 1
	UNION ALL
	SELECT 1
) tbl(i);
SELECT * FROM (
	SELECT 1
	UNION
	SELECT 2
	UNION
	SELECT 3
	UNION
	SELECT 4
	UNION
	SELECT 5
) tbl(i)
ORDER BY 1;
PRAGMA enable_verification;
CREATE TABLE integers(i INTEGER);
INSERT INTO integers VALUES (1), (2);
CREATE TABLE integers2(i INTEGER);
INSERT INTO integers2 VALUES (2), (3);
CREATE VIEW v1 AS SELECT * FROM integers UNION ALL SELECT * FROM integers;
CREATE VIEW v2 AS SELECT * FROM integers2 UNION ALL SELECT * FROM integers2;
SELECT COUNT(*) FROM v1 JOIN v2 USING (i);
SELECT COUNT(*) FROM v1 LEFT JOIN v2 USING (i);
SELECT COUNT(*) FROM v1 RIGHT JOIN v2 USING (i);
SELECT COUNT(*) FROM v1 FULL OUTER JOIN v2 USING (i);
SELECT COUNT(*) FROM v1 JOIN v1 v2 USING (i);
SELECT COUNT(*) FROM v1 FULL OUTER JOIN v1 v2 USING (i);
CREATE VIEW v3 AS SELECT (SELECT integers2.i-1) i FROM integers2 UNION ALL SELECT (SELECT integers2.i-1) i FROM integers2;
CREATE VIEW v4 AS SELECT (SELECT integers.i+1) i FROM integers UNION ALL SELECT (SELECT integers.i+1) i FROM integers;
SELECT COUNT(*) FROM v3;
SELECT COUNT(*) FROM v4;
SELECT COUNT(*) FROM v3 JOIN v4 USING (i);
SELECT COUNT(*) FROM v3 LEFT JOIN v4 USING (i);
SELECT COUNT(*) FROM v3 RIGHT JOIN v4 USING (i);
SELECT COUNT(*) FROM v3 FULL OUTER JOIN v4 USING (i);
select * from (values(42, 84)) s1(c1, c2) union all select * from (values(84, 42)) s2(c2, c3) order by c1;
select * from (values(42, 84)) s1(c1, c2) union all select * from (values(84, 42)) s2(c2, c3) order by c3;
create table a (i integer);
create table b(i integer);
create table c (i integer);
insert into a values(42), (43), (44);
insert into b values(43);
insert into c values(44);
select * from a except select * from b except select * from c;
PRAGMA enable_verification;
create table t (i int);
insert into t values (1),(2),(3),(4),(4);
select i from t union select 1 where false order by 1;
select i from t except select 1 where false order by 1;
SET default_null_order='nulls_first';
PRAGMA enable_verification;
SELECT 1 AS two UNION SELECT 2 ORDER BY 1;
SELECT 1 AS one UNION SELECT 1 ORDER BY 1;
SELECT 1 AS two UNION ALL SELECT 2;
SELECT 1 AS two UNION ALL SELECT 1;
SELECT 1 AS three UNION SELECT 2 UNION SELECT 3 ORDER BY 1;
SELECT 1 AS two UNION SELECT 2 UNION SELECT 2 ORDER BY 1;
SELECT 1 AS three UNION SELECT 2 UNION ALL SELECT 2 ORDER BY 1;
SELECT 1.1 AS two UNION SELECT 2.2 ORDER BY 1;
SELECT 1.1 AS two UNION SELECT 2 ORDER BY 1;
SELECT 1 AS two UNION SELECT 2.2 ORDER BY 1;
SELECT 1 AS one UNION SELECT 1.0::float8 ORDER BY 1;
SELECT 1.1 AS two UNION ALL SELECT 2 ORDER BY 1;
SELECT 1.0::float8 AS two UNION ALL SELECT 1 ORDER BY 1;
SELECT 1.1 AS three UNION SELECT 2 UNION SELECT 3 ORDER BY 1;
SELECT 1.1::float8 AS two UNION SELECT 2 UNION SELECT 2.0::float8 ORDER BY 1;
SELECT 1.1 AS three UNION SELECT 2 UNION ALL SELECT 2 ORDER BY 1;
SELECT 1.1 AS two UNION (SELECT 2 UNION ALL SELECT 2) ORDER BY 1;
CREATE TABLE FLOAT8_TBL(f1 float8);
INSERT INTO FLOAT8_TBL(f1) VALUES
  ('0.0'),
  ('-34.84'),
  ('-1004.30'),
  ('-1.2345678901234e+200'),
  ('-1.2345678901234e-200');
CREATE TABLE INT4_TBL(f1 int4);
INSERT INTO INT4_TBL(f1) VALUES
  ('   0  '),
  ('123456     '),
  ('    -123456'),
  ('2147483647'),  -- largest and smallest values
  ('-2147483647');
CREATE TABLE INT8_TBL(q1 int8, q2 int8);
INSERT INTO INT8_TBL VALUES
  ('  123   ','  456'),
  ('123   ','4567890123456789'),
  ('4567890123456789','123'),
  (+4567890123456789,'4567890123456789'),
  ('+4567890123456789','-4567890123456789');
CREATE TABLE CHAR_TBL(f1 char(4));
INSERT INTO CHAR_TBL (f1) VALUES
  ('a'),
  ('ab'),
  ('abcd'),
  ('abcd    ');
CREATE TABLE VARCHAR_TBL(f1 varchar(4));
INSERT INTO VARCHAR_TBL (f1) VALUES
  ('a'),
  ('ab'),
  ('abcd'),
  ('abcd    ');
SELECT f1 AS five FROM FLOAT8_TBL
UNION
SELECT f1 FROM FLOAT8_TBL
ORDER BY 1;
SELECT f1 AS ten FROM FLOAT8_TBL
UNION ALL
SELECT f1 FROM FLOAT8_TBL;
SELECT f1 AS nine FROM FLOAT8_TBL
UNION
SELECT f1 FROM INT4_TBL
ORDER BY 1;
SELECT f1 AS ten FROM FLOAT8_TBL
UNION ALL
SELECT f1 FROM INT4_TBL;
SELECT f1 AS five FROM FLOAT8_TBL
  WHERE f1 BETWEEN -1e6 AND 1e6
UNION
SELECT f1 FROM INT4_TBL
  WHERE f1 BETWEEN 0 AND 1000000
ORDER BY 1;
SELECT q2 FROM int8_tbl INTERSECT SELECT q1 FROM int8_tbl ORDER BY 1;
SELECT q2 FROM int8_tbl INTERSECT ALL SELECT q1 FROM int8_tbl ORDER BY 1;
SELECT q2 FROM int8_tbl EXCEPT SELECT q1 FROM int8_tbl ORDER BY 1;
SELECT q2 FROM int8_tbl EXCEPT ALL SELECT q1 FROM int8_tbl ORDER BY 1;
SELECT q2 FROM int8_tbl EXCEPT ALL SELECT DISTINCT q1 FROM int8_tbl ORDER BY 1;
SELECT q1 FROM int8_tbl EXCEPT SELECT q2 FROM int8_tbl ORDER BY 1;
SELECT q1 FROM int8_tbl EXCEPT ALL SELECT q2 FROM int8_tbl ORDER BY 1;
SELECT q1 FROM int8_tbl EXCEPT ALL SELECT DISTINCT q2 FROM int8_tbl ORDER BY 1;
SELECT q1 FROM int8_tbl EXCEPT ALL SELECT q1 FROM int8_tbl FOR NO KEY UPDATE;
(SELECT 1,2,3 UNION SELECT 4,5,6) INTERSECT SELECT 4,5,6;
(SELECT 1,2,3 UNION SELECT 4,5,6 ORDER BY 1,2) INTERSECT SELECT 4,5,6;
(SELECT 1,2,3 UNION SELECT 4,5,6) EXCEPT SELECT 4,5,6;
(SELECT 1,2,3 UNION SELECT 4,5,6 ORDER BY 1,2) EXCEPT SELECT 4,5,6;
SELECT f1 FROM float8_tbl INTERSECT SELECT f1 FROM int4_tbl ORDER BY 1;
SELECT f1 FROM float8_tbl EXCEPT SELECT f1 FROM int4_tbl ORDER BY 1;
SELECT q1 FROM int8_tbl INTERSECT SELECT q2 FROM int8_tbl UNION ALL SELECT q2 FROM int8_tbl  ORDER BY 1;
SELECT q1 FROM int8_tbl INTERSECT (((SELECT q2 FROM int8_tbl UNION ALL SELECT q2 FROM int8_tbl))) ORDER BY 1;
(((SELECT q1 FROM int8_tbl INTERSECT SELECT q2 FROM int8_tbl ORDER BY 1))) UNION ALL SELECT q2 FROM int8_tbl;
SELECT q1 FROM int8_tbl UNION ALL SELECT q2 FROM int8_tbl EXCEPT SELECT q1 FROM int8_tbl ORDER BY 1;
SELECT q1 FROM int8_tbl UNION ALL (((SELECT q2 FROM int8_tbl EXCEPT SELECT q1 FROM int8_tbl ORDER BY 1)));
(((SELECT q1 FROM int8_tbl UNION ALL SELECT q2 FROM int8_tbl))) EXCEPT SELECT q1 FROM int8_tbl ORDER BY 1;
SELECT q1 FROM int8_tbl EXCEPT (((SELECT q2 FROM int8_tbl ORDER BY q2 LIMIT 1))) ORDER BY 1;
(((((select * from int8_tbl)))));
PRAGMA enable_verification;
SELECT 1 UNION ALL SELECT * FROM range(2, 100) UNION ALL SELECT 999 LIMIT 5;
SELECT 'select count(case'a union all select 'when a='||range||' then 1' from range(100) LIMIT 5;
SELECT STRING_AGG(a, ' ') FROM (SELECT 'select count(case'a union all select 'when a='||range||' then 1' from range(2) union all select 'end) from t') tbl;
SELECT 'select count(case'a union all select 'when a='||range||' then 1' from range(2) union all select 'end) from t' LIMIT 5;
SELECT 'select count(case'a union all select 'when a='||range||' then 1' from range(100) union all select 'end) from t' LIMIT 5;
SELECT 1
UNION ALL
(
	SELECT * FROM generate_series(10, 12, 1)
	UNION ALL
	(
		SELECT * FROM generate_series(100, 103, 1)
	)
	UNION ALL
	SELECT * FROM generate_series(1000, 1002, 1)
)
UNION ALL
SELECT * FROM generate_series(10000, 10002, 1)
UNION ALL
(
	SELECT * FROM generate_series(100000, 100002, 1)
	UNION ALL
	SELECT * FROM generate_series(1000000, 1000003, 1)
);
SELECT ARRAY_AGG(1)
UNION ALL
(
	SELECT ARRAY_AGG(i) FROM generate_series(10, 12, 1) tbl(i)
	UNION ALL
	(
		SELECT ARRAY_AGG(i) FROM generate_series(100, 103, 1) tbl(i)
	)
	UNION ALL
	SELECT ARRAY_AGG(i) FROM generate_series(1000, 1002, 1) tbl(i)
)
UNION ALL
SELECT ARRAY_AGG(i) FROM generate_series(10000, 10002, 1) tbl(i)
UNION ALL
(
	SELECT ARRAY_AGG(i) FROM generate_series(100000, 100002, 1) tbl(i)
	UNION ALL
	SELECT ARRAY_AGG(i) FROM generate_series(1000000, 1000003, 1) tbl(i)
);
SELECT 1
UNION ALL
(
	SELECT * FROM generate_series(10, 12, 1)
	UNION ALL
	(
		SELECT * FROM generate_series(100, 103, 1)
	)
	UNION ALL
	SELECT * FROM generate_series(1000, 1002, 1)
)
UNION ALL
SELECT * FROM generate_series(10000, 10002, 1)
UNION ALL
(
	SELECT * FROM generate_series(100000, 100002, 1)
	UNION ALL
	SELECT * FROM generate_series(1000000, 1000003, 1)
)
LIMIT 1000;
SELECT ARRAY_AGG(1)
UNION ALL
(
	SELECT ARRAY_AGG(i) FROM generate_series(10, 12, 1) tbl(i)
	UNION ALL
	(
		SELECT ARRAY_AGG(i) FROM generate_series(100, 103, 1) tbl(i)
	)
	UNION ALL
	SELECT ARRAY_AGG(i) FROM generate_series(1000, 1002, 1) tbl(i)
)
UNION ALL
SELECT ARRAY_AGG(i) FROM generate_series(10000, 10002, 1) tbl(i)
UNION ALL
(
	SELECT ARRAY_AGG(i) FROM generate_series(100000, 100002, 1) tbl(i)
	UNION ALL
	SELECT ARRAY_AGG(i) FROM generate_series(1000000, 1000003, 1) tbl(i)
)
LIMIT 1000;
PRAGMA enable_verification;
PRAGMA threads=4;
PRAGMA verify_parallelism;
CREATE TABLE integers AS SELECT * FROM range(1000000) tbl(i);
SELECT COUNT(*) FROM (SELECT * FROM integers UNION ALL SELECT * FROM integers) tbl(i);
SELECT COUNT(*) FROM (SELECT 1 UNION ALL SELECT * FROM integers) tbl(i);
SELECT COUNT(*) FROM (SELECT * FROM integers UNION ALL SELECT 1) tbl(i);
SELECT COUNT(*) FROM (SELECT * FROM integers UNION ALL SELECT * FROM integers) tbl(i) WHERE i < 500000;
SELECT COUNT(*) FROM (SELECT * FROM integers UNION ALL SELECT * FROM integers UNION ALL SELECT * FROM integers UNION ALL SELECT * FROM integers) tbl(i);
PRAGMA enable_verification;
SELECT 1 UNION SELECT 1.0;
SELECT 1 UNION ALL SELECT 1.0;
SELECT 1 UNION (SELECT 1 UNION SELECT 1 UNION SELECT 1);
SELECT 1 UNION (SELECT 1.0 UNION SELECT 1.0 UNION SELECT 1.0) UNION SELECT 1;
SELECT 1 UNION ALL (SELECT 1.0 UNION ALL SELECT 1.0 UNION ALL SELECT 1.0) UNION ALL SELECT 1;
SELECT 1 UNION (SELECT '1' UNION SELECT '1' UNION SELECT '1') UNION SELECT 1;
PRAGMA threads=4;
PRAGMA verify_parallelism;
CREATE TABLE tbl AS SELECT * FROM range(10000) tbl(i) UNION ALL SELECT NULL;
SELECT SUM(i) FROM tbl
UNION ALL
SELECT COUNT(i) FROM tbl
UNION ALL
SELECT AVG(i) FROM tbl
UNION ALL
SELECT AVG(i) + SUM(i) FROM tbl
ORDER BY 1;
CREATE TABLE t(i INTEGER);
INSERT INTO t VALUES (42);
select i, j from (select i, 1 as j from t group by i union all select i, 2 as j from t group by i) sq1;
SET default_null_order='nulls_first';
PRAGMA enable_verification;
CREATE TABLE test(a INTEGER);
CREATE TABLE test2(b INTEGER);
INSERT INTO test VALUES (1), (2), (3), (NULL);
INSERT INTO test2 VALUES (2), (3), (4), (NULL);
(SELECT a FROM test ORDER BY a+1) UNION SELECT b FROM test2 ORDER BY 1;
SELECT * FROM (SELECT * FROM test UNION SELECT * FROM test2) res ORDER BY 1;
SELECT a FROM (SELECT * FROM test UNION SELECT * FROM test2) res ORDER BY 1;
SELECT b FROM (SELECT * FROM test UNION SELECT * FROM test2) res ORDER BY 1;
SELECT b FROM (SELECT * FROM test2 UNION SELECT * FROM test) res ORDER BY 1;
SELECT col1 FROM (SELECT * FROM test2 UNION SELECT * FROM test) res(col1) ORDER BY 1;
SELECT a FROM test UNION SELECT b FROM test2 ORDER BY a;
SELECT a FROM test UNION SELECT b FROM test2 ORDER BY b;
SELECT 1, a FROM test UNION SELECT b AS a, 1 FROM test2 ORDER BY a, 1;
SELECT 1, a+1 FROM test UNION SELECT a+1, 1 FROM test ORDER BY a+1;
SELECT a FROM test UNION SELECT b FROM test2 UNION SELECT b AS c FROM test2 ORDER BY c;
SELECT a FROM test UNION SELECT b FROM test2 UNION SELECT b + 1 FROM test2 ORDER BY b + 1;
SELECT a, 10 - a AS b FROM test UNION SELECT b, b + 1 FROM test2 ORDER BY 2;
SELECT a, 10 - a AS b FROM test UNION SELECT b, b + 1 FROM test2 ORDER BY b;
SELECT a FROM test UNION SELECT b FROM test2 ORDER BY 1;
SELECT a FROM test UNION SELECT b FROM test2 ORDER BY 2;
(SELECT a FROM test ORDER BY a+1) UNION SELECT b FROM test2 ORDER BY 1;
SELECT * FROM test UNION SELECT * FROM test2 ORDER BY a;
SELECT * FROM test UNION SELECT * FROM test2 ORDER BY b;
SELECT a FROM test UNION SELECT * FROM test2 ORDER BY test.a;
SELECT a FROM test UNION SELECT b FROM test2 ORDER BY test2.b;
SELECT test.a FROM test UNION SELECT * FROM test2 ORDER BY a;
SELECT test.a FROM test UNION SELECT test2.b FROM test2 ORDER BY b;
SELECT a FROM test UNION SELECT * FROM test2 UNION SELECT * FROM test t1 ORDER BY test.a, test2.b, t1.a;
SELECT a FROM test UNION SELECT * FROM test2 UNION SELECT * FROM test t1 ORDER BY a;
SELECT a FROM (SELECT * FROM test) bla UNION SELECT * FROM test2 ORDER BY bla.a;
SELECT t1.a, t2.a FROM test t1, test t2 WHERE t1.a=t2.a UNION SELECT b, b - 1 FROM test2 ORDER BY t1.a, t2.a, test2.b;
SELECT NULL as a, NULL as b, 1 as id UNION SELECT CAST('2015-10-11 00:00:00' AS TIMESTAMP) as a, CAST('2015-10-11 12:34:56' AS TIMESTAMP) as b, 2 as id ORDER BY 3;
PRAGMA enable_verification;
SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT NULL UNION ALL SELECT 3;
SELECT MIN(1) FROM range(10) UNION ALL SELECT MIN(2) FROM range(10) UNION ALL SELECT MIN(NULL) FROM range(10) UNION ALL SELECT MIN(3) FROM range(10);
