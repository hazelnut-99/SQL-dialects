SET default_null_order='nulls_first';;
BEGIN TRANSACTION;
CREATE TABLE integers(i INTEGER, j INTEGER, CHECK(i+j<10));
CREATE TABLE strings(v VARCHAR, d DATE, PRIMARY KEY(d));
CREATE TYPE mood AS ENUM ('sad', 'ok', 'happy');;
CREATE TABLE enums(current_mood mood);
INSERT INTO integers VALUES (1, 3), (4, 2), (NULL, 1);
INSERT INTO strings VALUES ('NULL', DATE '1992-01-01'), (NULL, DATE '1993-01-01');;
INSERT INTO enums VALUES ('sad'),('ok'),('sad'),('happy');
CREATE TABLE "table.with-symbols"(i INTEGER);
INSERT INTO "table.with-symbols" VALUES (1), (4), (NULL);
CREATE TABLE "table ""." ( "col ""." TEXT);
INSERT INTO "table ""." ("col "".") VALUES ('quote_escaped_quote_''');
CREATE TABLE "SAME_NAME"(i INTEGER, j INTEGER);;
CREATE TABLE "same_name"(i INTEGER, j INTEGER);;
INSERT INTO "SAME_NAME" VALUES (1, 1), (2, 2);
CREATE VIEW v1 AS SELECT * FROM integers WHERE i>3; --
CREATE VIEW v2 AS SELECT * FROM integers WHERE i < 3;
CREATE VIEW "view.with-symbols" AS SELECT * FROM "table.with-symbols" WHERE i < 3;
CREATE VIEW "view ""." AS SELECT * FROM "table.with-symbols" WHERE i < 3;;
CREATE VIEW v1 AS SELECT * FROM integers WHERE i>3; --
CREATE VIEW v2 AS SELECT * FROM integers WHERE i < 3;
CREATE VIEW "view.with-symbols" AS SELECT * FROM "table.with-symbols" WHERE i < 3;
CREATE VIEW "view ""." AS SELECT * FROM "table.with-symbols" WHERE i < 3;;
CREATE VIEW v1 AS SELECT * FROM integers WHERE i>3; --
CREATE VIEW v2 AS SELECT * FROM integers WHERE i < 3;
CREATE VIEW "view.with-symbols" AS SELECT * FROM "table.with-symbols" WHERE i < 3;
CREATE VIEW "view ""." AS SELECT * FROM "table.with-symbols" WHERE i < 3;;
CREATE VIEW v1 AS SELECT * FROM integers WHERE i>3; --
CREATE VIEW v2 AS SELECT * FROM integers WHERE i < 3;
CREATE VIEW "view.with-symbols" AS SELECT * FROM "table.with-symbols" WHERE i < 3;
CREATE VIEW "view ""." AS SELECT * FROM "table.with-symbols" WHERE i < 3;;
CREATE VIEW v3 AS SELECT * FROM integers WHERE i IS NULL --;
CREATE SEQUENCE seq;
SELECT nextval('seq');
SELECT * FROM v2 ORDER BY 1;
SELECT * FROM integers ORDER BY 1;
SELECT * FROM enums ORDER BY 1;
SELECT * FROM strings ORDER BY 1;
SELECT * FROM v1 ORDER BY 1;
SELECT * FROM v2 ORDER BY 1;
SELECT * FROM v3 ORDER BY 1;
SELECT * FROM "table.with-symbols" ORDER BY 1;
SELECT * FROM "view.with-symbols" ORDER BY 1;
SELECT "table ""."."col "".", "col ""." FROM "table "".";;
SELECT * FROM "view ""." ORDER BY 1;
SELECT * FROM "SAME_NAME" ORDER BY i;
CREATE SCHEMA s1;
CREATE SCHEMA s2;;
CREATE SCHEMA s1;
CREATE SCHEMA s2;;
CREATE TABLE table01(i INTEGER, j INTEGER);
CREATE TABLE s1.table01(i INTEGER, j INTEGER);
CREATE TABLE s2.table01(i INTEGER, j INTEGER);;
CREATE TABLE table01(i INTEGER, j INTEGER);
CREATE TABLE s1.table01(i INTEGER, j INTEGER);
CREATE TABLE s2.table01(i INTEGER, j INTEGER);;
CREATE TABLE table01(i INTEGER, j INTEGER);
CREATE TABLE s1.table01(i INTEGER, j INTEGER);
CREATE TABLE s2.table01(i INTEGER, j INTEGER);;
INSERT INTO table01 VALUES (1, 1), (2, 2);
INSERT INTO s1.table01 VALUES (3, 3), (4, 4);
INSERT INTO s2.table01 VALUES (5, 5), (6, 6);;
INSERT INTO table01 VALUES (1, 1), (2, 2);
INSERT INTO s1.table01 VALUES (3, 3), (4, 4);
INSERT INTO s2.table01 VALUES (5, 5), (6, 6);;
INSERT INTO table01 VALUES (1, 1), (2, 2);
INSERT INTO s1.table01 VALUES (3, 3), (4, 4);
INSERT INTO s2.table01 VALUES (5, 5), (6, 6);;
SELECT * FROM table01 ORDER BY i;;
SELECT * FROM s1.table01 ORDER BY i;;
SELECT * FROM s2.table01 ORDER BY i;;
EXPORT DATABASE 'duckdb_unittest_tempdir/54864/export_test' (FORMAT CSV);
ROLLBACK;
CREATE SCHEMA s1;
CREATE SCHEMA s2;

CREATE TYPE mood AS ENUM('sad', 'ok', 'happy');

CREATE SEQUENCE seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 2 NO CYCLE;

CREATE TABLE enums(current_mood ENUM('sad', 'ok', 'happy'));
CREATE TABLE integers(i INTEGER, j INTEGER, CHECK(((i + j) < 10)));
CREATE TABLE SAME_NAME(i INTEGER, j INTEGER);
CREATE TABLE strings(v VARCHAR, d DATE, PRIMARY KEY(d));
CREATE TABLE "table ""."("col ""." VARCHAR);
CREATE TABLE "table.with-symbols"(i INTEGER);
CREATE TABLE table01(i INTEGER, j INTEGER);
CREATE TABLE s1.table01(i INTEGER, j INTEGER);
CREATE TABLE s2.table01(i INTEGER, j INTEGER);

CREATE VIEW v1 AS SELECT * FROM integers WHERE (i > 3);

CREATE VIEW v2 AS SELECT * FROM integers WHERE (i < 3);

CREATE VIEW v3 AS SELECT * FROM integers WHERE (i IS NULL);

CREATE VIEW "view ""." AS SELECT * FROM "table.with-symbols" WHERE (i < 3);

CREATE VIEW "view.with-symbols" AS SELECT * FROM "table.with-symbols" WHERE (i < 3);




COPY enums FROM 'duckdb_unittest_tempdir/54864/export_test/enums.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY integers FROM 'duckdb_unittest_tempdir/54864/export_test/integers.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY SAME_NAME FROM 'duckdb_unittest_tempdir/54864/export_test/same_name.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY strings FROM 'duckdb_unittest_tempdir/54864/export_test/strings.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY "table ""." FROM 'duckdb_unittest_tempdir/54864/export_test/table___.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY "table.with-symbols" FROM 'duckdb_unittest_tempdir/54864/export_test/table_with_symbols.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY table01 FROM 'duckdb_unittest_tempdir/54864/export_test/table__.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY s1.table01 FROM 'duckdb_unittest_tempdir/54864/export_test/s__table__.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY s2.table01 FROM 'duckdb_unittest_tempdir/54864/export_test/s__table___1.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );;
CREATE SCHEMA s1;
CREATE SCHEMA s2;

CREATE TYPE mood AS ENUM('sad', 'ok', 'happy');

CREATE SEQUENCE seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 2 NO CYCLE;

CREATE TABLE enums(current_mood ENUM('sad', 'ok', 'happy'));
CREATE TABLE integers(i INTEGER, j INTEGER, CHECK(((i + j) < 10)));
CREATE TABLE SAME_NAME(i INTEGER, j INTEGER);
CREATE TABLE strings(v VARCHAR, d DATE, PRIMARY KEY(d));
CREATE TABLE "table ""."("col ""." VARCHAR);
CREATE TABLE "table.with-symbols"(i INTEGER);
CREATE TABLE table01(i INTEGER, j INTEGER);
CREATE TABLE s1.table01(i INTEGER, j INTEGER);
CREATE TABLE s2.table01(i INTEGER, j INTEGER);

CREATE VIEW v1 AS SELECT * FROM integers WHERE (i > 3);

CREATE VIEW v2 AS SELECT * FROM integers WHERE (i < 3);

CREATE VIEW v3 AS SELECT * FROM integers WHERE (i IS NULL);

CREATE VIEW "view ""." AS SELECT * FROM "table.with-symbols" WHERE (i < 3);

CREATE VIEW "view.with-symbols" AS SELECT * FROM "table.with-symbols" WHERE (i < 3);




COPY enums FROM 'duckdb_unittest_tempdir/54864/export_test/enums.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY integers FROM 'duckdb_unittest_tempdir/54864/export_test/integers.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY SAME_NAME FROM 'duckdb_unittest_tempdir/54864/export_test/same_name.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY strings FROM 'duckdb_unittest_tempdir/54864/export_test/strings.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY "table ""." FROM 'duckdb_unittest_tempdir/54864/export_test/table___.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY "table.with-symbols" FROM 'duckdb_unittest_tempdir/54864/export_test/table_with_symbols.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY table01 FROM 'duckdb_unittest_tempdir/54864/export_test/table__.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY s1.table01 FROM 'duckdb_unittest_tempdir/54864/export_test/s__table__.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY s2.table01 FROM 'duckdb_unittest_tempdir/54864/export_test/s__table___1.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );;
CREATE SCHEMA s1;
CREATE SCHEMA s2;

CREATE TYPE mood AS ENUM('sad', 'ok', 'happy');

CREATE SEQUENCE seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 2 NO CYCLE;

CREATE TABLE enums(current_mood ENUM('sad', 'ok', 'happy'));
CREATE TABLE integers(i INTEGER, j INTEGER, CHECK(((i + j) < 10)));
CREATE TABLE SAME_NAME(i INTEGER, j INTEGER);
CREATE TABLE strings(v VARCHAR, d DATE, PRIMARY KEY(d));
CREATE TABLE "table ""."("col ""." VARCHAR);
CREATE TABLE "table.with-symbols"(i INTEGER);
CREATE TABLE table01(i INTEGER, j INTEGER);
CREATE TABLE s1.table01(i INTEGER, j INTEGER);
CREATE TABLE s2.table01(i INTEGER, j INTEGER);

CREATE VIEW v1 AS SELECT * FROM integers WHERE (i > 3);

CREATE VIEW v2 AS SELECT * FROM integers WHERE (i < 3);

CREATE VIEW v3 AS SELECT * FROM integers WHERE (i IS NULL);

CREATE VIEW "view ""." AS SELECT * FROM "table.with-symbols" WHERE (i < 3);

CREATE VIEW "view.with-symbols" AS SELECT * FROM "table.with-symbols" WHERE (i < 3);




COPY enums FROM 'duckdb_unittest_tempdir/54864/export_test/enums.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY integers FROM 'duckdb_unittest_tempdir/54864/export_test/integers.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY SAME_NAME FROM 'duckdb_unittest_tempdir/54864/export_test/same_name.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY strings FROM 'duckdb_unittest_tempdir/54864/export_test/strings.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY "table ""." FROM 'duckdb_unittest_tempdir/54864/export_test/table___.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY "table.with-symbols" FROM 'duckdb_unittest_tempdir/54864/export_test/table_with_symbols.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY table01 FROM 'duckdb_unittest_tempdir/54864/export_test/table__.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY s1.table01 FROM 'duckdb_unittest_tempdir/54864/export_test/s__table__.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY s2.table01 FROM 'duckdb_unittest_tempdir/54864/export_test/s__table___1.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );;
CREATE SCHEMA s1;
CREATE SCHEMA s2;

CREATE TYPE mood AS ENUM('sad', 'ok', 'happy');

CREATE SEQUENCE seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 2 NO CYCLE;

CREATE TABLE enums(current_mood ENUM('sad', 'ok', 'happy'));
CREATE TABLE integers(i INTEGER, j INTEGER, CHECK(((i + j) < 10)));
CREATE TABLE SAME_NAME(i INTEGER, j INTEGER);
CREATE TABLE strings(v VARCHAR, d DATE, PRIMARY KEY(d));
CREATE TABLE "table ""."("col ""." VARCHAR);
CREATE TABLE "table.with-symbols"(i INTEGER);
CREATE TABLE table01(i INTEGER, j INTEGER);
CREATE TABLE s1.table01(i INTEGER, j INTEGER);
CREATE TABLE s2.table01(i INTEGER, j INTEGER);

CREATE VIEW v1 AS SELECT * FROM integers WHERE (i > 3);

CREATE VIEW v2 AS SELECT * FROM integers WHERE (i < 3);

CREATE VIEW v3 AS SELECT * FROM integers WHERE (i IS NULL);

CREATE VIEW "view ""." AS SELECT * FROM "table.with-symbols" WHERE (i < 3);

CREATE VIEW "view.with-symbols" AS SELECT * FROM "table.with-symbols" WHERE (i < 3);




COPY enums FROM 'duckdb_unittest_tempdir/54864/export_test/enums.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY integers FROM 'duckdb_unittest_tempdir/54864/export_test/integers.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY SAME_NAME FROM 'duckdb_unittest_tempdir/54864/export_test/same_name.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY strings FROM 'duckdb_unittest_tempdir/54864/export_test/strings.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY "table ""." FROM 'duckdb_unittest_tempdir/54864/export_test/table___.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY "table.with-symbols" FROM 'duckdb_unittest_tempdir/54864/export_test/table_with_symbols.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY table01 FROM 'duckdb_unittest_tempdir/54864/export_test/table__.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY s1.table01 FROM 'duckdb_unittest_tempdir/54864/export_test/s__table__.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY s2.table01 FROM 'duckdb_unittest_tempdir/54864/export_test/s__table___1.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );;
CREATE SCHEMA s1;
CREATE SCHEMA s2;

CREATE TYPE mood AS ENUM('sad', 'ok', 'happy');

CREATE SEQUENCE seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 2 NO CYCLE;

CREATE TABLE enums(current_mood ENUM('sad', 'ok', 'happy'));
CREATE TABLE integers(i INTEGER, j INTEGER, CHECK(((i + j) < 10)));
CREATE TABLE SAME_NAME(i INTEGER, j INTEGER);
CREATE TABLE strings(v VARCHAR, d DATE, PRIMARY KEY(d));
CREATE TABLE "table ""."("col ""." VARCHAR);
CREATE TABLE "table.with-symbols"(i INTEGER);
CREATE TABLE table01(i INTEGER, j INTEGER);
CREATE TABLE s1.table01(i INTEGER, j INTEGER);
CREATE TABLE s2.table01(i INTEGER, j INTEGER);

CREATE VIEW v1 AS SELECT * FROM integers WHERE (i > 3);

CREATE VIEW v2 AS SELECT * FROM integers WHERE (i < 3);

CREATE VIEW v3 AS SELECT * FROM integers WHERE (i IS NULL);

CREATE VIEW "view ""." AS SELECT * FROM "table.with-symbols" WHERE (i < 3);

CREATE VIEW "view.with-symbols" AS SELECT * FROM "table.with-symbols" WHERE (i < 3);




COPY enums FROM 'duckdb_unittest_tempdir/54864/export_test/enums.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY integers FROM 'duckdb_unittest_tempdir/54864/export_test/integers.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY SAME_NAME FROM 'duckdb_unittest_tempdir/54864/export_test/same_name.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY strings FROM 'duckdb_unittest_tempdir/54864/export_test/strings.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY "table ""." FROM 'duckdb_unittest_tempdir/54864/export_test/table___.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY "table.with-symbols" FROM 'duckdb_unittest_tempdir/54864/export_test/table_with_symbols.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY table01 FROM 'duckdb_unittest_tempdir/54864/export_test/table__.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY s1.table01 FROM 'duckdb_unittest_tempdir/54864/export_test/s__table__.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY s2.table01 FROM 'duckdb_unittest_tempdir/54864/export_test/s__table___1.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );;
CREATE SCHEMA s1;
CREATE SCHEMA s2;

CREATE TYPE mood AS ENUM('sad', 'ok', 'happy');

CREATE SEQUENCE seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 2 NO CYCLE;

CREATE TABLE enums(current_mood ENUM('sad', 'ok', 'happy'));
CREATE TABLE integers(i INTEGER, j INTEGER, CHECK(((i + j) < 10)));
CREATE TABLE SAME_NAME(i INTEGER, j INTEGER);
CREATE TABLE strings(v VARCHAR, d DATE, PRIMARY KEY(d));
CREATE TABLE "table ""."("col ""." VARCHAR);
CREATE TABLE "table.with-symbols"(i INTEGER);
CREATE TABLE table01(i INTEGER, j INTEGER);
CREATE TABLE s1.table01(i INTEGER, j INTEGER);
CREATE TABLE s2.table01(i INTEGER, j INTEGER);

CREATE VIEW v1 AS SELECT * FROM integers WHERE (i > 3);

CREATE VIEW v2 AS SELECT * FROM integers WHERE (i < 3);

CREATE VIEW v3 AS SELECT * FROM integers WHERE (i IS NULL);

CREATE VIEW "view ""." AS SELECT * FROM "table.with-symbols" WHERE (i < 3);

CREATE VIEW "view.with-symbols" AS SELECT * FROM "table.with-symbols" WHERE (i < 3);




COPY enums FROM 'duckdb_unittest_tempdir/54864/export_test/enums.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY integers FROM 'duckdb_unittest_tempdir/54864/export_test/integers.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY SAME_NAME FROM 'duckdb_unittest_tempdir/54864/export_test/same_name.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY strings FROM 'duckdb_unittest_tempdir/54864/export_test/strings.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY "table ""." FROM 'duckdb_unittest_tempdir/54864/export_test/table___.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY "table.with-symbols" FROM 'duckdb_unittest_tempdir/54864/export_test/table_with_symbols.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY table01 FROM 'duckdb_unittest_tempdir/54864/export_test/table__.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY s1.table01 FROM 'duckdb_unittest_tempdir/54864/export_test/s__table__.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY s2.table01 FROM 'duckdb_unittest_tempdir/54864/export_test/s__table___1.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );;
CREATE SCHEMA s1;
CREATE SCHEMA s2;

CREATE TYPE mood AS ENUM('sad', 'ok', 'happy');

CREATE SEQUENCE seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 2 NO CYCLE;

CREATE TABLE enums(current_mood ENUM('sad', 'ok', 'happy'));
CREATE TABLE integers(i INTEGER, j INTEGER, CHECK(((i + j) < 10)));
CREATE TABLE SAME_NAME(i INTEGER, j INTEGER);
CREATE TABLE strings(v VARCHAR, d DATE, PRIMARY KEY(d));
CREATE TABLE "table ""."("col ""." VARCHAR);
CREATE TABLE "table.with-symbols"(i INTEGER);
CREATE TABLE table01(i INTEGER, j INTEGER);
CREATE TABLE s1.table01(i INTEGER, j INTEGER);
CREATE TABLE s2.table01(i INTEGER, j INTEGER);

CREATE VIEW v1 AS SELECT * FROM integers WHERE (i > 3);

CREATE VIEW v2 AS SELECT * FROM integers WHERE (i < 3);

CREATE VIEW v3 AS SELECT * FROM integers WHERE (i IS NULL);

CREATE VIEW "view ""." AS SELECT * FROM "table.with-symbols" WHERE (i < 3);

CREATE VIEW "view.with-symbols" AS SELECT * FROM "table.with-symbols" WHERE (i < 3);




COPY enums FROM 'duckdb_unittest_tempdir/54864/export_test/enums.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY integers FROM 'duckdb_unittest_tempdir/54864/export_test/integers.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY SAME_NAME FROM 'duckdb_unittest_tempdir/54864/export_test/same_name.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY strings FROM 'duckdb_unittest_tempdir/54864/export_test/strings.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY "table ""." FROM 'duckdb_unittest_tempdir/54864/export_test/table___.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY "table.with-symbols" FROM 'duckdb_unittest_tempdir/54864/export_test/table_with_symbols.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY table01 FROM 'duckdb_unittest_tempdir/54864/export_test/table__.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY s1.table01 FROM 'duckdb_unittest_tempdir/54864/export_test/s__table__.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY s2.table01 FROM 'duckdb_unittest_tempdir/54864/export_test/s__table___1.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );;
CREATE SCHEMA s1;
CREATE SCHEMA s2;

CREATE TYPE mood AS ENUM('sad', 'ok', 'happy');

CREATE SEQUENCE seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 2 NO CYCLE;

CREATE TABLE enums(current_mood ENUM('sad', 'ok', 'happy'));
CREATE TABLE integers(i INTEGER, j INTEGER, CHECK(((i + j) < 10)));
CREATE TABLE SAME_NAME(i INTEGER, j INTEGER);
CREATE TABLE strings(v VARCHAR, d DATE, PRIMARY KEY(d));
CREATE TABLE "table ""."("col ""." VARCHAR);
CREATE TABLE "table.with-symbols"(i INTEGER);
CREATE TABLE table01(i INTEGER, j INTEGER);
CREATE TABLE s1.table01(i INTEGER, j INTEGER);
CREATE TABLE s2.table01(i INTEGER, j INTEGER);

CREATE VIEW v1 AS SELECT * FROM integers WHERE (i > 3);

CREATE VIEW v2 AS SELECT * FROM integers WHERE (i < 3);

CREATE VIEW v3 AS SELECT * FROM integers WHERE (i IS NULL);

CREATE VIEW "view ""." AS SELECT * FROM "table.with-symbols" WHERE (i < 3);

CREATE VIEW "view.with-symbols" AS SELECT * FROM "table.with-symbols" WHERE (i < 3);




COPY enums FROM 'duckdb_unittest_tempdir/54864/export_test/enums.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY integers FROM 'duckdb_unittest_tempdir/54864/export_test/integers.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY SAME_NAME FROM 'duckdb_unittest_tempdir/54864/export_test/same_name.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY strings FROM 'duckdb_unittest_tempdir/54864/export_test/strings.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY "table ""." FROM 'duckdb_unittest_tempdir/54864/export_test/table___.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY "table.with-symbols" FROM 'duckdb_unittest_tempdir/54864/export_test/table_with_symbols.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY table01 FROM 'duckdb_unittest_tempdir/54864/export_test/table__.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY s1.table01 FROM 'duckdb_unittest_tempdir/54864/export_test/s__table__.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY s2.table01 FROM 'duckdb_unittest_tempdir/54864/export_test/s__table___1.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );;
CREATE SCHEMA s1;
CREATE SCHEMA s2;

CREATE TYPE mood AS ENUM('sad', 'ok', 'happy');

CREATE SEQUENCE seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 2 NO CYCLE;

CREATE TABLE enums(current_mood ENUM('sad', 'ok', 'happy'));
CREATE TABLE integers(i INTEGER, j INTEGER, CHECK(((i + j) < 10)));
CREATE TABLE SAME_NAME(i INTEGER, j INTEGER);
CREATE TABLE strings(v VARCHAR, d DATE, PRIMARY KEY(d));
CREATE TABLE "table ""."("col ""." VARCHAR);
CREATE TABLE "table.with-symbols"(i INTEGER);
CREATE TABLE table01(i INTEGER, j INTEGER);
CREATE TABLE s1.table01(i INTEGER, j INTEGER);
CREATE TABLE s2.table01(i INTEGER, j INTEGER);

CREATE VIEW v1 AS SELECT * FROM integers WHERE (i > 3);

CREATE VIEW v2 AS SELECT * FROM integers WHERE (i < 3);

CREATE VIEW v3 AS SELECT * FROM integers WHERE (i IS NULL);

CREATE VIEW "view ""." AS SELECT * FROM "table.with-symbols" WHERE (i < 3);

CREATE VIEW "view.with-symbols" AS SELECT * FROM "table.with-symbols" WHERE (i < 3);




COPY enums FROM 'duckdb_unittest_tempdir/54864/export_test/enums.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY integers FROM 'duckdb_unittest_tempdir/54864/export_test/integers.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY SAME_NAME FROM 'duckdb_unittest_tempdir/54864/export_test/same_name.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY strings FROM 'duckdb_unittest_tempdir/54864/export_test/strings.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY "table ""." FROM 'duckdb_unittest_tempdir/54864/export_test/table___.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY "table.with-symbols" FROM 'duckdb_unittest_tempdir/54864/export_test/table_with_symbols.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY table01 FROM 'duckdb_unittest_tempdir/54864/export_test/table__.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY s1.table01 FROM 'duckdb_unittest_tempdir/54864/export_test/s__table__.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY s2.table01 FROM 'duckdb_unittest_tempdir/54864/export_test/s__table___1.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );;
CREATE SCHEMA s1;
CREATE SCHEMA s2;

CREATE TYPE mood AS ENUM('sad', 'ok', 'happy');

CREATE SEQUENCE seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 2 NO CYCLE;

CREATE TABLE enums(current_mood ENUM('sad', 'ok', 'happy'));
CREATE TABLE integers(i INTEGER, j INTEGER, CHECK(((i + j) < 10)));
CREATE TABLE SAME_NAME(i INTEGER, j INTEGER);
CREATE TABLE strings(v VARCHAR, d DATE, PRIMARY KEY(d));
CREATE TABLE "table ""."("col ""." VARCHAR);
CREATE TABLE "table.with-symbols"(i INTEGER);
CREATE TABLE table01(i INTEGER, j INTEGER);
CREATE TABLE s1.table01(i INTEGER, j INTEGER);
CREATE TABLE s2.table01(i INTEGER, j INTEGER);

CREATE VIEW v1 AS SELECT * FROM integers WHERE (i > 3);

CREATE VIEW v2 AS SELECT * FROM integers WHERE (i < 3);

CREATE VIEW v3 AS SELECT * FROM integers WHERE (i IS NULL);

CREATE VIEW "view ""." AS SELECT * FROM "table.with-symbols" WHERE (i < 3);

CREATE VIEW "view.with-symbols" AS SELECT * FROM "table.with-symbols" WHERE (i < 3);




COPY enums FROM 'duckdb_unittest_tempdir/54864/export_test/enums.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY integers FROM 'duckdb_unittest_tempdir/54864/export_test/integers.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY SAME_NAME FROM 'duckdb_unittest_tempdir/54864/export_test/same_name.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY strings FROM 'duckdb_unittest_tempdir/54864/export_test/strings.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY "table ""." FROM 'duckdb_unittest_tempdir/54864/export_test/table___.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY "table.with-symbols" FROM 'duckdb_unittest_tempdir/54864/export_test/table_with_symbols.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY table01 FROM 'duckdb_unittest_tempdir/54864/export_test/table__.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY s1.table01 FROM 'duckdb_unittest_tempdir/54864/export_test/s__table__.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY s2.table01 FROM 'duckdb_unittest_tempdir/54864/export_test/s__table___1.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );;
CREATE SCHEMA s1;
CREATE SCHEMA s2;

CREATE TYPE mood AS ENUM('sad', 'ok', 'happy');

CREATE SEQUENCE seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 2 NO CYCLE;

CREATE TABLE enums(current_mood ENUM('sad', 'ok', 'happy'));
CREATE TABLE integers(i INTEGER, j INTEGER, CHECK(((i + j) < 10)));
CREATE TABLE SAME_NAME(i INTEGER, j INTEGER);
CREATE TABLE strings(v VARCHAR, d DATE, PRIMARY KEY(d));
CREATE TABLE "table ""."("col ""." VARCHAR);
CREATE TABLE "table.with-symbols"(i INTEGER);
CREATE TABLE table01(i INTEGER, j INTEGER);
CREATE TABLE s1.table01(i INTEGER, j INTEGER);
CREATE TABLE s2.table01(i INTEGER, j INTEGER);

CREATE VIEW v1 AS SELECT * FROM integers WHERE (i > 3);

CREATE VIEW v2 AS SELECT * FROM integers WHERE (i < 3);

CREATE VIEW v3 AS SELECT * FROM integers WHERE (i IS NULL);

CREATE VIEW "view ""." AS SELECT * FROM "table.with-symbols" WHERE (i < 3);

CREATE VIEW "view.with-symbols" AS SELECT * FROM "table.with-symbols" WHERE (i < 3);




COPY enums FROM 'duckdb_unittest_tempdir/54864/export_test/enums.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY integers FROM 'duckdb_unittest_tempdir/54864/export_test/integers.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY SAME_NAME FROM 'duckdb_unittest_tempdir/54864/export_test/same_name.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY strings FROM 'duckdb_unittest_tempdir/54864/export_test/strings.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY "table ""." FROM 'duckdb_unittest_tempdir/54864/export_test/table___.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY "table.with-symbols" FROM 'duckdb_unittest_tempdir/54864/export_test/table_with_symbols.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY table01 FROM 'duckdb_unittest_tempdir/54864/export_test/table__.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY s1.table01 FROM 'duckdb_unittest_tempdir/54864/export_test/s__table__.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY s2.table01 FROM 'duckdb_unittest_tempdir/54864/export_test/s__table___1.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );;
CREATE SCHEMA s1;
CREATE SCHEMA s2;

CREATE TYPE mood AS ENUM('sad', 'ok', 'happy');

CREATE SEQUENCE seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 2 NO CYCLE;

CREATE TABLE enums(current_mood ENUM('sad', 'ok', 'happy'));
CREATE TABLE integers(i INTEGER, j INTEGER, CHECK(((i + j) < 10)));
CREATE TABLE SAME_NAME(i INTEGER, j INTEGER);
CREATE TABLE strings(v VARCHAR, d DATE, PRIMARY KEY(d));
CREATE TABLE "table ""."("col ""." VARCHAR);
CREATE TABLE "table.with-symbols"(i INTEGER);
CREATE TABLE table01(i INTEGER, j INTEGER);
CREATE TABLE s1.table01(i INTEGER, j INTEGER);
CREATE TABLE s2.table01(i INTEGER, j INTEGER);

CREATE VIEW v1 AS SELECT * FROM integers WHERE (i > 3);

CREATE VIEW v2 AS SELECT * FROM integers WHERE (i < 3);

CREATE VIEW v3 AS SELECT * FROM integers WHERE (i IS NULL);

CREATE VIEW "view ""." AS SELECT * FROM "table.with-symbols" WHERE (i < 3);

CREATE VIEW "view.with-symbols" AS SELECT * FROM "table.with-symbols" WHERE (i < 3);




COPY enums FROM 'duckdb_unittest_tempdir/54864/export_test/enums.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY integers FROM 'duckdb_unittest_tempdir/54864/export_test/integers.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY SAME_NAME FROM 'duckdb_unittest_tempdir/54864/export_test/same_name.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY strings FROM 'duckdb_unittest_tempdir/54864/export_test/strings.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY "table ""." FROM 'duckdb_unittest_tempdir/54864/export_test/table___.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY "table.with-symbols" FROM 'duckdb_unittest_tempdir/54864/export_test/table_with_symbols.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY table01 FROM 'duckdb_unittest_tempdir/54864/export_test/table__.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY s1.table01 FROM 'duckdb_unittest_tempdir/54864/export_test/s__table__.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY s2.table01 FROM 'duckdb_unittest_tempdir/54864/export_test/s__table___1.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );;
CREATE SCHEMA s1;
CREATE SCHEMA s2;

CREATE TYPE mood AS ENUM('sad', 'ok', 'happy');

CREATE SEQUENCE seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 2 NO CYCLE;

CREATE TABLE enums(current_mood ENUM('sad', 'ok', 'happy'));
CREATE TABLE integers(i INTEGER, j INTEGER, CHECK(((i + j) < 10)));
CREATE TABLE SAME_NAME(i INTEGER, j INTEGER);
CREATE TABLE strings(v VARCHAR, d DATE, PRIMARY KEY(d));
CREATE TABLE "table ""."("col ""." VARCHAR);
CREATE TABLE "table.with-symbols"(i INTEGER);
CREATE TABLE table01(i INTEGER, j INTEGER);
CREATE TABLE s1.table01(i INTEGER, j INTEGER);
CREATE TABLE s2.table01(i INTEGER, j INTEGER);

CREATE VIEW v1 AS SELECT * FROM integers WHERE (i > 3);

CREATE VIEW v2 AS SELECT * FROM integers WHERE (i < 3);

CREATE VIEW v3 AS SELECT * FROM integers WHERE (i IS NULL);

CREATE VIEW "view ""." AS SELECT * FROM "table.with-symbols" WHERE (i < 3);

CREATE VIEW "view.with-symbols" AS SELECT * FROM "table.with-symbols" WHERE (i < 3);




COPY enums FROM 'duckdb_unittest_tempdir/54864/export_test/enums.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY integers FROM 'duckdb_unittest_tempdir/54864/export_test/integers.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY SAME_NAME FROM 'duckdb_unittest_tempdir/54864/export_test/same_name.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY strings FROM 'duckdb_unittest_tempdir/54864/export_test/strings.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY "table ""." FROM 'duckdb_unittest_tempdir/54864/export_test/table___.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY "table.with-symbols" FROM 'duckdb_unittest_tempdir/54864/export_test/table_with_symbols.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY table01 FROM 'duckdb_unittest_tempdir/54864/export_test/table__.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY s1.table01 FROM 'duckdb_unittest_tempdir/54864/export_test/s__table__.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY s2.table01 FROM 'duckdb_unittest_tempdir/54864/export_test/s__table___1.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );;
CREATE SCHEMA s1;
CREATE SCHEMA s2;

CREATE TYPE mood AS ENUM('sad', 'ok', 'happy');

CREATE SEQUENCE seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 2 NO CYCLE;

CREATE TABLE enums(current_mood ENUM('sad', 'ok', 'happy'));
CREATE TABLE integers(i INTEGER, j INTEGER, CHECK(((i + j) < 10)));
CREATE TABLE SAME_NAME(i INTEGER, j INTEGER);
CREATE TABLE strings(v VARCHAR, d DATE, PRIMARY KEY(d));
CREATE TABLE "table ""."("col ""." VARCHAR);
CREATE TABLE "table.with-symbols"(i INTEGER);
CREATE TABLE table01(i INTEGER, j INTEGER);
CREATE TABLE s1.table01(i INTEGER, j INTEGER);
CREATE TABLE s2.table01(i INTEGER, j INTEGER);

CREATE VIEW v1 AS SELECT * FROM integers WHERE (i > 3);

CREATE VIEW v2 AS SELECT * FROM integers WHERE (i < 3);

CREATE VIEW v3 AS SELECT * FROM integers WHERE (i IS NULL);

CREATE VIEW "view ""." AS SELECT * FROM "table.with-symbols" WHERE (i < 3);

CREATE VIEW "view.with-symbols" AS SELECT * FROM "table.with-symbols" WHERE (i < 3);




COPY enums FROM 'duckdb_unittest_tempdir/54864/export_test/enums.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY integers FROM 'duckdb_unittest_tempdir/54864/export_test/integers.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY SAME_NAME FROM 'duckdb_unittest_tempdir/54864/export_test/same_name.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY strings FROM 'duckdb_unittest_tempdir/54864/export_test/strings.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY "table ""." FROM 'duckdb_unittest_tempdir/54864/export_test/table___.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY "table.with-symbols" FROM 'duckdb_unittest_tempdir/54864/export_test/table_with_symbols.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY table01 FROM 'duckdb_unittest_tempdir/54864/export_test/table__.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY s1.table01 FROM 'duckdb_unittest_tempdir/54864/export_test/s__table__.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY s2.table01 FROM 'duckdb_unittest_tempdir/54864/export_test/s__table___1.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );;
CREATE SCHEMA s1;
CREATE SCHEMA s2;

CREATE TYPE mood AS ENUM('sad', 'ok', 'happy');

CREATE SEQUENCE seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 2 NO CYCLE;

CREATE TABLE enums(current_mood ENUM('sad', 'ok', 'happy'));
CREATE TABLE integers(i INTEGER, j INTEGER, CHECK(((i + j) < 10)));
CREATE TABLE SAME_NAME(i INTEGER, j INTEGER);
CREATE TABLE strings(v VARCHAR, d DATE, PRIMARY KEY(d));
CREATE TABLE "table ""."("col ""." VARCHAR);
CREATE TABLE "table.with-symbols"(i INTEGER);
CREATE TABLE table01(i INTEGER, j INTEGER);
CREATE TABLE s1.table01(i INTEGER, j INTEGER);
CREATE TABLE s2.table01(i INTEGER, j INTEGER);

CREATE VIEW v1 AS SELECT * FROM integers WHERE (i > 3);

CREATE VIEW v2 AS SELECT * FROM integers WHERE (i < 3);

CREATE VIEW v3 AS SELECT * FROM integers WHERE (i IS NULL);

CREATE VIEW "view ""." AS SELECT * FROM "table.with-symbols" WHERE (i < 3);

CREATE VIEW "view.with-symbols" AS SELECT * FROM "table.with-symbols" WHERE (i < 3);




COPY enums FROM 'duckdb_unittest_tempdir/54864/export_test/enums.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY integers FROM 'duckdb_unittest_tempdir/54864/export_test/integers.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY SAME_NAME FROM 'duckdb_unittest_tempdir/54864/export_test/same_name.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY strings FROM 'duckdb_unittest_tempdir/54864/export_test/strings.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY "table ""." FROM 'duckdb_unittest_tempdir/54864/export_test/table___.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY "table.with-symbols" FROM 'duckdb_unittest_tempdir/54864/export_test/table_with_symbols.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY table01 FROM 'duckdb_unittest_tempdir/54864/export_test/table__.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY s1.table01 FROM 'duckdb_unittest_tempdir/54864/export_test/s__table__.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY s2.table01 FROM 'duckdb_unittest_tempdir/54864/export_test/s__table___1.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );;
CREATE SCHEMA s1;
CREATE SCHEMA s2;

CREATE TYPE mood AS ENUM('sad', 'ok', 'happy');

CREATE SEQUENCE seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 2 NO CYCLE;

CREATE TABLE enums(current_mood ENUM('sad', 'ok', 'happy'));
CREATE TABLE integers(i INTEGER, j INTEGER, CHECK(((i + j) < 10)));
CREATE TABLE SAME_NAME(i INTEGER, j INTEGER);
CREATE TABLE strings(v VARCHAR, d DATE, PRIMARY KEY(d));
CREATE TABLE "table ""."("col ""." VARCHAR);
CREATE TABLE "table.with-symbols"(i INTEGER);
CREATE TABLE table01(i INTEGER, j INTEGER);
CREATE TABLE s1.table01(i INTEGER, j INTEGER);
CREATE TABLE s2.table01(i INTEGER, j INTEGER);

CREATE VIEW v1 AS SELECT * FROM integers WHERE (i > 3);

CREATE VIEW v2 AS SELECT * FROM integers WHERE (i < 3);

CREATE VIEW v3 AS SELECT * FROM integers WHERE (i IS NULL);

CREATE VIEW "view ""." AS SELECT * FROM "table.with-symbols" WHERE (i < 3);

CREATE VIEW "view.with-symbols" AS SELECT * FROM "table.with-symbols" WHERE (i < 3);




COPY enums FROM 'duckdb_unittest_tempdir/54864/export_test/enums.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY integers FROM 'duckdb_unittest_tempdir/54864/export_test/integers.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY SAME_NAME FROM 'duckdb_unittest_tempdir/54864/export_test/same_name.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY strings FROM 'duckdb_unittest_tempdir/54864/export_test/strings.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY "table ""." FROM 'duckdb_unittest_tempdir/54864/export_test/table___.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY "table.with-symbols" FROM 'duckdb_unittest_tempdir/54864/export_test/table_with_symbols.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY table01 FROM 'duckdb_unittest_tempdir/54864/export_test/table__.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY s1.table01 FROM 'duckdb_unittest_tempdir/54864/export_test/s__table__.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY s2.table01 FROM 'duckdb_unittest_tempdir/54864/export_test/s__table___1.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );;
CREATE SCHEMA s1;
CREATE SCHEMA s2;

CREATE TYPE mood AS ENUM('sad', 'ok', 'happy');

CREATE SEQUENCE seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 2 NO CYCLE;

CREATE TABLE enums(current_mood ENUM('sad', 'ok', 'happy'));
CREATE TABLE integers(i INTEGER, j INTEGER, CHECK(((i + j) < 10)));
CREATE TABLE SAME_NAME(i INTEGER, j INTEGER);
CREATE TABLE strings(v VARCHAR, d DATE, PRIMARY KEY(d));
CREATE TABLE "table ""."("col ""." VARCHAR);
CREATE TABLE "table.with-symbols"(i INTEGER);
CREATE TABLE table01(i INTEGER, j INTEGER);
CREATE TABLE s1.table01(i INTEGER, j INTEGER);
CREATE TABLE s2.table01(i INTEGER, j INTEGER);

CREATE VIEW v1 AS SELECT * FROM integers WHERE (i > 3);

CREATE VIEW v2 AS SELECT * FROM integers WHERE (i < 3);

CREATE VIEW v3 AS SELECT * FROM integers WHERE (i IS NULL);

CREATE VIEW "view ""." AS SELECT * FROM "table.with-symbols" WHERE (i < 3);

CREATE VIEW "view.with-symbols" AS SELECT * FROM "table.with-symbols" WHERE (i < 3);




COPY enums FROM 'duckdb_unittest_tempdir/54864/export_test/enums.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY integers FROM 'duckdb_unittest_tempdir/54864/export_test/integers.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY SAME_NAME FROM 'duckdb_unittest_tempdir/54864/export_test/same_name.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY strings FROM 'duckdb_unittest_tempdir/54864/export_test/strings.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY "table ""." FROM 'duckdb_unittest_tempdir/54864/export_test/table___.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY "table.with-symbols" FROM 'duckdb_unittest_tempdir/54864/export_test/table_with_symbols.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY table01 FROM 'duckdb_unittest_tempdir/54864/export_test/table__.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY s1.table01 FROM 'duckdb_unittest_tempdir/54864/export_test/s__table__.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY s2.table01 FROM 'duckdb_unittest_tempdir/54864/export_test/s__table___1.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );;
CREATE SCHEMA s1;
CREATE SCHEMA s2;

CREATE TYPE mood AS ENUM('sad', 'ok', 'happy');

CREATE SEQUENCE seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 2 NO CYCLE;

CREATE TABLE enums(current_mood ENUM('sad', 'ok', 'happy'));
CREATE TABLE integers(i INTEGER, j INTEGER, CHECK(((i + j) < 10)));
CREATE TABLE SAME_NAME(i INTEGER, j INTEGER);
CREATE TABLE strings(v VARCHAR, d DATE, PRIMARY KEY(d));
CREATE TABLE "table ""."("col ""." VARCHAR);
CREATE TABLE "table.with-symbols"(i INTEGER);
CREATE TABLE table01(i INTEGER, j INTEGER);
CREATE TABLE s1.table01(i INTEGER, j INTEGER);
CREATE TABLE s2.table01(i INTEGER, j INTEGER);

CREATE VIEW v1 AS SELECT * FROM integers WHERE (i > 3);

CREATE VIEW v2 AS SELECT * FROM integers WHERE (i < 3);

CREATE VIEW v3 AS SELECT * FROM integers WHERE (i IS NULL);

CREATE VIEW "view ""." AS SELECT * FROM "table.with-symbols" WHERE (i < 3);

CREATE VIEW "view.with-symbols" AS SELECT * FROM "table.with-symbols" WHERE (i < 3);




COPY enums FROM 'duckdb_unittest_tempdir/54864/export_test/enums.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY integers FROM 'duckdb_unittest_tempdir/54864/export_test/integers.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY SAME_NAME FROM 'duckdb_unittest_tempdir/54864/export_test/same_name.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY strings FROM 'duckdb_unittest_tempdir/54864/export_test/strings.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY "table ""." FROM 'duckdb_unittest_tempdir/54864/export_test/table___.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY "table.with-symbols" FROM 'duckdb_unittest_tempdir/54864/export_test/table_with_symbols.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY table01 FROM 'duckdb_unittest_tempdir/54864/export_test/table__.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY s1.table01 FROM 'duckdb_unittest_tempdir/54864/export_test/s__table__.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY s2.table01 FROM 'duckdb_unittest_tempdir/54864/export_test/s__table___1.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );;
CREATE SCHEMA s1;
CREATE SCHEMA s2;

CREATE TYPE mood AS ENUM('sad', 'ok', 'happy');

CREATE SEQUENCE seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 2 NO CYCLE;

CREATE TABLE enums(current_mood ENUM('sad', 'ok', 'happy'));
CREATE TABLE integers(i INTEGER, j INTEGER, CHECK(((i + j) < 10)));
CREATE TABLE SAME_NAME(i INTEGER, j INTEGER);
CREATE TABLE strings(v VARCHAR, d DATE, PRIMARY KEY(d));
CREATE TABLE "table ""."("col ""." VARCHAR);
CREATE TABLE "table.with-symbols"(i INTEGER);
CREATE TABLE table01(i INTEGER, j INTEGER);
CREATE TABLE s1.table01(i INTEGER, j INTEGER);
CREATE TABLE s2.table01(i INTEGER, j INTEGER);

CREATE VIEW v1 AS SELECT * FROM integers WHERE (i > 3);

CREATE VIEW v2 AS SELECT * FROM integers WHERE (i < 3);

CREATE VIEW v3 AS SELECT * FROM integers WHERE (i IS NULL);

CREATE VIEW "view ""." AS SELECT * FROM "table.with-symbols" WHERE (i < 3);

CREATE VIEW "view.with-symbols" AS SELECT * FROM "table.with-symbols" WHERE (i < 3);




COPY enums FROM 'duckdb_unittest_tempdir/54864/export_test/enums.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY integers FROM 'duckdb_unittest_tempdir/54864/export_test/integers.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY SAME_NAME FROM 'duckdb_unittest_tempdir/54864/export_test/same_name.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY strings FROM 'duckdb_unittest_tempdir/54864/export_test/strings.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY "table ""." FROM 'duckdb_unittest_tempdir/54864/export_test/table___.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY "table.with-symbols" FROM 'duckdb_unittest_tempdir/54864/export_test/table_with_symbols.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY table01 FROM 'duckdb_unittest_tempdir/54864/export_test/table__.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY s1.table01 FROM 'duckdb_unittest_tempdir/54864/export_test/s__table__.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY s2.table01 FROM 'duckdb_unittest_tempdir/54864/export_test/s__table___1.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );;
CREATE SCHEMA s1;
CREATE SCHEMA s2;

CREATE TYPE mood AS ENUM('sad', 'ok', 'happy');

CREATE SEQUENCE seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 2 NO CYCLE;

CREATE TABLE enums(current_mood ENUM('sad', 'ok', 'happy'));
CREATE TABLE integers(i INTEGER, j INTEGER, CHECK(((i + j) < 10)));
CREATE TABLE SAME_NAME(i INTEGER, j INTEGER);
CREATE TABLE strings(v VARCHAR, d DATE, PRIMARY KEY(d));
CREATE TABLE "table ""."("col ""." VARCHAR);
CREATE TABLE "table.with-symbols"(i INTEGER);
CREATE TABLE table01(i INTEGER, j INTEGER);
CREATE TABLE s1.table01(i INTEGER, j INTEGER);
CREATE TABLE s2.table01(i INTEGER, j INTEGER);

CREATE VIEW v1 AS SELECT * FROM integers WHERE (i > 3);

CREATE VIEW v2 AS SELECT * FROM integers WHERE (i < 3);

CREATE VIEW v3 AS SELECT * FROM integers WHERE (i IS NULL);

CREATE VIEW "view ""." AS SELECT * FROM "table.with-symbols" WHERE (i < 3);

CREATE VIEW "view.with-symbols" AS SELECT * FROM "table.with-symbols" WHERE (i < 3);




COPY enums FROM 'duckdb_unittest_tempdir/54864/export_test/enums.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY integers FROM 'duckdb_unittest_tempdir/54864/export_test/integers.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY SAME_NAME FROM 'duckdb_unittest_tempdir/54864/export_test/same_name.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY strings FROM 'duckdb_unittest_tempdir/54864/export_test/strings.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY "table ""." FROM 'duckdb_unittest_tempdir/54864/export_test/table___.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY "table.with-symbols" FROM 'duckdb_unittest_tempdir/54864/export_test/table_with_symbols.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY table01 FROM 'duckdb_unittest_tempdir/54864/export_test/table__.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY s1.table01 FROM 'duckdb_unittest_tempdir/54864/export_test/s__table__.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY s2.table01 FROM 'duckdb_unittest_tempdir/54864/export_test/s__table___1.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );;
CREATE SCHEMA s1;
CREATE SCHEMA s2;

CREATE TYPE mood AS ENUM('sad', 'ok', 'happy');

CREATE SEQUENCE seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 2 NO CYCLE;

CREATE TABLE enums(current_mood ENUM('sad', 'ok', 'happy'));
CREATE TABLE integers(i INTEGER, j INTEGER, CHECK(((i + j) < 10)));
CREATE TABLE SAME_NAME(i INTEGER, j INTEGER);
CREATE TABLE strings(v VARCHAR, d DATE, PRIMARY KEY(d));
CREATE TABLE "table ""."("col ""." VARCHAR);
CREATE TABLE "table.with-symbols"(i INTEGER);
CREATE TABLE table01(i INTEGER, j INTEGER);
CREATE TABLE s1.table01(i INTEGER, j INTEGER);
CREATE TABLE s2.table01(i INTEGER, j INTEGER);

CREATE VIEW v1 AS SELECT * FROM integers WHERE (i > 3);

CREATE VIEW v2 AS SELECT * FROM integers WHERE (i < 3);

CREATE VIEW v3 AS SELECT * FROM integers WHERE (i IS NULL);

CREATE VIEW "view ""." AS SELECT * FROM "table.with-symbols" WHERE (i < 3);

CREATE VIEW "view.with-symbols" AS SELECT * FROM "table.with-symbols" WHERE (i < 3);




COPY enums FROM 'duckdb_unittest_tempdir/54864/export_test/enums.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY integers FROM 'duckdb_unittest_tempdir/54864/export_test/integers.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY SAME_NAME FROM 'duckdb_unittest_tempdir/54864/export_test/same_name.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY strings FROM 'duckdb_unittest_tempdir/54864/export_test/strings.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY "table ""." FROM 'duckdb_unittest_tempdir/54864/export_test/table___.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY "table.with-symbols" FROM 'duckdb_unittest_tempdir/54864/export_test/table_with_symbols.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY table01 FROM 'duckdb_unittest_tempdir/54864/export_test/table__.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY s1.table01 FROM 'duckdb_unittest_tempdir/54864/export_test/s__table__.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY s2.table01 FROM 'duckdb_unittest_tempdir/54864/export_test/s__table___1.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );;
CREATE SCHEMA s1;
CREATE SCHEMA s2;

CREATE TYPE mood AS ENUM('sad', 'ok', 'happy');

CREATE SEQUENCE seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 2 NO CYCLE;

CREATE TABLE enums(current_mood ENUM('sad', 'ok', 'happy'));
CREATE TABLE integers(i INTEGER, j INTEGER, CHECK(((i + j) < 10)));
CREATE TABLE SAME_NAME(i INTEGER, j INTEGER);
CREATE TABLE strings(v VARCHAR, d DATE, PRIMARY KEY(d));
CREATE TABLE "table ""."("col ""." VARCHAR);
CREATE TABLE "table.with-symbols"(i INTEGER);
CREATE TABLE table01(i INTEGER, j INTEGER);
CREATE TABLE s1.table01(i INTEGER, j INTEGER);
CREATE TABLE s2.table01(i INTEGER, j INTEGER);

CREATE VIEW v1 AS SELECT * FROM integers WHERE (i > 3);

CREATE VIEW v2 AS SELECT * FROM integers WHERE (i < 3);

CREATE VIEW v3 AS SELECT * FROM integers WHERE (i IS NULL);

CREATE VIEW "view ""." AS SELECT * FROM "table.with-symbols" WHERE (i < 3);

CREATE VIEW "view.with-symbols" AS SELECT * FROM "table.with-symbols" WHERE (i < 3);




COPY enums FROM 'duckdb_unittest_tempdir/54864/export_test/enums.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY integers FROM 'duckdb_unittest_tempdir/54864/export_test/integers.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY SAME_NAME FROM 'duckdb_unittest_tempdir/54864/export_test/same_name.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY strings FROM 'duckdb_unittest_tempdir/54864/export_test/strings.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY "table ""." FROM 'duckdb_unittest_tempdir/54864/export_test/table___.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY "table.with-symbols" FROM 'duckdb_unittest_tempdir/54864/export_test/table_with_symbols.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY table01 FROM 'duckdb_unittest_tempdir/54864/export_test/table__.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY s1.table01 FROM 'duckdb_unittest_tempdir/54864/export_test/s__table__.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY s2.table01 FROM 'duckdb_unittest_tempdir/54864/export_test/s__table___1.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );;
CREATE SCHEMA s1;
CREATE SCHEMA s2;

CREATE TYPE mood AS ENUM('sad', 'ok', 'happy');

CREATE SEQUENCE seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 2 NO CYCLE;

CREATE TABLE enums(current_mood ENUM('sad', 'ok', 'happy'));
CREATE TABLE integers(i INTEGER, j INTEGER, CHECK(((i + j) < 10)));
CREATE TABLE SAME_NAME(i INTEGER, j INTEGER);
CREATE TABLE strings(v VARCHAR, d DATE, PRIMARY KEY(d));
CREATE TABLE "table ""."("col ""." VARCHAR);
CREATE TABLE "table.with-symbols"(i INTEGER);
CREATE TABLE table01(i INTEGER, j INTEGER);
CREATE TABLE s1.table01(i INTEGER, j INTEGER);
CREATE TABLE s2.table01(i INTEGER, j INTEGER);

CREATE VIEW v1 AS SELECT * FROM integers WHERE (i > 3);

CREATE VIEW v2 AS SELECT * FROM integers WHERE (i < 3);

CREATE VIEW v3 AS SELECT * FROM integers WHERE (i IS NULL);

CREATE VIEW "view ""." AS SELECT * FROM "table.with-symbols" WHERE (i < 3);

CREATE VIEW "view.with-symbols" AS SELECT * FROM "table.with-symbols" WHERE (i < 3);




COPY enums FROM 'duckdb_unittest_tempdir/54864/export_test/enums.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY integers FROM 'duckdb_unittest_tempdir/54864/export_test/integers.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY SAME_NAME FROM 'duckdb_unittest_tempdir/54864/export_test/same_name.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY strings FROM 'duckdb_unittest_tempdir/54864/export_test/strings.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY "table ""." FROM 'duckdb_unittest_tempdir/54864/export_test/table___.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY "table.with-symbols" FROM 'duckdb_unittest_tempdir/54864/export_test/table_with_symbols.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY table01 FROM 'duckdb_unittest_tempdir/54864/export_test/table__.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY s1.table01 FROM 'duckdb_unittest_tempdir/54864/export_test/s__table__.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY s2.table01 FROM 'duckdb_unittest_tempdir/54864/export_test/s__table___1.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );;
CREATE SCHEMA s1;
CREATE SCHEMA s2;

CREATE TYPE mood AS ENUM('sad', 'ok', 'happy');

CREATE SEQUENCE seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 2 NO CYCLE;

CREATE TABLE enums(current_mood ENUM('sad', 'ok', 'happy'));
CREATE TABLE integers(i INTEGER, j INTEGER, CHECK(((i + j) < 10)));
CREATE TABLE SAME_NAME(i INTEGER, j INTEGER);
CREATE TABLE strings(v VARCHAR, d DATE, PRIMARY KEY(d));
CREATE TABLE "table ""."("col ""." VARCHAR);
CREATE TABLE "table.with-symbols"(i INTEGER);
CREATE TABLE table01(i INTEGER, j INTEGER);
CREATE TABLE s1.table01(i INTEGER, j INTEGER);
CREATE TABLE s2.table01(i INTEGER, j INTEGER);

CREATE VIEW v1 AS SELECT * FROM integers WHERE (i > 3);

CREATE VIEW v2 AS SELECT * FROM integers WHERE (i < 3);

CREATE VIEW v3 AS SELECT * FROM integers WHERE (i IS NULL);

CREATE VIEW "view ""." AS SELECT * FROM "table.with-symbols" WHERE (i < 3);

CREATE VIEW "view.with-symbols" AS SELECT * FROM "table.with-symbols" WHERE (i < 3);




COPY enums FROM 'duckdb_unittest_tempdir/54864/export_test/enums.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY integers FROM 'duckdb_unittest_tempdir/54864/export_test/integers.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY SAME_NAME FROM 'duckdb_unittest_tempdir/54864/export_test/same_name.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY strings FROM 'duckdb_unittest_tempdir/54864/export_test/strings.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY "table ""." FROM 'duckdb_unittest_tempdir/54864/export_test/table___.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY "table.with-symbols" FROM 'duckdb_unittest_tempdir/54864/export_test/table_with_symbols.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY table01 FROM 'duckdb_unittest_tempdir/54864/export_test/table__.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY s1.table01 FROM 'duckdb_unittest_tempdir/54864/export_test/s__table__.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY s2.table01 FROM 'duckdb_unittest_tempdir/54864/export_test/s__table___1.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );;
CREATE SCHEMA s1;
CREATE SCHEMA s2;

CREATE TYPE mood AS ENUM('sad', 'ok', 'happy');

CREATE SEQUENCE seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 2 NO CYCLE;

CREATE TABLE enums(current_mood ENUM('sad', 'ok', 'happy'));
CREATE TABLE integers(i INTEGER, j INTEGER, CHECK(((i + j) < 10)));
CREATE TABLE SAME_NAME(i INTEGER, j INTEGER);
CREATE TABLE strings(v VARCHAR, d DATE, PRIMARY KEY(d));
CREATE TABLE "table ""."("col ""." VARCHAR);
CREATE TABLE "table.with-symbols"(i INTEGER);
CREATE TABLE table01(i INTEGER, j INTEGER);
CREATE TABLE s1.table01(i INTEGER, j INTEGER);
CREATE TABLE s2.table01(i INTEGER, j INTEGER);

CREATE VIEW v1 AS SELECT * FROM integers WHERE (i > 3);

CREATE VIEW v2 AS SELECT * FROM integers WHERE (i < 3);

CREATE VIEW v3 AS SELECT * FROM integers WHERE (i IS NULL);

CREATE VIEW "view ""." AS SELECT * FROM "table.with-symbols" WHERE (i < 3);

CREATE VIEW "view.with-symbols" AS SELECT * FROM "table.with-symbols" WHERE (i < 3);




COPY enums FROM 'duckdb_unittest_tempdir/54864/export_test/enums.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY integers FROM 'duckdb_unittest_tempdir/54864/export_test/integers.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY SAME_NAME FROM 'duckdb_unittest_tempdir/54864/export_test/same_name.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY strings FROM 'duckdb_unittest_tempdir/54864/export_test/strings.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY "table ""." FROM 'duckdb_unittest_tempdir/54864/export_test/table___.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY "table.with-symbols" FROM 'duckdb_unittest_tempdir/54864/export_test/table_with_symbols.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY table01 FROM 'duckdb_unittest_tempdir/54864/export_test/table__.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY s1.table01 FROM 'duckdb_unittest_tempdir/54864/export_test/s__table__.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY s2.table01 FROM 'duckdb_unittest_tempdir/54864/export_test/s__table___1.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );;
CREATE SCHEMA s1;
CREATE SCHEMA s2;

CREATE TYPE mood AS ENUM('sad', 'ok', 'happy');

CREATE SEQUENCE seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 2 NO CYCLE;

CREATE TABLE enums(current_mood ENUM('sad', 'ok', 'happy'));
CREATE TABLE integers(i INTEGER, j INTEGER, CHECK(((i + j) < 10)));
CREATE TABLE SAME_NAME(i INTEGER, j INTEGER);
CREATE TABLE strings(v VARCHAR, d DATE, PRIMARY KEY(d));
CREATE TABLE "table ""."("col ""." VARCHAR);
CREATE TABLE "table.with-symbols"(i INTEGER);
CREATE TABLE table01(i INTEGER, j INTEGER);
CREATE TABLE s1.table01(i INTEGER, j INTEGER);
CREATE TABLE s2.table01(i INTEGER, j INTEGER);

CREATE VIEW v1 AS SELECT * FROM integers WHERE (i > 3);

CREATE VIEW v2 AS SELECT * FROM integers WHERE (i < 3);

CREATE VIEW v3 AS SELECT * FROM integers WHERE (i IS NULL);

CREATE VIEW "view ""." AS SELECT * FROM "table.with-symbols" WHERE (i < 3);

CREATE VIEW "view.with-symbols" AS SELECT * FROM "table.with-symbols" WHERE (i < 3);




COPY enums FROM 'duckdb_unittest_tempdir/54864/export_test/enums.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY integers FROM 'duckdb_unittest_tempdir/54864/export_test/integers.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY SAME_NAME FROM 'duckdb_unittest_tempdir/54864/export_test/same_name.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY strings FROM 'duckdb_unittest_tempdir/54864/export_test/strings.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY "table ""." FROM 'duckdb_unittest_tempdir/54864/export_test/table___.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY "table.with-symbols" FROM 'duckdb_unittest_tempdir/54864/export_test/table_with_symbols.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY table01 FROM 'duckdb_unittest_tempdir/54864/export_test/table__.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY s1.table01 FROM 'duckdb_unittest_tempdir/54864/export_test/s__table__.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY s2.table01 FROM 'duckdb_unittest_tempdir/54864/export_test/s__table___1.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );;
CREATE SCHEMA s1;
CREATE SCHEMA s2;

CREATE TYPE mood AS ENUM('sad', 'ok', 'happy');

CREATE SEQUENCE seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 2 NO CYCLE;

CREATE TABLE enums(current_mood ENUM('sad', 'ok', 'happy'));
CREATE TABLE integers(i INTEGER, j INTEGER, CHECK(((i + j) < 10)));
CREATE TABLE SAME_NAME(i INTEGER, j INTEGER);
CREATE TABLE strings(v VARCHAR, d DATE, PRIMARY KEY(d));
CREATE TABLE "table ""."("col ""." VARCHAR);
CREATE TABLE "table.with-symbols"(i INTEGER);
CREATE TABLE table01(i INTEGER, j INTEGER);
CREATE TABLE s1.table01(i INTEGER, j INTEGER);
CREATE TABLE s2.table01(i INTEGER, j INTEGER);

CREATE VIEW v1 AS SELECT * FROM integers WHERE (i > 3);

CREATE VIEW v2 AS SELECT * FROM integers WHERE (i < 3);

CREATE VIEW v3 AS SELECT * FROM integers WHERE (i IS NULL);

CREATE VIEW "view ""." AS SELECT * FROM "table.with-symbols" WHERE (i < 3);

CREATE VIEW "view.with-symbols" AS SELECT * FROM "table.with-symbols" WHERE (i < 3);




COPY enums FROM 'duckdb_unittest_tempdir/54864/export_test/enums.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY integers FROM 'duckdb_unittest_tempdir/54864/export_test/integers.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY SAME_NAME FROM 'duckdb_unittest_tempdir/54864/export_test/same_name.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY strings FROM 'duckdb_unittest_tempdir/54864/export_test/strings.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY "table ""." FROM 'duckdb_unittest_tempdir/54864/export_test/table___.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY "table.with-symbols" FROM 'duckdb_unittest_tempdir/54864/export_test/table_with_symbols.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY table01 FROM 'duckdb_unittest_tempdir/54864/export_test/table__.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY s1.table01 FROM 'duckdb_unittest_tempdir/54864/export_test/s__table__.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );COPY s2.table01 FROM 'duckdb_unittest_tempdir/54864/export_test/s__table___1.csv' ( FORMAT csv, header 1, delimiter ',', quote '"' );;
SELECT * FROM integers ORDER BY 1;
SELECT * FROM strings ORDER BY 1;
SELECT * FROM enums ORDER BY 1;
SELECT * FROM v1 ORDER BY 1;
SELECT * FROM v2 ORDER BY 1;
SELECT * FROM v3 ORDER BY 1;
SELECT nextval('seq');
SELECT * FROM "table.with-symbols" ORDER BY 1;
SELECT * FROM "view.with-symbols" ORDER BY 1;
SELECT "table ""."."col "".", "col ""." FROM "table "".";;
SELECT * FROM "view ""." ORDER BY 1;
SELECT * FROM "SAME_NAME" ORDER BY i;
SELECT * FROM table01 ORDER BY i;;
SELECT * FROM s1.table01 ORDER BY i;;
SELECT * FROM s2.table01 ORDER BY i;;
INSERT INTO integers VALUES (5, 6);
INSERT INTO strings VALUES(NULL, NULL);
