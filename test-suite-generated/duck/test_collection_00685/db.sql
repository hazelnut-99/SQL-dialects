PREPARE v1 AS SELECT list_transform(?, x -> x + 1);
EXECUTE v1([1, 2, 3]);
PREPARE v2 AS SELECT list_transform([1, 2, 3], x -> x + ?);
EXECUTE v2(1);
PREPARE v3 AS SELECT list_transform(?, x -> x + ? + ?);
EXECUTE v3([1, 2, 3], 1, 1);
PREPARE v4 AS SELECT list_filter(?, x -> x > 1);
EXECUTE v4([1, 2, 3]);
PREPARE v5 AS SELECT list_filter([1, 2, 3], x -> x > ?);
EXECUTE v5(1);
PREPARE v6 AS SELECT list_filter(?, x -> x > ? AND ?);
EXECUTE v6([1, 2, 3], 1, True);
CREATE TABLE a (i TINYINT);
PREPARE p1 AS SELECT * FROM a;
EXECUTE p1;
EXECUTE p1;
DROP TABLE a;
DEALLOCATE p1;
CREATE TABLE accounts AS SELECT 1 id, 'Mark' AS name;
SUMMARIZE SELECT * FROM accounts WHERE id = 1;
PREPARE query AS SUMMARIZE SELECT * FROM accounts WHERE id = $1;
EXECUTE query(1);
PREPARE query AS (SUMMARIZE SELECT * FROM accounts WHERE id = $1);
EXECUTE query(1);
DESCRIBE SELECT * FROM accounts WHERE id = 1;
PREPARE query AS DESCRIBE SELECT * FROM accounts WHERE id = $1;
EXECUTE query(1);
PREPARE query AS (DESCRIBE SELECT * FROM accounts WHERE id = $1);
EXECUTE query(1);
CREATE TABLE b (i TINYINT);
INSERT INTO b VALUES (1), (2), (3), (4), (5);
PREPARE s1 AS DELETE FROM b WHERE i=$1;
EXECUTE s1(3);
DROP TABLE b CASCADE;
PREPARE q1 AS
	COPY (
		select $1 as 'col'
	) to 'duckdb_unittest_tempdir/84215/res.csv' (
		FORMAT csv
	);
CREATE TABLE b (i TINYINT);
INSERT INTO b VALUES (1), (2), (3), (4), (5);
PREPARE s1 AS DELETE FROM b WHERE i=$1;
EXECUTE s1(3);
DROP TABLE b CASCADE;
CREATE TABLE b (i TINYINT);
INSERT INTO b VALUES (1), (2), (3), (4), (5);
PREPARE s1 AS UPDATE b SET i=$1 WHERE i=$2;
EXECUTE s1(6, 3);
DROP TABLE b CASCADE;
PREPARE v1 AS SELECT $1::INT, $1::BIGINT;
EXECUTE v1(42);
PREPARE v2 AS SELECT $1::BIGINT, $1::INT;
EXECUTE v2(42);
PREPARE v3 AS SELECT $1::BIGINT, $1::UBIGINT;
EXECUTE v3(42);
PREPARE v4 AS SELECT $1::VARCHAR, $1::DATE;
EXECUTE v4('1992-01-01');
PREPARE v5 AS SELECT $1::INT, $1::BIGINT, $1::TINYINT, $1::HUGEINT, $1::SMALLINT;
EXECUTE v5(42);
PREPARE v6 AS SELECT $1::INT, $1::BIGINT, $1::TINYINT, $1::UBIGINT, $1::SMALLINT, $1::UHUGEINT;
EXECUTE v6(42);
PREPARE v7 AS SELECT CONCAT($1::TINYINT, $1);
EXECUTE v7(42);
PREPARE v8 AS SELECT * FROM (values ('body')) t(field) WHERE CASE WHEN $1 IS NULL THEN 1 ELSE field IN (SELECT * FROM (SELECT UNNEST(string_split($1, ','))) AS fsq) END;
EXECUTE v8('body');
PREPARE v9 AS SELECT UNNEST($1) UNION ALL SELECT * FROM range(1) WHERE $1::INT[]=[1];
EXECUTE v9([1]);
create table test as select 42 i;
prepare q1 as SELECT cast(? AS VARCHAR) FROM test;
execute q1('oops');
PREPARE v1 AS SELECT ? + 1.0 AS a;
EXECUTE v1(2.0);
PREPARE v2 AS SELECT ? * 2.0 AS a;
EXECUTE v2(2.0);
PREPARE v3 AS SELECT ? = 2.0 AS a;
EXECUTE v3(2.0);
PREPARE v4 AS SELECT 2.0 IN (1.0, 1.5, ?);
EXECUTE v4(2.0);
EXECUTE v4(2.5);
PREPARE v5 AS SELECT ? IN (1.0, 1.5, 2.0);
EXECUTE v5(2.0);
EXECUTE v5(2.5);
CREATE TABLE b (i TINYINT);
PREPARE s1 AS INSERT INTO b VALUES (cast($1 as tinyint)), ($2 + 1), ($3);
EXECUTE s1 (42, 41, 42);
