PRAGMA enable_verification;
SELECT {'i': 1, 'j': 2}::ROW(i BIGINT, j VARCHAR);;
SELECT {'i': 1, 'j': 2}::ROW(i BIGINT, j VARCHAR);;
;
SELECT {'i': 1, 'j': 2}::ROW(i BIGINT, j VARCHAR);;
SELECT CAST(main.struct_pack(i := 1, j := 2) AS STRUCT(i BIGINT, j VARCHAR));
;
;
;
;
SELECT {'i': 1, 'j': 2}::ROW(i BIGINT, j VARCHAR);;
SELECT {'i': NULL, 'j': 'hello'}::ROW(i BIGINT, j VARCHAR);;
SELECT {'i': NULL, 'j': 'hello'}::ROW(i BIGINT, j VARCHAR);;
;
SELECT {'i': NULL, 'j': 'hello'}::ROW(i BIGINT, j VARCHAR);;
SELECT CAST(main.struct_pack(i := NULL, j := 'hello') AS STRUCT(i BIGINT, j VARCHAR));
;
;
;
;
SELECT {'i': NULL, 'j': 'hello'}::ROW(i BIGINT, j VARCHAR);;
SELECT {'i': NULL, 'j': NULL}::ROW(i BIGINT, j VARCHAR);;
SELECT {'i': NULL, 'j': NULL}::ROW(i BIGINT, j VARCHAR);;
;
SELECT {'i': NULL, 'j': NULL}::ROW(i BIGINT, j VARCHAR);;
SELECT CAST(main.struct_pack(i := NULL, j := NULL) AS STRUCT(i BIGINT, j VARCHAR));
;
;
;
;
SELECT {'i': NULL, 'j': NULL}::ROW(i BIGINT, j VARCHAR);;
SELECT NULL::ROW(i BIGINT, j VARCHAR);;
SELECT NULL::ROW(i BIGINT, j VARCHAR);;
;
SELECT NULL::ROW(i BIGINT, j VARCHAR);;
SELECT CAST(NULL AS STRUCT(i BIGINT, j VARCHAR));
;
;
;
;
SELECT NULL::ROW(i BIGINT, j VARCHAR);;
SELECT ({'i': NULL, 'j': NULL}::ROW(i BIGINT, j VARCHAR))['i'];;
SELECT ({'i': NULL, 'j': NULL}::ROW(i BIGINT, j VARCHAR))['i'];;
;
SELECT ({'i': NULL, 'j': NULL}::ROW(i BIGINT, j VARCHAR))['i'];;
SELECT CAST(main.struct_pack(i := NULL, j := NULL) AS STRUCT(i BIGINT, j VARCHAR))['i'];
;
;
;
;
SELECT ({'i': NULL, 'j': NULL}::ROW(i BIGINT, j VARCHAR))['i'];;
SELECT ({'i': NULL, 'j': NULL})['i'];
SELECT ({'i': NULL, 'j': NULL})['i'];
;
SELECT ({'i': NULL, 'j': NULL})['i'];
SELECT main.struct_pack(i := NULL, j := NULL)['i'];
;
;
;
;
SELECT ({'i': NULL, 'j': NULL})['i'];
SELECT (NULL::ROW(i BIGINT, j VARCHAR))['i'];;
SELECT (NULL::ROW(i BIGINT, j VARCHAR))['i'];;
;
SELECT (NULL::ROW(i BIGINT, j VARCHAR))['i'];;
SELECT CAST(NULL AS STRUCT(i BIGINT, j VARCHAR))['i'];
;
;
;
;
SELECT (NULL::ROW(i BIGINT, j VARCHAR))['i'];;
SELECT {'i': 1, 'j': {'a': 2, 'b': 3}}::ROW(i BIGINT, j ROW(a BIGINT, b VARCHAR));;
SELECT {'i': 1, 'j': {'a': 2, 'b': 3}}::ROW(i BIGINT, j ROW(a BIGINT, b VARCHAR));;
;
SELECT {'i': 1, 'j': {'a': 2, 'b': 3}}::ROW(i BIGINT, j ROW(a BIGINT, b VARCHAR));;
SELECT CAST(main.struct_pack(i := 1, j := main.struct_pack(a := 2, b := 3)) AS STRUCT(i BIGINT, j STRUCT(a BIGINT, b VARCHAR)));
;
;
;
;
SELECT {'i': 1, 'j': {'a': 2, 'b': 3}}::ROW(i BIGINT, j ROW(a BIGINT, b VARCHAR));;
SELECT {'i': 1, 'j': {'a': NULL, 'b': 3}}::ROW(i BIGINT, j ROW(a BIGINT, b VARCHAR));;
SELECT {'i': 1, 'j': {'a': NULL, 'b': 3}}::ROW(i BIGINT, j ROW(a BIGINT, b VARCHAR));;
;
SELECT {'i': 1, 'j': {'a': NULL, 'b': 3}}::ROW(i BIGINT, j ROW(a BIGINT, b VARCHAR));;
SELECT CAST(main.struct_pack(i := 1, j := main.struct_pack(a := NULL, b := 3)) AS STRUCT(i BIGINT, j STRUCT(a BIGINT, b VARCHAR)));
;
;
;
;
SELECT {'i': 1, 'j': {'a': NULL, 'b': 3}}::ROW(i BIGINT, j ROW(a BIGINT, b VARCHAR));;
SELECT {'i': 1, 'j': {'a': 2, 'b': NULL}}::ROW(i BIGINT, j ROW(a BIGINT, b VARCHAR));;
SELECT {'i': 1, 'j': {'a': 2, 'b': NULL}}::ROW(i BIGINT, j ROW(a BIGINT, b VARCHAR));;
;
SELECT {'i': 1, 'j': {'a': 2, 'b': NULL}}::ROW(i BIGINT, j ROW(a BIGINT, b VARCHAR));;
SELECT CAST(main.struct_pack(i := 1, j := main.struct_pack(a := 2, b := NULL)) AS STRUCT(i BIGINT, j STRUCT(a BIGINT, b VARCHAR)));
;
;
;
;
SELECT {'i': 1, 'j': {'a': 2, 'b': NULL}}::ROW(i BIGINT, j ROW(a BIGINT, b VARCHAR));;
SELECT {'i': 1, 'j': NULL}::ROW(i BIGINT, j ROW(a BIGINT, b VARCHAR));;
SELECT {'i': 1, 'j': NULL}::ROW(i BIGINT, j ROW(a BIGINT, b VARCHAR));;
;
SELECT {'i': 1, 'j': NULL}::ROW(i BIGINT, j ROW(a BIGINT, b VARCHAR));;
SELECT CAST(main.struct_pack(i := 1, j := NULL) AS STRUCT(i BIGINT, j STRUCT(a BIGINT, b VARCHAR)));
;
;
;
;
SELECT {'i': 1, 'j': NULL}::ROW(i BIGINT, j ROW(a BIGINT, b VARCHAR));;
SELECT ({'i': 1, 'j': NULL}::ROW(i BIGINT, j ROW(a BIGINT, b VARCHAR)))['j']['a'];;
SELECT ({'i': 1, 'j': NULL}::ROW(i BIGINT, j ROW(a BIGINT, b VARCHAR)))['j']['a'];;
;
SELECT ({'i': 1, 'j': NULL}::ROW(i BIGINT, j ROW(a BIGINT, b VARCHAR)))['j']['a'];;
SELECT CAST(main.struct_pack(i := 1, j := NULL) AS STRUCT(i BIGINT, j STRUCT(a BIGINT, b VARCHAR)))['j']['a'];
;
;
;
;
SELECT ({'i': 1, 'j': NULL}::ROW(i BIGINT, j ROW(a BIGINT, b VARCHAR)))['j']['a'];;
SELECT NULL::ROW(i BIGINT, j ROW(a BIGINT, b VARCHAR));;
SELECT NULL::ROW(i BIGINT, j ROW(a BIGINT, b VARCHAR));;
;
SELECT NULL::ROW(i BIGINT, j ROW(a BIGINT, b VARCHAR));;
SELECT CAST(NULL AS STRUCT(i BIGINT, j STRUCT(a BIGINT, b VARCHAR)));
;
;
;
;
SELECT NULL::ROW(i BIGINT, j ROW(a BIGINT, b VARCHAR));;
CREATE TABLE structs(s ROW(i INTEGER, j INTEGER));
INSERT INTO structs VALUES ({'i': 1, 'j': 2}), ({'i': NULL, 'j': 2}), ({'i': 1, 'j': NULL}), (NULL);
SELECT s::ROW(i BIGINT, j VARCHAR) FROM structs;
SELECT s::ROW(i BIGINT, j VARCHAR) FROM structs;
;
SELECT s::ROW(i BIGINT, j VARCHAR) FROM structs;
SELECT CAST(s AS STRUCT(i BIGINT, j VARCHAR)) FROM structs;
;
;
;
;
SELECT s::ROW(i BIGINT, j VARCHAR) FROM structs;
CREATE TABLE nested_structs(s ROW(i INTEGER, j ROW(a INTEGER, b INTEGER)));
INSERT INTO nested_structs VALUES
({'i': 1, 'j': {'a': 2, 'b': 3}}),
({'i': 1, 'j': {'a': NULL, 'b': 3}}),
({'i': 1, 'j': {'a': 2, 'b': NULL}}),
({'i': 1, 'j': NULL}),
(NULL);
SELECT s::ROW(i BIGINT, j ROW(a BIGINT, b VARCHAR)) FROM nested_structs;
SELECT s::ROW(i BIGINT, j ROW(a BIGINT, b VARCHAR)) FROM nested_structs;
;
SELECT s::ROW(i BIGINT, j ROW(a BIGINT, b VARCHAR)) FROM nested_structs;
SELECT CAST(s AS STRUCT(i BIGINT, j STRUCT(a BIGINT, b VARCHAR))) FROM nested_structs;
;
;
;
;
SELECT s::ROW(i BIGINT, j ROW(a BIGINT, b VARCHAR)) FROM nested_structs;
