PRAGMA enable_verification;
SELECT [1] IS NOT DISTINCT FROM [2];
SELECT [1] IS NOT DISTINCT FROM [2];
;
SELECT [1] IS NOT DISTINCT FROM [2];
SELECT (main.list_value(1) IS NOT DISTINCT FROM main.list_value(2));
;
;
;
;
SELECT [1] IS NOT DISTINCT FROM [2];
SELECT [1] IS NOT DISTINCT FROM [1];
SELECT [1] IS NOT DISTINCT FROM [1];
;
SELECT [1] IS NOT DISTINCT FROM [1];
SELECT (main.list_value(1) IS NOT DISTINCT FROM main.list_value(1));
;
;
;
;
SELECT [1] IS NOT DISTINCT FROM [1];
SELECT NULL IS NOT DISTINCT FROM [1];
SELECT NULL IS NOT DISTINCT FROM [1];
;
SELECT NULL IS NOT DISTINCT FROM [1];
SELECT (NULL IS NOT DISTINCT FROM main.list_value(1));
;
;
;
;
SELECT NULL IS NOT DISTINCT FROM [1];
SELECT [1] IS NOT DISTINCT FROM NULL;
SELECT [1] IS NOT DISTINCT FROM NULL;
;
SELECT [1] IS NOT DISTINCT FROM NULL;
SELECT (main.list_value(1) IS NOT DISTINCT FROM NULL);
;
;
;
;
SELECT [1] IS NOT DISTINCT FROM NULL;
SELECT [1] IS DISTINCT FROM [2];
SELECT [1] IS DISTINCT FROM [2];
;
SELECT [1] IS DISTINCT FROM [2];
SELECT (main.list_value(1) IS DISTINCT FROM main.list_value(2));
;
;
;
;
SELECT [1] IS DISTINCT FROM [2];
SELECT [1] IS DISTINCT FROM [1];
SELECT [1] IS DISTINCT FROM [1];
;
SELECT [1] IS DISTINCT FROM [1];
SELECT (main.list_value(1) IS DISTINCT FROM main.list_value(1));
;
;
;
;
SELECT [1] IS DISTINCT FROM [1];
SELECT NULL IS DISTINCT FROM [1];
SELECT NULL IS DISTINCT FROM [1];
;
SELECT NULL IS DISTINCT FROM [1];
SELECT (NULL IS DISTINCT FROM main.list_value(1));
;
;
;
;
SELECT NULL IS DISTINCT FROM [1];
SELECT [1] IS DISTINCT FROM NULL;
SELECT [1] IS DISTINCT FROM NULL;
;
SELECT [1] IS DISTINCT FROM NULL;
SELECT (main.list_value(1) IS DISTINCT FROM NULL);
;
;
;
;
SELECT [1] IS DISTINCT FROM NULL;
CREATE VIEW list_int1 AS SELECT * FROM (VALUES
	([1], [1]),
	([1], [2]),
	([2], [1]),
	(NULL, [1]),
	([2], NULL),
	(NULL, NULL)
	) tbl(l, r);;
SELECT l IS NOT DISTINCT FROM r FROM list_int1;
SELECT l IS NOT DISTINCT FROM r FROM list_int1;
;
SELECT l IS NOT DISTINCT FROM r FROM list_int1;
SELECT (l IS NOT DISTINCT FROM r) FROM list_int1;
;
;
;
;
SELECT l IS NOT DISTINCT FROM r FROM list_int1;
SELECT l IS DISTINCT FROM r FROM list_int1;
SELECT l IS DISTINCT FROM r FROM list_int1;
;
SELECT l IS DISTINCT FROM r FROM list_int1;
SELECT (l IS DISTINCT FROM r) FROM list_int1;
;
;
;
;
SELECT l IS DISTINCT FROM r FROM list_int1;
SELECT [1] IS NOT DISTINCT FROM [1, 2];
SELECT [1] IS NOT DISTINCT FROM [1, 2];
;
SELECT [1] IS NOT DISTINCT FROM [1, 2];
SELECT (main.list_value(1) IS NOT DISTINCT FROM main.list_value(1, 2));
;
;
;
;
SELECT [1] IS NOT DISTINCT FROM [1, 2];
SELECT [1] IS NOT DISTINCT FROM [1];
SELECT [1] IS NOT DISTINCT FROM [1];
;
SELECT [1] IS NOT DISTINCT FROM [1];
SELECT (main.list_value(1) IS NOT DISTINCT FROM main.list_value(1));
;
;
;
;
SELECT [1] IS NOT DISTINCT FROM [1];
SELECT NULL IS NOT DISTINCT FROM [1];
SELECT NULL IS NOT DISTINCT FROM [1];
;
SELECT NULL IS NOT DISTINCT FROM [1];
SELECT (NULL IS NOT DISTINCT FROM main.list_value(1));
;
;
;
;
SELECT NULL IS NOT DISTINCT FROM [1];
SELECT [1] IS NOT DISTINCT FROM NULL;
SELECT [1] IS NOT DISTINCT FROM NULL;
;
SELECT [1] IS NOT DISTINCT FROM NULL;
SELECT (main.list_value(1) IS NOT DISTINCT FROM NULL);
;
;
;
;
SELECT [1] IS NOT DISTINCT FROM NULL;
SELECT [1] IS DISTINCT FROM [1, 2];
SELECT [1] IS DISTINCT FROM [1, 2];
;
SELECT [1] IS DISTINCT FROM [1, 2];
SELECT (main.list_value(1) IS DISTINCT FROM main.list_value(1, 2));
;
;
;
;
SELECT [1] IS DISTINCT FROM [1, 2];
SELECT [1] IS DISTINCT FROM [1];
SELECT [1] IS DISTINCT FROM [1];
;
SELECT [1] IS DISTINCT FROM [1];
SELECT (main.list_value(1) IS DISTINCT FROM main.list_value(1));
;
;
;
;
SELECT [1] IS DISTINCT FROM [1];
SELECT NULL IS DISTINCT FROM [1];
SELECT NULL IS DISTINCT FROM [1];
;
SELECT NULL IS DISTINCT FROM [1];
SELECT (NULL IS DISTINCT FROM main.list_value(1));
;
;
;
;
SELECT NULL IS DISTINCT FROM [1];
SELECT [1] IS DISTINCT FROM NULL;
SELECT [1] IS DISTINCT FROM NULL;
;
SELECT [1] IS DISTINCT FROM NULL;
SELECT (main.list_value(1) IS DISTINCT FROM NULL);
;
;
;
;
SELECT [1] IS DISTINCT FROM NULL;
CREATE VIEW list_int AS SELECT * FROM (VALUES
	([1], [1]),
	([1], [1, 2]),
	([1, 2], [1]),
	(NULL, [1]),
	([1, 2], NULL),
	(NULL, NULL)
	) tbl(l, r);;
SELECT l IS NOT DISTINCT FROM r FROM list_int;
SELECT l IS NOT DISTINCT FROM r FROM list_int;
;
SELECT l IS NOT DISTINCT FROM r FROM list_int;
SELECT (l IS NOT DISTINCT FROM r) FROM list_int;
;
;
;
;
SELECT l IS NOT DISTINCT FROM r FROM list_int;
SELECT l IS DISTINCT FROM r FROM list_int;
SELECT l IS DISTINCT FROM r FROM list_int;
;
SELECT l IS DISTINCT FROM r FROM list_int;
SELECT (l IS DISTINCT FROM r) FROM list_int;
;
;
;
;
SELECT l IS DISTINCT FROM r FROM list_int;
SELECT [] IS NOT DISTINCT FROM [1, 2];
SELECT [] IS NOT DISTINCT FROM [1, 2];
;
SELECT [] IS NOT DISTINCT FROM [1, 2];
SELECT (main.list_value() IS NOT DISTINCT FROM main.list_value(1, 2));
;
;
;
;
SELECT [] IS NOT DISTINCT FROM [1, 2];
SELECT [] IS NOT DISTINCT FROM [];
SELECT [] IS NOT DISTINCT FROM [];
;
SELECT [] IS NOT DISTINCT FROM [];
SELECT (main.list_value() IS NOT DISTINCT FROM main.list_value());
;
;
;
;
SELECT [] IS NOT DISTINCT FROM [];
SELECT NULL IS NOT DISTINCT FROM [];
SELECT NULL IS NOT DISTINCT FROM [];
;
SELECT NULL IS NOT DISTINCT FROM [];
SELECT (NULL IS NOT DISTINCT FROM main.list_value());
;
;
;
;
SELECT NULL IS NOT DISTINCT FROM [];
SELECT [] IS NOT DISTINCT FROM NULL;
SELECT [] IS NOT DISTINCT FROM NULL;
;
SELECT [] IS NOT DISTINCT FROM NULL;
SELECT (main.list_value() IS NOT DISTINCT FROM NULL);
;
;
;
;
SELECT [] IS NOT DISTINCT FROM NULL;
SELECT [] IS DISTINCT FROM [1, 2];
SELECT [] IS DISTINCT FROM [1, 2];
;
SELECT [] IS DISTINCT FROM [1, 2];
SELECT (main.list_value() IS DISTINCT FROM main.list_value(1, 2));
;
;
;
;
SELECT [] IS DISTINCT FROM [1, 2];
SELECT [] IS DISTINCT FROM [];
SELECT [] IS DISTINCT FROM [];
;
SELECT [] IS DISTINCT FROM [];
SELECT (main.list_value() IS DISTINCT FROM main.list_value());
;
;
;
;
SELECT [] IS DISTINCT FROM [];
SELECT NULL IS DISTINCT FROM [];
SELECT NULL IS DISTINCT FROM [];
;
SELECT NULL IS DISTINCT FROM [];
SELECT (NULL IS DISTINCT FROM main.list_value());
;
;
;
;
SELECT NULL IS DISTINCT FROM [];
SELECT [] IS DISTINCT FROM NULL;
SELECT [] IS DISTINCT FROM NULL;
;
SELECT [] IS DISTINCT FROM NULL;
SELECT (main.list_value() IS DISTINCT FROM NULL);
;
;
;
;
SELECT [] IS DISTINCT FROM NULL;
CREATE VIEW list_int_empty AS SELECT * FROM (VALUES
	([], []),
	([], [1, 2]),
	([1, 2], []),
	(NULL, []),
	([1, 2], NULL),
	(NULL, NULL)
	) tbl(l, r);;
SELECT l IS NOT DISTINCT FROM r FROM list_int_empty;
SELECT l IS NOT DISTINCT FROM r FROM list_int_empty;
;
SELECT l IS NOT DISTINCT FROM r FROM list_int_empty;
SELECT (l IS NOT DISTINCT FROM r) FROM list_int_empty;
;
;
;
;
SELECT l IS NOT DISTINCT FROM r FROM list_int_empty;
SELECT l IS DISTINCT FROM r FROM list_int_empty;
SELECT l IS DISTINCT FROM r FROM list_int_empty;
;
SELECT l IS DISTINCT FROM r FROM list_int_empty;
SELECT (l IS DISTINCT FROM r) FROM list_int_empty;
;
;
;
;
SELECT l IS DISTINCT FROM r FROM list_int_empty;
SELECT ['duck'] IS NOT DISTINCT FROM ['duck', 'goose'];
SELECT ['duck'] IS NOT DISTINCT FROM ['duck', 'goose'];
;
SELECT ['duck'] IS NOT DISTINCT FROM ['duck', 'goose'];
SELECT (main.list_value('duck') IS NOT DISTINCT FROM main.list_value('duck', 'goose'));
;
;
;
;
SELECT ['duck'] IS NOT DISTINCT FROM ['duck', 'goose'];
SELECT ['duck'] IS NOT DISTINCT FROM ['duck'];
SELECT ['duck'] IS NOT DISTINCT FROM ['duck'];
;
SELECT ['duck'] IS NOT DISTINCT FROM ['duck'];
SELECT (main.list_value('duck') IS NOT DISTINCT FROM main.list_value('duck'));
;
;
;
;
SELECT ['duck'] IS NOT DISTINCT FROM ['duck'];
SELECT NULL IS NOT DISTINCT FROM ['duck'];
SELECT NULL IS NOT DISTINCT FROM ['duck'];
;
SELECT NULL IS NOT DISTINCT FROM ['duck'];
SELECT (NULL IS NOT DISTINCT FROM main.list_value('duck'));
;
;
;
;
SELECT NULL IS NOT DISTINCT FROM ['duck'];
SELECT ['duck'] IS NOT DISTINCT FROM NULL;
SELECT ['duck'] IS NOT DISTINCT FROM NULL;
;
SELECT ['duck'] IS NOT DISTINCT FROM NULL;
SELECT (main.list_value('duck') IS NOT DISTINCT FROM NULL);
;
;
;
;
SELECT ['duck'] IS NOT DISTINCT FROM NULL;
SELECT ['duck'] IS DISTINCT FROM ['duck', 'goose'];
SELECT ['duck'] IS DISTINCT FROM ['duck', 'goose'];
;
SELECT ['duck'] IS DISTINCT FROM ['duck', 'goose'];
SELECT (main.list_value('duck') IS DISTINCT FROM main.list_value('duck', 'goose'));
;
;
;
;
SELECT ['duck'] IS DISTINCT FROM ['duck', 'goose'];
SELECT ['duck'] IS DISTINCT FROM ['duck'];
SELECT ['duck'] IS DISTINCT FROM ['duck'];
;
SELECT ['duck'] IS DISTINCT FROM ['duck'];
SELECT (main.list_value('duck') IS DISTINCT FROM main.list_value('duck'));
;
;
;
;
SELECT ['duck'] IS DISTINCT FROM ['duck'];
SELECT NULL IS DISTINCT FROM ['duck'];
SELECT NULL IS DISTINCT FROM ['duck'];
;
SELECT NULL IS DISTINCT FROM ['duck'];
SELECT (NULL IS DISTINCT FROM main.list_value('duck'));
;
;
;
;
SELECT NULL IS DISTINCT FROM ['duck'];
SELECT ['duck'] IS DISTINCT FROM NULL;
SELECT ['duck'] IS DISTINCT FROM NULL;
;
SELECT ['duck'] IS DISTINCT FROM NULL;
SELECT (main.list_value('duck') IS DISTINCT FROM NULL);
;
;
;
;
SELECT ['duck'] IS DISTINCT FROM NULL;
CREATE VIEW list_str AS SELECT * FROM (VALUES
	(['duck'], ['duck']),
	(['duck'], ['duck', 'goose']),
	(['duck', 'goose'], ['duck']),
	(NULL, ['duck']),
	(['duck', 'goose'], NULL),
	(NULL, NULL)
	) tbl(l, r);;
SELECT l IS NOT DISTINCT FROM r FROM list_str;
SELECT l IS NOT DISTINCT FROM r FROM list_str;
;
SELECT l IS NOT DISTINCT FROM r FROM list_str;
SELECT (l IS NOT DISTINCT FROM r) FROM list_str;
;
;
;
;
SELECT l IS NOT DISTINCT FROM r FROM list_str;
SELECT l IS DISTINCT FROM r FROM list_str;
SELECT l IS DISTINCT FROM r FROM list_str;
;
SELECT l IS DISTINCT FROM r FROM list_str;
SELECT (l IS DISTINCT FROM r) FROM list_str;
;
;
;
;
SELECT l IS DISTINCT FROM r FROM list_str;
SELECT [{'x': 'duck', 'y': 1}] IS NOT DISTINCT FROM [{'x': 'duck', 'y': 1}, {'x': 'goose', 'y': 2}];
SELECT [{'x': 'duck', 'y': 1}] IS NOT DISTINCT FROM [{'x': 'duck', 'y': 1}, {'x': 'goose', 'y': 2}];
;
SELECT [{'x': 'duck', 'y': 1}] IS NOT DISTINCT FROM [{'x': 'duck', 'y': 1}, {'x': 'goose', 'y': 2}];
SELECT (main.list_value(main.struct_pack(x := 'duck', y := 1)) IS NOT DISTINCT FROM main.list_value(main.struct_pack(x := 'duck', y := 1), main.struct_pack(x := 'goose', y := 2)));
;
;
;
;
SELECT [{'x': 'duck', 'y': 1}] IS NOT DISTINCT FROM [{'x': 'duck', 'y': 1}, {'x': 'goose', 'y': 2}];
SELECT [{'x': 'duck', 'y': 1}] IS NOT DISTINCT FROM [{'x': 'duck', 'y': 1}];
SELECT [{'x': 'duck', 'y': 1}] IS NOT DISTINCT FROM [{'x': 'duck', 'y': 1}];
;
SELECT [{'x': 'duck', 'y': 1}] IS NOT DISTINCT FROM [{'x': 'duck', 'y': 1}];
SELECT (main.list_value(main.struct_pack(x := 'duck', y := 1)) IS NOT DISTINCT FROM main.list_value(main.struct_pack(x := 'duck', y := 1)));
;
;
;
;
SELECT [{'x': 'duck', 'y': 1}] IS NOT DISTINCT FROM [{'x': 'duck', 'y': 1}];
SELECT NULL IS NOT DISTINCT FROM [{'x': 'duck', 'y': 1}];
SELECT NULL IS NOT DISTINCT FROM [{'x': 'duck', 'y': 1}];
;
SELECT NULL IS NOT DISTINCT FROM [{'x': 'duck', 'y': 1}];
SELECT (NULL IS NOT DISTINCT FROM main.list_value(main.struct_pack(x := 'duck', y := 1)));
;
;
;
;
SELECT NULL IS NOT DISTINCT FROM [{'x': 'duck', 'y': 1}];
SELECT [{'x': 'duck', 'y': 1}] IS NOT DISTINCT FROM NULL;
SELECT [{'x': 'duck', 'y': 1}] IS NOT DISTINCT FROM NULL;
;
SELECT [{'x': 'duck', 'y': 1}] IS NOT DISTINCT FROM NULL;
SELECT (main.list_value(main.struct_pack(x := 'duck', y := 1)) IS NOT DISTINCT FROM NULL);
;
;
;
;
SELECT [{'x': 'duck', 'y': 1}] IS NOT DISTINCT FROM NULL;
SELECT [{'x': 'duck', 'y': 1}] IS DISTINCT FROM [{'x': 'duck', 'y': 1}, {'x': 'goose', 'y': 2}];
SELECT [{'x': 'duck', 'y': 1}] IS DISTINCT FROM [{'x': 'duck', 'y': 1}, {'x': 'goose', 'y': 2}];
;
SELECT [{'x': 'duck', 'y': 1}] IS DISTINCT FROM [{'x': 'duck', 'y': 1}, {'x': 'goose', 'y': 2}];
SELECT (main.list_value(main.struct_pack(x := 'duck', y := 1)) IS DISTINCT FROM main.list_value(main.struct_pack(x := 'duck', y := 1), main.struct_pack(x := 'goose', y := 2)));
;
;
;
;
SELECT [{'x': 'duck', 'y': 1}] IS DISTINCT FROM [{'x': 'duck', 'y': 1}, {'x': 'goose', 'y': 2}];
SELECT [{'x': 'duck', 'y': 1}] IS DISTINCT FROM [{'x': 'duck', 'y': 1}];
SELECT [{'x': 'duck', 'y': 1}] IS DISTINCT FROM [{'x': 'duck', 'y': 1}];
;
SELECT [{'x': 'duck', 'y': 1}] IS DISTINCT FROM [{'x': 'duck', 'y': 1}];
SELECT (main.list_value(main.struct_pack(x := 'duck', y := 1)) IS DISTINCT FROM main.list_value(main.struct_pack(x := 'duck', y := 1)));
;
;
;
;
SELECT [{'x': 'duck', 'y': 1}] IS DISTINCT FROM [{'x': 'duck', 'y': 1}];
SELECT NULL IS DISTINCT FROM [{'x': 'duck', 'y': 1}];
SELECT NULL IS DISTINCT FROM [{'x': 'duck', 'y': 1}];
;
SELECT NULL IS DISTINCT FROM [{'x': 'duck', 'y': 1}];
SELECT (NULL IS DISTINCT FROM main.list_value(main.struct_pack(x := 'duck', y := 1)));
;
;
;
;
SELECT NULL IS DISTINCT FROM [{'x': 'duck', 'y': 1}];
SELECT [{'x': 'duck', 'y': 1}] IS DISTINCT FROM NULL;
SELECT [{'x': 'duck', 'y': 1}] IS DISTINCT FROM NULL;
;
SELECT [{'x': 'duck', 'y': 1}] IS DISTINCT FROM NULL;
SELECT (main.list_value(main.struct_pack(x := 'duck', y := 1)) IS DISTINCT FROM NULL);
;
;
;
;
SELECT [{'x': 'duck', 'y': 1}] IS DISTINCT FROM NULL;
CREATE VIEW list_of_struct AS SELECT * FROM (VALUES
	([{'x': 'duck', 'y': 1}], [{'x': 'duck', 'y': 1}]),
	([{'x': 'duck', 'y': 1}], [{'x': 'duck', 'y': 1}, {'x': 'goose', 'y': 2}]),
	([{'x': 'duck', 'y': 1}, {'x': 'goose', 'y': 2}], [{'x': 'duck', 'y': 1}]),
	(NULL, [{'x': 'duck', 'y': 1}]),
	([{'x': 'duck', 'y': 1}, {'x': 'goose', 'y': 2}], NULL),
	(NULL, NULL)
	) tbl(l, r);;
SELECT l IS NOT DISTINCT FROM r FROM list_of_struct;
SELECT l IS NOT DISTINCT FROM r FROM list_of_struct;
;
SELECT l IS NOT DISTINCT FROM r FROM list_of_struct;
SELECT (l IS NOT DISTINCT FROM r) FROM list_of_struct;
;
;
;
;
SELECT l IS NOT DISTINCT FROM r FROM list_of_struct;
SELECT l IS DISTINCT FROM r FROM list_of_struct;
SELECT l IS DISTINCT FROM r FROM list_of_struct;
;
SELECT l IS DISTINCT FROM r FROM list_of_struct;
SELECT (l IS DISTINCT FROM r) FROM list_of_struct;
;
;
;
;
SELECT l IS DISTINCT FROM r FROM list_of_struct;
select CASE WHEN a < 4 THEN [a,a+1,a+2] ELSE NULL END IS NOT DISTINCT FROM [1,2,3] from range(5) tbl(a);;
select CASE WHEN a < 4 THEN [a,a+1,a+2] ELSE NULL END IS NOT DISTINCT FROM [1,2,3] from range(5) tbl(a);;
;
select CASE WHEN a < 4 THEN [a,a+1,a+2] ELSE NULL END IS NOT DISTINCT FROM [1,2,3] from range(5) tbl(a);;
SELECT (CASE  WHEN ((a < 4)) THEN (main.list_value(a, (a + 1), (a + 2))) ELSE NULL END IS NOT DISTINCT FROM main.list_value(1, 2, 3)) FROM range(5) AS tbl(a);
;
;
;
;
select CASE WHEN a < 4 THEN [a,a+1,a+2] ELSE NULL END IS NOT DISTINCT FROM [1,2,3] from range(5) tbl(a);;
select CASE WHEN a < 4 THEN [a,a+1,a+2] ELSE NULL END IS DISTINCT FROM [1,2,3] from range(5) tbl(a);;
select CASE WHEN a < 4 THEN [a,a+1,a+2] ELSE NULL END IS DISTINCT FROM [1,2,3] from range(5) tbl(a);;
;
select CASE WHEN a < 4 THEN [a,a+1,a+2] ELSE NULL END IS DISTINCT FROM [1,2,3] from range(5) tbl(a);;
SELECT (CASE  WHEN ((a < 4)) THEN (main.list_value(a, (a + 1), (a + 2))) ELSE NULL END IS DISTINCT FROM main.list_value(1, 2, 3)) FROM range(5) AS tbl(a);
;
;
;
;
select CASE WHEN a < 4 THEN [a,a+1,a+2] ELSE NULL END IS DISTINCT FROM [1,2,3] from range(5) tbl(a);;
