PRAGMA enable_verification;
create table test as select range i from range(3);;
create macro my_macro(i) as (select i in (select i from test));;
CREATE MACRO list_contains_macro(x, y) AS (list_contains(x, y));
SELECT list_filter([[1, 2, 1], [1, 2, 3], [1, 1, 1]], x -> list_contains_macro(x, 3));
SELECT list_filter([[1, 2, 1], [1, 2, 3], [1, 1, 1]], x -> list_contains_macro(x, 3));
;
SELECT list_filter([[1, 2, 1], [1, 2, 3], [1, 1, 1]], x -> list_contains_macro(x, 3));
SELECT list_filter(main.list_value(main.list_value(1, 2, 1), main.list_value(1, 2, 3), main.list_value(1, 1, 1)), (x -> list_contains_macro(x, 3)));
;
;
;
;
SELECT list_filter([[1, 2, 1], [1, 2, 3], [1, 1, 1]], x -> list_contains_macro(x, 3));
CREATE MACRO macro_with_lambda(list, num) AS (list_transform(list, x -> x + num));
SELECT list_filter([[1, 2], NULL, [3], [4, NULL]], f -> list_count(macro_with_lambda(f, 2)) > 1);
SELECT list_filter([[1, 2], NULL, [3], [4, NULL]], f -> list_count(macro_with_lambda(f, 2)) > 1);
;
SELECT list_filter([[1, 2], NULL, [3], [4, NULL]], f -> list_count(macro_with_lambda(f, 2)) > 1);
SELECT list_filter(main.list_value(main.list_value(1, 2), NULL, main.list_value(3), main.list_value(4, NULL)), (f -> (list_count(macro_with_lambda(f, 2)) > 1)));
;
;
;
;
SELECT list_filter([[1, 2], NULL, [3], [4, NULL]], f -> list_count(macro_with_lambda(f, 2)) > 1);
CREATE MACRO some_macro(x, y, z) AS (SELECT list_transform(x, a -> x + y + z));
SELECT some_macro([1, 2], 3, 4);;
SELECT some_macro([1, 2], 3, 4);;
;
SELECT some_macro([1, 2], 3, 4);;
SELECT some_macro([1, 2], 3, 4);;
CREATE MACRO reduce_macro(list, num) AS (list_reduce(list, (x, y) -> x + y + num));
SELECT reduce_macro([1, 2, 3, 4], 5);;
SELECT reduce_macro([1, 2, 3, 4], 5);;
;
SELECT reduce_macro([1, 2, 3, 4], 5);;
SELECT reduce_macro(main.list_value(1, 2, 3, 4), 5);
;
;
;
;
SELECT reduce_macro([1, 2, 3, 4], 5);;
CREATE MACRO other_reduce_macro(list, num, bla) AS (SELECT list_reduce(list, (x, y) -> list + x + y + num + bla));
SELECT other_reduce_macro([1, 2, 3, 4], 5, 6);;
SELECT other_reduce_macro([1, 2, 3, 4], 5, 6);;
;
SELECT other_reduce_macro([1, 2, 3, 4], 5, 6);;
SELECT other_reduce_macro([1, 2, 3, 4], 5, 6);;
CREATE MACRO scoping_macro(x, y, z) AS (SELECT list_transform(x, x -> x + y + z));;
SELECT scoping_macro([11, 22], 3, 4);;
SELECT scoping_macro([11, 22], 3, 4);;
;
SELECT scoping_macro([11, 22], 3, 4);;
SELECT scoping_macro(main.list_value(11, 22), 3, 4);
;
;
;
;
SELECT scoping_macro([11, 22], 3, 4);;
