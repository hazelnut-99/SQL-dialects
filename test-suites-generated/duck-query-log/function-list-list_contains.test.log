PRAGMA enable_verification;
create table TEST2 (i int[], j int);;
insert into TEST2 values ([2,1,3], 2), ([2,3,4], 5), ([1], NULL);;
select list_contains(i, j) from TEST2;
select list_contains(i, j) from TEST2;
;
select list_contains(i, j) from TEST2;
SELECT list_contains(i, j) FROM TEST2;
;
;
;
;
select list_contains(i, j) from TEST2;
create table TEST (i int[]);;
insert into TEST values ([2,1,3]), ([2,3,4]), ([1]);;
SELECT i, list_contains(i,1) from TEST;;
SELECT i, list_contains(i,1) from TEST;;
;
SELECT i, list_contains(i,1) from TEST;;
SELECT i, list_contains(i, 1) FROM TEST;
;
;
;
;
SELECT i, list_contains(i,1) from TEST;;
SELECT i, list_contains(i,4.0) from TEST;;
SELECT i, list_contains(i,4.0) from TEST;;
;
SELECT i, list_contains(i,4.0) from TEST;;
SELECT i, list_contains(i, 4.0) FROM TEST;
;
;
;
;
SELECT i, list_contains(i,4.0) from TEST;;
DROP table TEST;;
create table STR_TEST (i string[]);;
insert into STR_TEST values (['a','b','c']), (['d','a','e']), (['b']), (['aaaaaaaaaaaaaaaaaaaaaaaa']);;
SELECT i, list_contains(i,'a') from STR_TEST;;
SELECT i, list_contains(i,'a') from STR_TEST;;
;
SELECT i, list_contains(i,'a') from STR_TEST;;
SELECT i, list_contains(i, 'a') FROM STR_TEST;
;
;
;
;
SELECT i, list_contains(i,'a') from STR_TEST;;
SELECT i, list_contains(i,'aaaaaaaaaaaaaaaaaaaaaaaa') from STR_TEST;;
SELECT i, list_contains(i,'aaaaaaaaaaaaaaaaaaaaaaaa') from STR_TEST;;
;
SELECT i, list_contains(i,'aaaaaaaaaaaaaaaaaaaaaaaa') from STR_TEST;;
SELECT i, list_contains(i, 'aaaaaaaaaaaaaaaaaaaaaaaa') FROM STR_TEST;
;
;
;
;
SELECT i, list_contains(i,'aaaaaaaaaaaaaaaaaaaaaaaa') from STR_TEST;;
SELECT i, list_contains(i, '0') from STR_TEST;;
SELECT i, list_contains(i, '0') from STR_TEST;;
;
SELECT i, list_contains(i, '0') from STR_TEST;;
SELECT i, list_contains(i, '0') FROM STR_TEST;
;
;
;
;
SELECT i, list_contains(i, '0') from STR_TEST;;
SELECT i, list_contains(i,NULL) from STR_TEST;;
SELECT i, list_contains(i,NULL) from STR_TEST;;
;
SELECT i, list_contains(i,NULL) from STR_TEST;;
SELECT i, list_contains(i, NULL) FROM STR_TEST;
;
;
;
;
SELECT i, list_contains(i,NULL) from STR_TEST;;
DROP table STR_TEST;;
SELECT list_contains([7,2,5], 7);
SELECT list_contains([7,2,5], 7);
;
SELECT list_contains([7,2,5], 7);
SELECT list_contains(main.list_value(7, 2, 5), 7);
;
;
;
;
SELECT list_contains([7,2,5], 7);
SELECT list_contains([], 7);
SELECT list_contains([], 7);
;
SELECT list_contains([], 7);
SELECT list_contains(main.list_value(), 7);
;
;
;
;
SELECT list_contains([], 7);
SELECT list_contains([1,2,3],1.0);
SELECT list_contains([1,2,3],1.0);
;
SELECT list_contains([1,2,3],1.0);
SELECT list_contains(main.list_value(1, 2, 3), 1.0);
;
;
;
;
SELECT list_contains([1,2,3],1.0);
SELECT list_contains([1.0,2.0,3.0,4.0],1);
SELECT list_contains([1.0,2.0,3.0,4.0],1);
;
SELECT list_contains([1.0,2.0,3.0,4.0],1);
SELECT list_contains(main.list_value(1.0, 2.0, 3.0, 4.0), 1);
;
;
;
;
SELECT list_contains([1.0,2.0,3.0,4.0],1);
SELECT list_contains([1,2,3],4.0);
SELECT list_contains([1,2,3],4.0);
;
SELECT list_contains([1,2,3],4.0);
SELECT list_contains(main.list_value(1, 2, 3), 4.0);
;
;
;
;
SELECT list_contains([1,2,3],4.0);
SELECT list_contains([1.0,2.0,3.0],4);
SELECT list_contains([1.0,2.0,3.0],4);
;
SELECT list_contains([1.0,2.0,3.0],4);
SELECT list_contains(main.list_value(1.0, 2.0, 3.0), 4);
;
;
;
;
SELECT list_contains([1.0,2.0,3.0],4);
SELECT list_contains([1.0,2.0,3.0], 'a');
SELECT list_contains([1.0,2.0,3.0], 'a');
;
SELECT list_contains([1.0,2.0,3.0], 'a');
SELECT list_contains([1.0,2.0,3.0], 'a');
SELECT list_contains('a', 'a');
SELECT list_contains('a', 'a');
;
SELECT list_contains('a', 'a');
SELECT list_contains('a', 'a');
SELECT list_contains(NULL,NULL);
SELECT list_contains(NULL,NULL);
;
SELECT list_contains(NULL,NULL);
SELECT list_contains(NULL, NULL);
;
;
;
;
SELECT list_contains(NULL,NULL);
SELECT list_contains([7], 5);
SELECT list_contains([7], 5);
;
SELECT list_contains([7], 5);
SELECT list_contains(main.list_value(7), 5);
;
;
;
;
SELECT list_contains([7], 5);
SELECT list_contains([1,2,3,4],4);
SELECT list_contains([1,2,3,4],4);
;
SELECT list_contains([1,2,3,4],4);
SELECT list_contains(main.list_value(1, 2, 3, 4), 4);
;
;
;
;
SELECT list_contains([1,2,3,4],4);
SELECT list_contains([1,2,3,4],5);
SELECT list_contains([1,2,3,4],5);
;
SELECT list_contains([1,2,3,4],5);
SELECT list_contains(main.list_value(1, 2, 3, 4), 5);
;
;
;
;
SELECT list_contains([1,2,3,4],5);
SELECT list_contains([1.0,2.0,3.0,4.0],5.0);
SELECT list_contains([1.0,2.0,3.0,4.0],5.0);
;
SELECT list_contains([1.0,2.0,3.0,4.0],5.0);
SELECT list_contains(main.list_value(1.0, 2.0, 3.0, 4.0), 5.0);
;
;
;
;
SELECT list_contains([1.0,2.0,3.0,4.0],5.0);
SELECT list_contains([1.0,2.0,3.0,4.0],4.0);
SELECT list_contains([1.0,2.0,3.0,4.0],4.0);
;
SELECT list_contains([1.0,2.0,3.0,4.0],4.0);
SELECT list_contains(main.list_value(1.0, 2.0, 3.0, 4.0), 4.0);
;
;
;
;
SELECT list_contains([1.0,2.0,3.0,4.0],4.0);
SELECT list_contains([true, false],true);
SELECT list_contains([true, false],true);
;
SELECT list_contains([true, false],true);
SELECT list_contains(main.list_value(CAST('t' AS BOOLEAN), CAST('f' AS BOOLEAN)), CAST('t' AS BOOLEAN));
;
;
;
;
SELECT list_contains([true, false],true);
SELECT list_contains([true, true],false);
SELECT list_contains([true, true],false);
;
SELECT list_contains([true, true],false);
SELECT list_contains(main.list_value(CAST('t' AS BOOLEAN), CAST('t' AS BOOLEAN)), CAST('f' AS BOOLEAN));
;
;
;
;
SELECT list_contains([true, true],false);
SELECT list_contains(['test', 'notest'],'notest');
SELECT list_contains(['test', 'notest'],'notest');
;
SELECT list_contains(['test', 'notest'],'notest');
SELECT list_contains(main.list_value('test', 'notest'), 'notest');
;
;
;
;
SELECT list_contains(['test', 'notest'],'notest');
SELECT list_contains(['test', 'notest'],'a');
SELECT list_contains(['test', 'notest'],'a');
;
SELECT list_contains(['test', 'notest'],'a');
SELECT list_contains(main.list_value('test', 'notest'), 'a');
;
;
;
;
SELECT list_contains(['test', 'notest'],'a');
SELECT list_contains(NULL,1);
SELECT list_contains(NULL,1);
;
SELECT list_contains(NULL,1);
SELECT list_contains(NULL, 1);
;
;
;
;
SELECT list_contains(NULL,1);
SELECT list_contains([1],NULL);
SELECT list_contains([1],NULL);
;
SELECT list_contains([1],NULL);
SELECT list_contains(main.list_value(1), NULL);
;
;
;
;
SELECT list_contains([1],NULL);
SELECT list_contains([NULL],NULL);
SELECT list_contains([NULL],NULL);
;
SELECT list_contains([NULL],NULL);
SELECT list_contains(main.list_value(NULL), NULL);
;
;
;
;
SELECT list_contains([NULL],NULL);
SELECT list_contains([NULL, 1],NULL);
SELECT list_contains([NULL, 1],NULL);
;
SELECT list_contains([NULL, 1],NULL);
SELECT list_contains(main.list_value(NULL, 1), NULL);
;
;
;
;
SELECT list_contains([NULL, 1],NULL);
SELECT list_contains([NULL, 1],1);
SELECT list_contains([NULL, 1],1);
;
SELECT list_contains([NULL, 1],1);
SELECT list_contains(main.list_value(NULL, 1), 1);
;
;
;
;
SELECT list_contains([NULL, 1],1);
SELECT list_contains([NULL, 0],1);
SELECT list_contains([NULL, 0],1);
;
SELECT list_contains([NULL, 0],1);
SELECT list_contains(main.list_value(NULL, 0), 1);
;
;
;
;
SELECT list_contains([NULL, 0],1);
SELECT list_contains([],NULL);
SELECT list_contains([],NULL);
;
SELECT list_contains([],NULL);
SELECT list_contains(main.list_value(), NULL);
;
;
;
;
SELECT list_contains([],NULL);
SELECT list_contains([NULL,7], 7);
SELECT list_contains([NULL,7], 7);
;
SELECT list_contains([NULL,7], 7);
SELECT list_contains(main.list_value(NULL, 7), 7);
;
;
;
;
SELECT list_contains([NULL,7], 7);
SELECT list_contains([[1,2,3],[1],[1,2,3]]);
SELECT list_contains([[1,2,3],[1],[1,2,3]]);
;
SELECT list_contains([[1,2,3],[1],[1,2,3]]);
SELECT list_contains([[1,2,3],[1],[1,2,3]]);
SELECT list_contains(1);
SELECT list_contains(1);
;
SELECT list_contains(1);
SELECT list_contains(1);
SELECT list_contains(1,1);
SELECT list_contains(1,1);
;
SELECT list_contains(1,1);
SELECT list_contains(1,1);
PRAGMA debug_force_external=true;
CREATE TABLE test0 (i tinyint[]);
INSERT INTO test0 VALUES ([2]), ([1]), ([1, 2]), ([]), ([2, 2]), ([NULL]), ([2, 3]);
SELECT list_contains(i,1) from test0;
SELECT list_contains(i,1) from test0;
;
SELECT list_contains(i,1) from test0;
SELECT list_contains(i, 1) FROM test0;
;
;
;
;
SELECT list_contains(i,1) from test0;
DROP TABLE test0;
PRAGMA debug_force_external=false;
CREATE TABLE test0 (i smallint[]);
INSERT INTO test0 VALUES ([2]), ([1]), ([1, 2]), ([]), ([2, 2]), ([NULL]), ([2, 3]);
SELECT list_contains(i,1) from test0;
SELECT list_contains(i,1) from test0;
;
SELECT list_contains(i,1) from test0;
SELECT list_contains(i, 1) FROM test0;
;
;
;
;
SELECT list_contains(i,1) from test0;
DROP TABLE test0;
PRAGMA debug_force_external=false;
CREATE TABLE test0 (i integer[]);
INSERT INTO test0 VALUES ([2]), ([1]), ([1, 2]), ([]), ([2, 2]), ([NULL]), ([2, 3]);
SELECT list_contains(i,1) from test0;
SELECT list_contains(i,1) from test0;
;
SELECT list_contains(i,1) from test0;
SELECT list_contains(i, 1) FROM test0;
;
;
;
;
SELECT list_contains(i,1) from test0;
DROP TABLE test0;
PRAGMA debug_force_external=false;
CREATE TABLE test0 (i bigint[]);
INSERT INTO test0 VALUES ([2]), ([1]), ([1, 2]), ([]), ([2, 2]), ([NULL]), ([2, 3]);
SELECT list_contains(i,1) from test0;
SELECT list_contains(i,1) from test0;
;
SELECT list_contains(i,1) from test0;
SELECT list_contains(i, 1) FROM test0;
;
;
;
;
SELECT list_contains(i,1) from test0;
DROP TABLE test0;
PRAGMA debug_force_external=false;
CREATE TABLE test0 (i hugeint[]);
INSERT INTO test0 VALUES ([2]), ([1]), ([1, 2]), ([]), ([2, 2]), ([NULL]), ([2, 3]);
SELECT list_contains(i,1) from test0;
SELECT list_contains(i,1) from test0;
;
SELECT list_contains(i,1) from test0;
SELECT list_contains(i, 1) FROM test0;
;
;
;
;
SELECT list_contains(i,1) from test0;
DROP TABLE test0;
PRAGMA debug_force_external=false;
CREATE TABLE test0 (i utinyint[]);
INSERT INTO test0 VALUES ([2]), ([1]), ([1, 2]), ([]), ([2, 2]), ([NULL]), ([2, 3]);
SELECT list_contains(i,1) from test0;
SELECT list_contains(i,1) from test0;
;
SELECT list_contains(i,1) from test0;
SELECT list_contains(i, 1) FROM test0;
;
;
;
;
SELECT list_contains(i,1) from test0;
DROP TABLE test0;
PRAGMA debug_force_external=false;
CREATE TABLE test0 (i usmallint[]);
INSERT INTO test0 VALUES ([2]), ([1]), ([1, 2]), ([]), ([2, 2]), ([NULL]), ([2, 3]);
SELECT list_contains(i,1) from test0;
SELECT list_contains(i,1) from test0;
;
SELECT list_contains(i,1) from test0;
SELECT list_contains(i, 1) FROM test0;
;
;
;
;
SELECT list_contains(i,1) from test0;
DROP TABLE test0;
PRAGMA debug_force_external=false;
CREATE TABLE test0 (i uinteger[]);
INSERT INTO test0 VALUES ([2]), ([1]), ([1, 2]), ([]), ([2, 2]), ([NULL]), ([2, 3]);
SELECT list_contains(i,1) from test0;
SELECT list_contains(i,1) from test0;
;
SELECT list_contains(i,1) from test0;
SELECT list_contains(i, 1) FROM test0;
;
;
;
;
SELECT list_contains(i,1) from test0;
DROP TABLE test0;
PRAGMA debug_force_external=false;
CREATE TABLE test0 (i ubigint[]);
INSERT INTO test0 VALUES ([2]), ([1]), ([1, 2]), ([]), ([2, 2]), ([NULL]), ([2, 3]);
SELECT list_contains(i,1) from test0;
SELECT list_contains(i,1) from test0;
;
SELECT list_contains(i,1) from test0;
SELECT list_contains(i, 1) FROM test0;
;
;
;
;
SELECT list_contains(i,1) from test0;
DROP TABLE test0;
PRAGMA debug_force_external=false;
CREATE TABLE test0 (i uhugeint[]);
INSERT INTO test0 VALUES ([2]), ([1]), ([1, 2]), ([]), ([2, 2]), ([NULL]), ([2, 3]);
SELECT list_contains(i,1) from test0;
SELECT list_contains(i,1) from test0;
;
SELECT list_contains(i,1) from test0;
SELECT list_contains(i, 1) FROM test0;
;
;
;
;
SELECT list_contains(i,1) from test0;
DROP TABLE test0;
PRAGMA debug_force_external=false;
CREATE TABLE test0 (i tinyint[]);
INSERT INTO test0 VALUES ([2]), ([1]), ([1, 2]), ([]), ([2, 2]), ([NULL]), ([2, 3]);
SELECT list_contains(i,1) from test0;
SELECT list_contains(i,1) from test0;
;
SELECT list_contains(i,1) from test0;
SELECT list_contains(i, 1) FROM test0;
;
;
;
;
SELECT list_contains(i,1) from test0;
DROP TABLE test0;
PRAGMA debug_force_external=false;
CREATE TABLE test0 (i smallint[]);
INSERT INTO test0 VALUES ([2]), ([1]), ([1, 2]), ([]), ([2, 2]), ([NULL]), ([2, 3]);
SELECT list_contains(i,1) from test0;
SELECT list_contains(i,1) from test0;
;
SELECT list_contains(i,1) from test0;
SELECT list_contains(i, 1) FROM test0;
;
;
;
;
SELECT list_contains(i,1) from test0;
DROP TABLE test0;
PRAGMA debug_force_external=false;
CREATE TABLE test0 (i integer[]);
INSERT INTO test0 VALUES ([2]), ([1]), ([1, 2]), ([]), ([2, 2]), ([NULL]), ([2, 3]);
SELECT list_contains(i,1) from test0;
SELECT list_contains(i,1) from test0;
;
SELECT list_contains(i,1) from test0;
SELECT list_contains(i, 1) FROM test0;
;
;
;
;
SELECT list_contains(i,1) from test0;
DROP TABLE test0;
PRAGMA debug_force_external=false;
CREATE TABLE test0 (i bigint[]);
INSERT INTO test0 VALUES ([2]), ([1]), ([1, 2]), ([]), ([2, 2]), ([NULL]), ([2, 3]);
SELECT list_contains(i,1) from test0;
SELECT list_contains(i,1) from test0;
;
SELECT list_contains(i,1) from test0;
SELECT list_contains(i, 1) FROM test0;
;
;
;
;
SELECT list_contains(i,1) from test0;
DROP TABLE test0;
PRAGMA debug_force_external=false;
CREATE TABLE test0 (i hugeint[]);
INSERT INTO test0 VALUES ([2]), ([1]), ([1, 2]), ([]), ([2, 2]), ([NULL]), ([2, 3]);
SELECT list_contains(i,1) from test0;
SELECT list_contains(i,1) from test0;
;
SELECT list_contains(i,1) from test0;
SELECT list_contains(i, 1) FROM test0;
;
;
;
;
SELECT list_contains(i,1) from test0;
DROP TABLE test0;
PRAGMA debug_force_external=false;
CREATE TABLE test0 (i utinyint[]);
INSERT INTO test0 VALUES ([2]), ([1]), ([1, 2]), ([]), ([2, 2]), ([NULL]), ([2, 3]);
SELECT list_contains(i,1) from test0;
SELECT list_contains(i,1) from test0;
;
SELECT list_contains(i,1) from test0;
SELECT list_contains(i, 1) FROM test0;
;
;
;
;
SELECT list_contains(i,1) from test0;
DROP TABLE test0;
PRAGMA debug_force_external=false;
CREATE TABLE test0 (i usmallint[]);
INSERT INTO test0 VALUES ([2]), ([1]), ([1, 2]), ([]), ([2, 2]), ([NULL]), ([2, 3]);
SELECT list_contains(i,1) from test0;
SELECT list_contains(i,1) from test0;
;
SELECT list_contains(i,1) from test0;
SELECT list_contains(i, 1) FROM test0;
;
;
;
;
SELECT list_contains(i,1) from test0;
DROP TABLE test0;
PRAGMA debug_force_external=false;
CREATE TABLE test0 (i uinteger[]);
INSERT INTO test0 VALUES ([2]), ([1]), ([1, 2]), ([]), ([2, 2]), ([NULL]), ([2, 3]);
SELECT list_contains(i,1) from test0;
SELECT list_contains(i,1) from test0;
;
SELECT list_contains(i,1) from test0;
SELECT list_contains(i, 1) FROM test0;
;
;
;
;
SELECT list_contains(i,1) from test0;
DROP TABLE test0;
PRAGMA debug_force_external=false;
CREATE TABLE test0 (i ubigint[]);
INSERT INTO test0 VALUES ([2]), ([1]), ([1, 2]), ([]), ([2, 2]), ([NULL]), ([2, 3]);
SELECT list_contains(i,1) from test0;
SELECT list_contains(i,1) from test0;
;
SELECT list_contains(i,1) from test0;
SELECT list_contains(i, 1) FROM test0;
;
;
;
;
SELECT list_contains(i,1) from test0;
DROP TABLE test0;
PRAGMA debug_force_external=false;
CREATE TABLE test0 (i uhugeint[]);
INSERT INTO test0 VALUES ([2]), ([1]), ([1, 2]), ([]), ([2, 2]), ([NULL]), ([2, 3]);
SELECT list_contains(i,1) from test0;
SELECT list_contains(i,1) from test0;
;
SELECT list_contains(i,1) from test0;
SELECT list_contains(i, 1) FROM test0;
;
;
;
;
SELECT list_contains(i,1) from test0;
DROP TABLE test0;
PRAGMA debug_force_external=false;
SELECT list_contains([[1,2,3],[1]],[1]);
SELECT list_contains([[1,2,3],[1]],[1]);
;
SELECT list_contains([[1,2,3],[1]],[1]);
SELECT list_contains(main.list_value(main.list_value(1, 2, 3), main.list_value(1)), main.list_value(1));
;
;
;
;
SELECT list_contains([[1,2,3],[1]],[1]);
SELECT list_contains([[1,2,3],[1]],[2]);
SELECT list_contains([[1,2,3],[1]],[2]);
;
SELECT list_contains([[1,2,3],[1]],[2]);
SELECT list_contains(main.list_value(main.list_value(1, 2, 3), main.list_value(1)), main.list_value(2));
;
;
;
;
SELECT list_contains([[1,2,3],[1]],[2]);
SELECT list_contains([[1,2,3],[1]],[1,2,3]);
SELECT list_contains([[1,2,3],[1]],[1,2,3]);
;
SELECT list_contains([[1,2,3],[1]],[1,2,3]);
SELECT list_contains(main.list_value(main.list_value(1, 2, 3), main.list_value(1)), main.list_value(1, 2, 3));
;
;
;
;
SELECT list_contains([[1,2,3],[1]],[1,2,3]);
SELECT list_contains([[1,3],[1]],[1,2,3]);
SELECT list_contains([[1,3],[1]],[1,2,3]);
;
SELECT list_contains([[1,3],[1]],[1,2,3]);
SELECT list_contains(main.list_value(main.list_value(1, 3), main.list_value(1)), main.list_value(1, 2, 3));
;
;
;
;
SELECT list_contains([[1,3],[1]],[1,2,3]);
SELECT list_contains([[1,3],[1], [1,2,3]],[1,2,3]);
SELECT list_contains([[1,3],[1], [1,2,3]],[1,2,3]);
;
SELECT list_contains([[1,3],[1], [1,2,3]],[1,2,3]);
SELECT list_contains(main.list_value(main.list_value(1, 3), main.list_value(1), main.list_value(1, 2, 3)), main.list_value(1, 2, 3));
;
;
;
;
SELECT list_contains([[1,3],[1], [1,2,3]],[1,2,3]);
SELECT list_contains([[NULL],[1], [1,2,3]],NULL);
SELECT list_contains([[NULL],[1], [1,2,3]],NULL);
;
SELECT list_contains([[NULL],[1], [1,2,3]],NULL);
SELECT list_contains(main.list_value(main.list_value(NULL), main.list_value(1), main.list_value(1, 2, 3)), NULL);
;
;
;
;
SELECT list_contains([[NULL],[1], [1,2,3]],NULL);
SELECT list_contains([[NULL],[1], [1,2,3]],[NULL]);
SELECT list_contains([[NULL],[1], [1,2,3]],[NULL]);
;
SELECT list_contains([[NULL],[1], [1,2,3]],[NULL]);
SELECT list_contains(main.list_value(main.list_value(NULL), main.list_value(1), main.list_value(1, 2, 3)), main.list_value(NULL));
;
;
;
;
SELECT list_contains([[NULL],[1], [1,2,3]],[NULL]);
SELECT list_contains([[1,NULL],[1], [1,2,3]],[1,NULL]);
SELECT list_contains([[1,NULL],[1], [1,2,3]],[1,NULL]);
;
SELECT list_contains([[1,NULL],[1], [1,2,3]],[1,NULL]);
SELECT list_contains(main.list_value(main.list_value(1, NULL), main.list_value(1), main.list_value(1, 2, 3)), main.list_value(1, NULL));
;
;
;
;
SELECT list_contains([[1,NULL],[1], [1,2,3]],[1,NULL]);
SELECT list_contains([[1,NULL],[1], [1,2,3]],[0,NULL]);
SELECT list_contains([[1,NULL],[1], [1,2,3]],[0,NULL]);
;
SELECT list_contains([[1,NULL],[1], [1,2,3]],[0,NULL]);
SELECT list_contains(main.list_value(main.list_value(1, NULL), main.list_value(1), main.list_value(1, 2, 3)), main.list_value(0, NULL));
;
;
;
;
SELECT list_contains([[1,NULL],[1], [1,2,3]],[0,NULL]);
SELECT list_contains([{a: 1}, {a: 2}], {a: 2});
SELECT list_contains([{a: 1}, {a: 2}], {a: 2});
;
SELECT list_contains([{a: 1}, {a: 2}], {a: 2});
SELECT list_contains(main.list_value(main.struct_pack(a := 1), main.struct_pack(a := 2)), main.struct_pack(a := 2));
;
;
;
;
SELECT list_contains([{a: 1}, {a: 2}], {a: 2});
SELECT list_contains([{a: 1}, {a: 2}], {a: 3});
SELECT list_contains([{a: 1}, {a: 2}], {a: 3});
;
SELECT list_contains([{a: 1}, {a: 2}], {a: 3});
SELECT list_contains(main.list_value(main.struct_pack(a := 1), main.struct_pack(a := 2)), main.struct_pack(a := 3));
;
;
;
;
SELECT list_contains([{a: 1}, {a: 2}], {a: 3});
SELECT list_contains([{a: 1, b: 3}, {a: 2, b: 2}], {a: 2, b: 2});
SELECT list_contains([{a: 1, b: 3}, {a: 2, b: 2}], {a: 2, b: 2});
;
SELECT list_contains([{a: 1, b: 3}, {a: 2, b: 2}], {a: 2, b: 2});
SELECT list_contains(main.list_value(main.struct_pack(a := 1, b := 3), main.struct_pack(a := 2, b := 2)), main.struct_pack(a := 2, b := 2));
;
;
;
;
SELECT list_contains([{a: 1, b: 3}, {a: 2, b: 2}], {a: 2, b: 2});
SELECT list_contains([{a: 1, b: 3}, {a: 2, b: 2}], {a: 1, b: 2});
SELECT list_contains([{a: 1, b: 3}, {a: 2, b: 2}], {a: 1, b: 2});
;
SELECT list_contains([{a: 1, b: 3}, {a: 2, b: 2}], {a: 1, b: 2});
SELECT list_contains(main.list_value(main.struct_pack(a := 1, b := 3), main.struct_pack(a := 2, b := 2)), main.struct_pack(a := 1, b := 2));
;
;
;
;
SELECT list_contains([{a: 1, b: 3}, {a: 2, b: 2}], {a: 1, b: 2});
SELECT list_contains([MAP([1], [2])], MAP([1], [2]));
SELECT list_contains([MAP([1], [2])], MAP([1], [2]));
;
SELECT list_contains([MAP([1], [2])], MAP([1], [2]));
SELECT list_contains(main.list_value(map(main.list_value(1), main.list_value(2))), map(main.list_value(1), main.list_value(2)));
;
;
;
;
SELECT list_contains([MAP([1], [2])], MAP([1], [2]));
SELECT list_contains([MAP([1], [2])], MAP([1], [3]));
SELECT list_contains([MAP([1], [2])], MAP([1], [3]));
;
SELECT list_contains([MAP([1], [2])], MAP([1], [3]));
SELECT list_contains(main.list_value(map(main.list_value(1), main.list_value(2))), map(main.list_value(1), main.list_value(3)));
;
;
;
;
SELECT list_contains([MAP([1], [2])], MAP([1], [3]));
PRAGMA debug_force_external=true;
CREATE TABLE test0 (i float[]);
INSERT INTO test0 VALUES ([2.0]), ([1.0]), ([1.0, 2.0]), ([]), ([2.0, 2.0]), ([NULL]), ([2.0, 3.0]);
SELECT list_contains(i,1.0) from test0;
SELECT list_contains(i,1.0) from test0;
;
SELECT list_contains(i,1.0) from test0;
SELECT list_contains(i, 1.0) FROM test0;
;
;
;
;
SELECT list_contains(i,1.0) from test0;
DROP TABLE test0;
PRAGMA debug_force_external=false;
CREATE TABLE test0 (i double[]);
INSERT INTO test0 VALUES ([2.0]), ([1.0]), ([1.0, 2.0]), ([]), ([2.0, 2.0]), ([NULL]), ([2.0, 3.0]);
SELECT list_contains(i,1.0) from test0;
SELECT list_contains(i,1.0) from test0;
;
SELECT list_contains(i,1.0) from test0;
SELECT list_contains(i, 1.0) FROM test0;
;
;
;
;
SELECT list_contains(i,1.0) from test0;
DROP TABLE test0;
PRAGMA debug_force_external=false;
CREATE TABLE test0 (i float[]);
INSERT INTO test0 VALUES ([2.0]), ([1.0]), ([1.0, 2.0]), ([]), ([2.0, 2.0]), ([NULL]), ([2.0, 3.0]);
SELECT list_contains(i,1.0) from test0;
SELECT list_contains(i,1.0) from test0;
;
SELECT list_contains(i,1.0) from test0;
SELECT list_contains(i, 1.0) FROM test0;
;
;
;
;
SELECT list_contains(i,1.0) from test0;
DROP TABLE test0;
PRAGMA debug_force_external=false;
CREATE TABLE test0 (i double[]);
INSERT INTO test0 VALUES ([2.0]), ([1.0]), ([1.0, 2.0]), ([]), ([2.0, 2.0]), ([NULL]), ([2.0, 3.0]);
SELECT list_contains(i,1.0) from test0;
SELECT list_contains(i,1.0) from test0;
;
SELECT list_contains(i,1.0) from test0;
SELECT list_contains(i, 1.0) FROM test0;
;
;
;
;
SELECT list_contains(i,1.0) from test0;
DROP TABLE test0;
PRAGMA debug_force_external=false;
CREATE TABLE functions (function_name varchar, function_type varchar, parameter_types varchar[]);;
INSERT INTO functions VALUES ('last_day', 'scalar', ['TIMESTAMP']), ('dayname', 'else', ['TIMESTAMP']),
	('date_part', 'scalar', ['DATE', 'VARCHAR']), ('scalar_part', 'scalar', ['VARCHAR', 'TIMESTAMP']);;
SELECT function_name FROM functions
WHERE function_type = 'scalar' AND list_has(parameter_types, 'TIMESTAMP');;
SELECT function_name FROM functions
WHERE function_type = 'scalar' AND list_has(parameter_types, 'TIMESTAMP');;
;
SELECT function_name FROM functions
WHERE function_type = 'scalar' AND list_has(parameter_types, 'TIMESTAMP');;
SELECT function_name FROM "functions" WHERE ((function_type = 'scalar') AND list_has(parameter_types, 'TIMESTAMP'));
;
;
;
;
SELECT function_name FROM functions
WHERE function_type = 'scalar' AND list_has(parameter_types, 'TIMESTAMP');;
CREATE TABLE test (id int, name text[]);;
INSERT INTO test VALUES (1, ['U2']), (2, ['Blur','Rock']), (3, ['Oasis','2Pac']);;
SELECT id, name FROM test WHERE ARRAY_CONTAINS(name, '2Pac');;
SELECT id, name FROM test WHERE ARRAY_CONTAINS(name, '2Pac');;
;
SELECT id, name FROM test WHERE ARRAY_CONTAINS(name, '2Pac');;
SELECT id, "name" FROM test WHERE array_contains("name", '2Pac');
;
;
;
;
SELECT id, name FROM test WHERE ARRAY_CONTAINS(name, '2Pac');;
SELECT id, name FROM test WHERE id IN (2,3) AND ARRAY_CONTAINS(name, '2Pac');;
SELECT id, name FROM test WHERE id IN (2,3) AND ARRAY_CONTAINS(name, '2Pac');;
;
SELECT id, name FROM test WHERE id IN (2,3) AND ARRAY_CONTAINS(name, '2Pac');;
SELECT id, "name" FROM test WHERE ((id IN (2, 3)) AND array_contains("name", '2Pac'));
;
;
;
;
SELECT id, name FROM test WHERE id IN (2,3) AND ARRAY_CONTAINS(name, '2Pac');;
WITH cte AS (SELECT id, name FROM test WHERE id IN (2,3))
SELECT id, name FROM cte WHERE ARRAY_CONTAINS(name, '2Pac');;
WITH cte AS (SELECT id, name FROM test WHERE id IN (2,3))
SELECT id, name FROM cte WHERE ARRAY_CONTAINS(name, '2Pac');;
;
WITH cte AS (SELECT id, name FROM test WHERE id IN (2,3))
SELECT id, name FROM cte WHERE ARRAY_CONTAINS(name, '2Pac');;
WITH cte AS (SELECT id, "name" FROM test WHERE (id IN (2, 3)))SELECT id, "name" FROM cte WHERE array_contains("name", '2Pac');
;
;
;
;
WITH cte AS (SELECT id, name FROM test WHERE id IN (2,3))
SELECT id, name FROM cte WHERE ARRAY_CONTAINS(name, '2Pac');;
SELECT id, name FROM test WHERE id IN (2,3) AND name::text ILIKE '%2Pac%';;
SELECT id, name FROM test WHERE id IN (2,3) AND name::text ILIKE '%2Pac%';;
;
SELECT id, name FROM test WHERE id IN (2,3) AND name::text ILIKE '%2Pac%';;
SELECT id, "name" FROM test WHERE ((id IN (2, 3)) AND (CAST("name" AS VARCHAR) ~~* '%2Pac%'));
;
;
;
;
SELECT id, name FROM test WHERE id IN (2,3) AND name::text ILIKE '%2Pac%';;
