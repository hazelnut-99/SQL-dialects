PRAGMA enable_verification;
SELECT list_transform(list_filter([0, 1, 2, 3, 4, 5], x -> x % 2 = 0), y -> y * y);
SELECT list_transform(list_filter([0, 1, 2, 3, 4, 5], x -> x % 2 = 0), y -> y * y);
;
SELECT list_transform(list_filter([0, 1, 2, 3, 4, 5], x -> x % 2 = 0), y -> y * y);
SELECT list_transform(list_filter(main.list_value(0, 1, 2, 3, 4, 5), (x -> ((x % 2) = 0))), (y -> (y * y)));
;
;
;
;
SELECT list_transform(list_filter([0, 1, 2, 3, 4, 5], x -> x % 2 = 0), y -> y * y);
SELECT [x * x for x in [0, 1, 2, 3, 4, 5] if x%2=0];
SELECT [x * x for x in [0, 1, 2, 3, 4, 5] if x%2=0];
;
SELECT [x * x for x in [0, 1, 2, 3, 4, 5] if x%2=0];
SELECT main.list_apply(main.list_filter(main.list_value(0, 1, 2, 3, 4, 5), (x -> ((x % 2) = 0))), (x -> (x * x)));
;
;
;
;
SELECT [x * x for x in [0, 1, 2, 3, 4, 5] if x%2=0];
SELECT list_filter(list_filter([2, 4, 3, 1, 20, 10, 3, 30], x -> x % 2 == 0), y -> y % 5 == 0);
SELECT list_filter(list_filter([2, 4, 3, 1, 20, 10, 3, 30], x -> x % 2 == 0), y -> y % 5 == 0);
;
SELECT list_filter(list_filter([2, 4, 3, 1, 20, 10, 3, 30], x -> x % 2 == 0), y -> y % 5 == 0);
SELECT list_filter(list_filter(main.list_value(2, 4, 3, 1, 20, 10, 3, 30), (x -> ((x % 2) = 0))), (y -> ((y % 5) = 0)));
;
;
;
;
SELECT list_filter(list_filter([2, 4, 3, 1, 20, 10, 3, 30], x -> x % 2 == 0), y -> y % 5 == 0);
SELECT [x for x in [x for x in [2, 4, 3, 1, 20, 10, 3, 30] if x % 2 == 0] if x % 5 == 0];
SELECT [x for x in [x for x in [2, 4, 3, 1, 20, 10, 3, 30] if x % 2 == 0] if x % 5 == 0];
;
SELECT [x for x in [x for x in [2, 4, 3, 1, 20, 10, 3, 30] if x % 2 == 0] if x % 5 == 0];
SELECT main.list_apply(main.list_filter(main.list_apply(main.list_filter(main.list_value(2, 4, 3, 1, 20, 10, 3, 30), (x -> ((x % 2) = 0))), (x -> x)), (x -> ((x % 5) = 0))), (x -> x));
;
;
;
;
SELECT [x for x in [x for x in [2, 4, 3, 1, 20, 10, 3, 30] if x % 2 == 0] if x % 5 == 0];
SELECT list_filter(['apple', 'banana', 'cherry', 'kiwi', 'mango'], fruit -> contains(fruit, 'a'));
SELECT list_filter(['apple', 'banana', 'cherry', 'kiwi', 'mango'], fruit -> contains(fruit, 'a'));
;
SELECT list_filter(['apple', 'banana', 'cherry', 'kiwi', 'mango'], fruit -> contains(fruit, 'a'));
SELECT list_filter(main.list_value('apple', 'banana', 'cherry', 'kiwi', 'mango'), (fruit -> contains(fruit, 'a')));
;
;
;
;
SELECT list_filter(['apple', 'banana', 'cherry', 'kiwi', 'mango'], fruit -> contains(fruit, 'a'));
SELECT [fruit for fruit in ['apple', 'banana', 'cherry', 'kiwi', 'mango'] if contains(fruit, 'a')];
SELECT [fruit for fruit in ['apple', 'banana', 'cherry', 'kiwi', 'mango'] if contains(fruit, 'a')];
;
SELECT [fruit for fruit in ['apple', 'banana', 'cherry', 'kiwi', 'mango'] if contains(fruit, 'a')];
SELECT main.list_apply(main.list_filter(main.list_value('apple', 'banana', 'cherry', 'kiwi', 'mango'), (fruit -> contains(fruit, 'a'))), (fruit -> fruit));
;
;
;
;
SELECT [fruit for fruit in ['apple', 'banana', 'cherry', 'kiwi', 'mango'] if contains(fruit, 'a')];
CREATE TABLE fruit_tbl AS SELECT ['apple', 'banana', 'cherry', 'kiwi', 'mango'] fruits;
SELECT [fruit for fruit in fruits if contains(fruit, 'a')] FROM fruit_tbl;
SELECT [fruit for fruit in fruits if contains(fruit, 'a')] FROM fruit_tbl;
;
SELECT [fruit for fruit in fruits if contains(fruit, 'a')] FROM fruit_tbl;
SELECT main.list_apply(main.list_filter(fruits, (fruit -> contains(fruit, 'a'))), (fruit -> fruit)) FROM fruit_tbl;
;
;
;
;
SELECT [fruit for fruit in fruits if contains(fruit, 'a')] FROM fruit_tbl;
SELECT list_transform([[1, NULL, 2], [3, NULL]], a -> list_filter(a, x -> x IS NOT NULL));
SELECT list_transform([[1, NULL, 2], [3, NULL]], a -> list_filter(a, x -> x IS NOT NULL));
;
SELECT list_transform([[1, NULL, 2], [3, NULL]], a -> list_filter(a, x -> x IS NOT NULL));
SELECT list_transform(main.list_value(main.list_value(1, NULL, 2), main.list_value(3, NULL)), (a -> list_filter(a, (x -> (x IS NOT NULL)))));
;
;
;
;
SELECT list_transform([[1, NULL, 2], [3, NULL]], a -> list_filter(a, x -> x IS NOT NULL));
SELECT [len(x) for x in ['goodbye', 'cruel', 'world']];
SELECT [len(x) for x in ['goodbye', 'cruel', 'world']];
;
SELECT [len(x) for x in ['goodbye', 'cruel', 'world']];
SELECT main.list_apply(main.list_value('goodbye', 'cruel', 'world'), (x -> len(x)));
;
;
;
;
SELECT [len(x) for x in ['goodbye', 'cruel', 'world']];
CREATE TABLE word_tbl AS SELECT ['goodbye', 'cruel', 'world'] words;
SELECT [len(x) for x in words] from word_tbl;
SELECT [len(x) for x in words] from word_tbl;
;
SELECT [len(x) for x in words] from word_tbl;
SELECT main.list_apply(words, (x -> len(x))) FROM word_tbl;
;
;
;
;
SELECT [len(x) for x in words] from word_tbl;
