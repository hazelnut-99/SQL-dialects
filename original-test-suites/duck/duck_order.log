PRAGMA enable_verification;
CREATE TABLE test (a INTEGER, b INTEGER);
INSERT INTO test VALUES (11, 22), (12, 21), (13, 22);
SELECT a FROM test LIMIT 1;
SELECT a FROM test LIMIT 1.25;
SELECT a FROM test LIMIT 2-1;
SELECT a FROM test LIMIT a;
SELECT a FROM test LIMIT a+1;
SELECT a FROM test LIMIT SUM(42);
SELECT a FROM test LIMIT row_number() OVER ();
CREATE TABLE test2 (a STRING);
INSERT INTO test2 VALUES ('Hello World');
PREPARE v1 AS SELECT * FROM test2 LIMIT 3;
EXECUTE v1;
select 1 limit date '1992-01-01';
CREATE TABLE integers(i INTEGER);
INSERT INTO integers VALUES (1), (2), (3), (4), (5);
CREATE SEQUENCE seq START 3;
PRAGMA disable_verification;
SELECT * FROM integers LIMIT nextval('seq');
SELECT * FROM integers LIMIT nextval('seq');
SELECT * FROM integers LIMIT RANDOM();
SELECT * FROM integers as int LIMIT (SELECT MIN(integers.i) FROM integers);
CREATE SEQUENCE of_seq START 1;
SELECT * FROM integers OFFSET nextval('of_seq');
SELECT * FROM integers OFFSET nextval('of_seq');
SELECT * FROM integers OFFSET RANDOM();
SELECT * FROM integers as int OFFSET (SELECT MIN(integers.i) FROM integers);
SELECT * FROM integers as int LIMIT (SELECT MAX(integers.i) FROM integers) OFFSET (SELECT MIN(integers.i) FROM integers);
SELECT * FROM integers as int LIMIT (SELECT max(integers.i) FROM integers where i > 5);
SELECT * FROM integers as int LIMIT (SELECT max(integers.i) FROM integers where i > 5);
SELECT * FROM integers as int LIMIT (SELECT NULL);
SELECT * FROM integers as int LIMIT (SELECT -1);
SELECT * FROM integers as int LIMIT (SELECT 'ab');
CREATE OR REPLACE TABLE t AS SELECT range x FROM range(10);
PRAGMA enable_verification;
SELECT * FROM t ORDER BY x;
SELECT * FROM t ORDER BY x OFFSET 5;
SELECT * FROM t ORDER BY x OFFSET (SELECT 5);
SELECT * FROM t ORDER BY x LIMIT (SELECT 5);
SELECT * FROM t ORDER BY x LIMIT (SELECT 3) OFFSET (SELECT 3);
SELECT * FROM t ORDER BY x LIMIT 3 OFFSET (SELECT 3);
SELECT * FROM t ORDER BY x LIMIT (SELECT 3) OFFSET 3;
SELECT * FROM t ORDER BY x LIMIT (SELECT -1);
SELECT * FROM t ORDER BY x OFFSET (SELECT -1);
create table t0(c0 int);
insert into t0 values (1), (2), (3), (4), (5), (6), (7);
SELECT * FROM t0 ORDER BY ALL OFFSET (SELECT DISTINCT 6.5 FROM (SELECT 1) t1(c0) UNION ALL SELECT 3);
pragma enable_verification;
create table test (i tinyint);
insert into test values (100), (25), (75), (50);
select * from test order by i;
drop table test;
create table test (i smallint);
insert into test values (100), (25), (75), (50);
select * from test order by i;
drop table test;
create table test (i integer);
insert into test values (100), (25), (75), (50);
select * from test order by i;
drop table test;
create table test (i bigint);
insert into test values (100), (25), (75), (50);
select * from test order by i;
drop table test;
create table test (i hugeint);
insert into test values (100), (25), (75), (50);
select * from test order by i;
drop table test;
create table test (i utinyint);
insert into test values (100), (25), (75), (50);
select * from test order by i;
drop table test;
create table test (i usmallint);
insert into test values (100), (25), (75), (50);
select * from test order by i;
drop table test;
create table test (i uinteger);
insert into test values (100), (25), (75), (50);
select * from test order by i;
drop table test;
create table test (i ubigint);
insert into test values (100), (25), (75), (50);
select * from test order by i;
drop table test;
create table test (i uhugeint);
insert into test values (100), (25), (75), (50);
select * from test order by i;
drop table test;
create table test (i smallint);
insert into test values (10000), (2500), (7500), (5000);
select * from test order by i;
drop table test;
create table test (i usmallint);
insert into test values (10000), (2500), (7500), (5000);
select * from test order by i;
drop table test;
create table test (i integer);
insert into test values (10000), (2500), (7500), (5000);
select * from test order by i;
drop table test;
create table test (i uinteger);
insert into test values (10000), (2500), (7500), (5000);
select * from test order by i;
drop table test;
create table test (i bigint);
insert into test values (10000), (2500), (7500), (5000);
select * from test order by i;
drop table test;
create table test (i ubigint);
insert into test values (10000), (2500), (7500), (5000);
select * from test order by i;
drop table test;
create table test (i hugeint);
insert into test values (10000), (2500), (7500), (5000);
select * from test order by i;
drop table test;
create table test (i uhugeint);
insert into test values (10000), (2500), (7500), (5000);
select * from test order by i;
drop table test;
create table test (i integer);
insert into test values (1000000), (250000), (750000), (500000);
select * from test order by i;
drop table test;
create table test (i uinteger);
insert into test values (1000000), (250000), (750000), (500000);
select * from test order by i;
drop table test;
create table test (i bigint);
insert into test values (1000000), (250000), (750000), (500000);
select * from test order by i;
drop table test;
create table test (i ubigint);
insert into test values (1000000), (250000), (750000), (500000);
select * from test order by i;
drop table test;
create table test (i hugeint);
insert into test values (1000000), (250000), (750000), (500000);
select * from test order by i;
drop table test;
create table test (i uhugeint);
insert into test values (1000000), (250000), (750000), (500000);
select * from test order by i;
drop table test;
create table test (i bigint);
insert into test values (1000000000), (250000000), (750000000), (500000000);
select * from test order by i;
drop table test;
create table test (i ubigint);
insert into test values (1000000000), (250000000), (750000000), (500000000);
select * from test order by i;
drop table test;
create table test (i hugeint);
insert into test values (1000000000), (250000000), (750000000), (500000000);
select * from test order by i;
drop table test;
create table test (i uhugeint);
insert into test values (1000000000), (250000000), (750000000), (500000000);
select * from test order by i;
drop table test;
create table test (i hugeint);
insert into test values (295147905179352825856), (73786976294838206464), (147573952589676412928), (36893488147419103232);
select * from test order by i;
drop table test;
PRAGMA enable_verification;
CREATE TABLE integers(i INTEGER, j INTEGER);
INSERT INTO integers VALUES (1, 1), (3, 3);
CREATE TABLE integers2(k INTEGER, l INTEGER);
INSERT INTO integers2 VALUES (1, 10), (2, 20);
SELECT i, j, k, l FROM integers FULL OUTER JOIN integers2 ON integers.i=integers2.k ORDER BY ALL LIMIT 2;
SELECT COUNT(*) FROM (SELECT i, j, k, l FROM integers FULL OUTER JOIN integers2 ON integers.i=integers2.k LIMIT 2) tbl;
PRAGMA enable_verification;
CREATE TABLE test (a INTEGER, b INTEGER);
INSERT INTO test VALUES (11, 22), (12, 21), (13, 22);
SELECT a FROM test ORDER BY 2;
SELECT a FROM test ORDER BY 'hello', a;
SELECT a AS k, b FROM test UNION SELECT a, b AS k FROM test ORDER BY k;
SELECT a AS k, b FROM test UNION SELECT a AS k, b FROM test ORDER BY k;
SELECT a % 2, b FROM test UNION SELECT b, a % 2 AS k ORDER BY a % 2;
SELECT a % 2, b FROM test UNION SELECT a % 2 AS k, b FROM test ORDER BY a % 2;
SELECT a % 2, b FROM test UNION SELECT a % 2 AS k, b FROM test ORDER BY 3;
SELECT a % 2, b FROM test UNION SELECT a % 2 AS k, b FROM test ORDER BY -1;
SELECT a % 2, b FROM test UNION SELECT a % 2 AS k FROM test ORDER BY -1;
PRAGMA disable_checkpoint_on_shutdown;
PRAGMA wal_autocheckpoint='1TB';
pragma verify_parallelism;
create table integers as select range i from range(100000) order by random();
create table sorted_integers as select i from integers order by i;
select * FROM sorted_integers QUALIFY NOT (i>lag(i) over () OR lag(i) OVER () IS NULL);
drop table sorted_integers;
create table sorted_integers as select i from integers order by i;
select * FROM sorted_integers QUALIFY NOT (i>lag(i) over () OR lag(i) OVER () IS NULL);
drop table sorted_integers;
create table sorted_integers as select i from integers order by i;
select * FROM sorted_integers QUALIFY NOT (i>lag(i) over () OR lag(i) OVER () IS NULL);
drop table sorted_integers;
create table sorted_integers as select i from integers order by i;
select * FROM sorted_integers QUALIFY NOT (i>lag(i) over () OR lag(i) OVER () IS NULL);
drop table sorted_integers;
create table sorted_integers as select i from integers order by i;
select * FROM sorted_integers QUALIFY NOT (i>lag(i) over () OR lag(i) OVER () IS NULL);
drop table sorted_integers;
create table sorted_integers as select i from integers order by i;
select * FROM sorted_integers QUALIFY NOT (i>lag(i) over () OR lag(i) OVER () IS NULL);
drop table sorted_integers;
create table sorted_integers as select i from integers order by i;
select * FROM sorted_integers QUALIFY NOT (i>lag(i) over () OR lag(i) OVER () IS NULL);
drop table sorted_integers;
create table sorted_integers as select i from integers order by i;
select * FROM sorted_integers QUALIFY NOT (i>lag(i) over () OR lag(i) OVER () IS NULL);
drop table sorted_integers;
create table sorted_integers as select i from integers order by i;
select * FROM sorted_integers QUALIFY NOT (i>lag(i) over () OR lag(i) OVER () IS NULL);
drop table sorted_integers;
create table sorted_integers as select i from integers order by i;
select * FROM sorted_integers QUALIFY NOT (i>lag(i) over () OR lag(i) OVER () IS NULL);
drop table sorted_integers;
create table sorted_integers as select i from integers order by i;
select * FROM sorted_integers QUALIFY NOT (i>lag(i) over () OR lag(i) OVER () IS NULL);
drop table sorted_integers;
create table sorted_integers as select i from integers order by i;
select * FROM sorted_integers QUALIFY NOT (i>lag(i) over () OR lag(i) OVER () IS NULL);
drop table sorted_integers;
create table sorted_integers as select i from integers order by i;
select * FROM sorted_integers QUALIFY NOT (i>lag(i) over () OR lag(i) OVER () IS NULL);
drop table sorted_integers;
create table sorted_integers as select i from integers order by i;
select * FROM sorted_integers QUALIFY NOT (i>lag(i) over () OR lag(i) OVER () IS NULL);
drop table sorted_integers;
create table sorted_integers as select i from integers order by i;
select * FROM sorted_integers QUALIFY NOT (i>lag(i) over () OR lag(i) OVER () IS NULL);
drop table sorted_integers;
create table sorted_integers as select i from integers order by i;
select * FROM sorted_integers QUALIFY NOT (i>lag(i) over () OR lag(i) OVER () IS NULL);
drop table sorted_integers;
create table sorted_integers as select i from integers order by i;
select * FROM sorted_integers QUALIFY NOT (i>lag(i) over () OR lag(i) OVER () IS NULL);
drop table sorted_integers;
create table sorted_integers as select i from integers order by i;
select * FROM sorted_integers QUALIFY NOT (i>lag(i) over () OR lag(i) OVER () IS NULL);
drop table sorted_integers;
create table sorted_integers as select i from integers order by i;
select * FROM sorted_integers QUALIFY NOT (i>lag(i) over () OR lag(i) OVER () IS NULL);
drop table sorted_integers;
create table sorted_integers as select i from integers order by i;
select * FROM sorted_integers QUALIFY NOT (i>lag(i) over () OR lag(i) OVER () IS NULL);
drop table sorted_integers;
create table sorted_integers as
with p1 as (
    select i from integers order by i
), p2 as (
    select i + 100000 from integers order by i
)
select * from p1 union all select * from p2;
select * FROM sorted_integers QUALIFY NOT (i>lag(i) over () OR lag(i) OVER () IS NULL);
drop table sorted_integers;
create table sorted_integers as
with p1 as (
    select i from integers order by i
), p2 as (
    select i + 100000 from integers order by i
)
select * from p1 union all select * from p2;
select * FROM sorted_integers QUALIFY NOT (i>lag(i) over () OR lag(i) OVER () IS NULL);
drop table sorted_integers;
create table sorted_integers as
with p1 as (
    select i from integers order by i
), p2 as (
    select i + 100000 from integers order by i
)
select * from p1 union all select * from p2;
select * FROM sorted_integers QUALIFY NOT (i>lag(i) over () OR lag(i) OVER () IS NULL);
drop table sorted_integers;
create table sorted_integers as
with p1 as (
    select i from integers order by i
), p2 as (
    select i + 100000 from integers order by i
)
select * from p1 union all select * from p2;
select * FROM sorted_integers QUALIFY NOT (i>lag(i) over () OR lag(i) OVER () IS NULL);
drop table sorted_integers;
create table sorted_integers as
with p1 as (
    select i from integers order by i
), p2 as (
    select i + 100000 from integers order by i
)
select * from p1 union all select * from p2;
select * FROM sorted_integers QUALIFY NOT (i>lag(i) over () OR lag(i) OVER () IS NULL);
drop table sorted_integers;
create table sorted_integers as
with p1 as (
    select i from integers order by i
), p2 as (
    select i + 100000 from integers order by i
)
select * from p1 union all select * from p2;
select * FROM sorted_integers QUALIFY NOT (i>lag(i) over () OR lag(i) OVER () IS NULL);
drop table sorted_integers;
create table sorted_integers as
with p1 as (
    select i from integers order by i
), p2 as (
    select i + 100000 from integers order by i
)
select * from p1 union all select * from p2;
select * FROM sorted_integers QUALIFY NOT (i>lag(i) over () OR lag(i) OVER () IS NULL);
drop table sorted_integers;
create table sorted_integers as
with p1 as (
    select i from integers order by i
), p2 as (
    select i + 100000 from integers order by i
)
select * from p1 union all select * from p2;
select * FROM sorted_integers QUALIFY NOT (i>lag(i) over () OR lag(i) OVER () IS NULL);
drop table sorted_integers;
create table sorted_integers as
with p1 as (
    select i from integers order by i
), p2 as (
    select i + 100000 from integers order by i
)
select * from p1 union all select * from p2;
select * FROM sorted_integers QUALIFY NOT (i>lag(i) over () OR lag(i) OVER () IS NULL);
drop table sorted_integers;
create table sorted_integers as
with p1 as (
    select i from integers order by i
), p2 as (
    select i + 100000 from integers order by i
)
select * from p1 union all select * from p2;
select * FROM sorted_integers QUALIFY NOT (i>lag(i) over () OR lag(i) OVER () IS NULL);
drop table sorted_integers;
create table sorted_integers as
with p1 as (
    select i from integers order by i
), p2 as (
    select i + 100000 from integers order by i
)
select * from p1 union all select * from p2;
select * FROM sorted_integers QUALIFY NOT (i>lag(i) over () OR lag(i) OVER () IS NULL);
drop table sorted_integers;
create table sorted_integers as
with p1 as (
    select i from integers order by i
), p2 as (
    select i + 100000 from integers order by i
)
select * from p1 union all select * from p2;
select * FROM sorted_integers QUALIFY NOT (i>lag(i) over () OR lag(i) OVER () IS NULL);
drop table sorted_integers;
create table sorted_integers as
with p1 as (
    select i from integers order by i
), p2 as (
    select i + 100000 from integers order by i
)
select * from p1 union all select * from p2;
select * FROM sorted_integers QUALIFY NOT (i>lag(i) over () OR lag(i) OVER () IS NULL);
drop table sorted_integers;
create table sorted_integers as
with p1 as (
    select i from integers order by i
), p2 as (
    select i + 100000 from integers order by i
)
select * from p1 union all select * from p2;
select * FROM sorted_integers QUALIFY NOT (i>lag(i) over () OR lag(i) OVER () IS NULL);
drop table sorted_integers;
create table sorted_integers as
with p1 as (
    select i from integers order by i
), p2 as (
    select i + 100000 from integers order by i
)
select * from p1 union all select * from p2;
select * FROM sorted_integers QUALIFY NOT (i>lag(i) over () OR lag(i) OVER () IS NULL);
drop table sorted_integers;
create table sorted_integers as
with p1 as (
    select i from integers order by i
), p2 as (
    select i + 100000 from integers order by i
)
select * from p1 union all select * from p2;
select * FROM sorted_integers QUALIFY NOT (i>lag(i) over () OR lag(i) OVER () IS NULL);
drop table sorted_integers;
create table sorted_integers as
with p1 as (
    select i from integers order by i
), p2 as (
    select i + 100000 from integers order by i
)
select * from p1 union all select * from p2;
select * FROM sorted_integers QUALIFY NOT (i>lag(i) over () OR lag(i) OVER () IS NULL);
drop table sorted_integers;
create table sorted_integers as
with p1 as (
    select i from integers order by i
), p2 as (
    select i + 100000 from integers order by i
)
select * from p1 union all select * from p2;
select * FROM sorted_integers QUALIFY NOT (i>lag(i) over () OR lag(i) OVER () IS NULL);
drop table sorted_integers;
create table sorted_integers as
with p1 as (
    select i from integers order by i
), p2 as (
    select i + 100000 from integers order by i
)
select * from p1 union all select * from p2;
select * FROM sorted_integers QUALIFY NOT (i>lag(i) over () OR lag(i) OVER () IS NULL);
drop table sorted_integers;
create table sorted_integers as
with p1 as (
    select i from integers order by i
), p2 as (
    select i + 100000 from integers order by i
)
select * from p1 union all select * from p2;
select * FROM sorted_integers QUALIFY NOT (i>lag(i) over () OR lag(i) OVER () IS NULL);
drop table sorted_integers;
CREATE TABLE tbl_structs AS SELECT
	{'a': 2.0, 'b': 'hello', 'c': [1, 2]} AS s1,
	1::BIGINT AS i,
	{'k': 1::TINYINT, 'j': 0::BOOL} AS s2;
INSERT INTO tbl_structs VALUES (
	{'a': 1.0, 'b': 'yay', 'c': [10, 20]},
	42,
	{'k': 2, 'j': 1});
SELECT UNNEST(s1), s1.a AS id FROM tbl_structs ORDER BY id;
SELECT s1, s1.a FROM tbl_structs ORDER BY 1;
SELECT UNNEST(s1), s1.a AS id FROM tbl_structs ORDER BY 1;
SELECT UNNEST(s1), UNNEST(s2), i FROM tbl_structs ORDER BY i;
SELECT UNNEST(s1), UNNEST(s2), i FROM tbl_structs ORDER BY 2 DESC;
SELECT i, UNNEST(s1), UNNEST(s2) FROM tbl_structs ORDER BY 5 DESC;
SET default_null_order='nulls_first';
PRAGMA enable_verification;
PRAGMA debug_force_external=true;
select range % 2 i, string_agg('thisstringis200characterslong..........................................................................................................................................................................') s from range(5000) group by i order by i;
create table t0 (c0 varchar);
insert into t0 values ('a'), (NULL), (NULL), (NULL), (NULL), (NULL), (NULL);
SELECT * FROM t0 ORDER BY t0.c0 DESC;
CREATE TABLE test0 (job VARCHAR, name VARCHAR);
INSERT INTO test0 VALUES ('Shipping and Receiving Supervisor', 'Ackerman'), ('Shipping and Receiving Clerk', 'Berndt'), ('Shipping and Receiving Clerk', 'Kuppa'), ('Production Supervisor - WC60', 'Brown'), ('Production Supervisor - WC60', 'Campbell'), ('Production Supervisor - WC40', 'Dsa');
SELECT * FROM test0 ORDER BY job, name;
SELECT * FROM test0 ORDER BY job DESC, name DESC;
CREATE TABLE test1 (s VARCHAR);
INSERT INTO test1 VALUES ('2'), (NULL), ('3555555555552'), ('1'), ('355555555556'), ('10'), ('3555555555553'), ('3555555555551');
SELECT * FROM test1 ORDER BY s;
CREATE TABLE test2 AS (SELECT CAST(range AS VARCHAR) r, random() rand FROM range(10000));
CREATE TABLE test2_1 AS (SELECT * FROM test2 ORDER BY r);
SELECT count(*) FROM test2_1;
CREATE TABLE test3 AS (SELECT CAST(range AS VARCHAR) r, random() rand FROM range(10000));
CREATE TABLE test3_1 AS (SELECT * FROM test3 ORDER BY rand);
SELECT count(*) FROM test3_1;
CREATE TABLE test4 (i INT, j INT);
INSERT INTO test4 VALUES (3, 3), (2, 3), (2, 2), (3, 2);
SELECT * FROM test4 ORDER BY cast(i AS VARCHAR), j;
SELECT * FROM test4 ORDER BY i, cast(j AS VARCHAR);
SELECT * FROM test4 ORDER BY cast(i AS VARCHAR), cast(j AS VARCHAR);
CREATE TABLE tpch_q1_agg (l_returnflag VARCHAR, l_linestatus VARCHAR, sum_qty INT, sum_base_price DOUBLE, sum_disc_price DOUBLE, sum_charge DOUBLE, avg_qty DOUBLE, avg_price DOUBLE, avg_disc DOUBLE, count_order BIGINT);
INSERT INTO tpch_q1_agg VALUES ('N', 'O', 7459297, 10512270008.90, 9986238338.3847, 10385578376.585467, 25.545537671232875, 36000.9246880137, 0.05009595890410959, 292000), ('R', 'F', 3785523, 5337950526.47, 5071818532.9420, 5274405503.049367, 25.5259438574251, 35994.029214030925, 0.04998927856184382, 148301), ('A', 'F', 3774200, 5320753880.69, 5054096266.6828, 5256751331.449234, 25.537587116854997, 36002.12382901414, 0.05014459706340077, 147790), ('N', 'F', 95257, 133737795.84, 127132372.6512, 132286291.229445, 25.30066401062417, 35521.32691633466, 0.04939442231075697, 3765);
SELECT * FROM tpch_q1_agg ORDER BY l_returnflag, l_linestatus;
create table test5 (i int, s varchar);
insert into test5 values (3, 'ababa'), (1, 'babab'), (NULL, 'abbab'), (2, NULL);
select i, list(string_split(s, 'b')) from test5 group by i order by i;
select i, struct_pack(i:=i, s:=s) from test5 order by i;
select i, struct_pack(i:=i, s:=string_split(s, 'b')) from test5 order by i;
select i, struct_pack(i:=i, s:=UNNEST(string_split(s, 'b'))) from test5 order by i;
select i, struct_pack(i:=i, s:=list(s)) from test5 group by i order by i;
select i, struct_pack(i:=i, s:=s) from test5 order by s;
select i, struct_pack(i:=i, s:=list(string_split(s, 'b'))) from test5 group by i order by i;
CREATE TABLE test6 (i1 INT, s1 VARCHAR, i2 int, s2 VARCHAR);
INSERT INTO test6 VALUES
(6, '0reallylongstring1', 3, '1reallylongstring8'),
(6, '0reallylongstring1', 3, '1reallylongstring7'),
(6, '0reallylongstring1', 4, '1reallylongstring8'),
(6, '0reallylongstring1', 4, '1reallylongstring7'),
(6, '0reallylongstring2', 3, '1reallylongstring8'),
(6, '0reallylongstring2', 3, '1reallylongstring7'),
(6, '0reallylongstring2', 4, '1reallylongstring8'),
(6, '0reallylongstring2', 4, '1reallylongstring7'),
(5, '0reallylongstring1', 3, '1reallylongstring8'),
(5, '0reallylongstring1', 3, '1reallylongstring7'),
(5, '0reallylongstring1', 4, '1reallylongstring8'),
(5, '0reallylongstring1', 4, '1reallylongstring7'),
(5, '0reallylongstring2', 3, '1reallylongstring8'),
(5, '0reallylongstring2', 3, '1reallylongstring7'),
(5, '0reallylongstring2', 4, '1reallylongstring8'),
(5, '0reallylongstring2', 4, '1reallylongstring7');
SELECT i1, s1, i2, s2 FROM test6 ORDER BY i1, s1, i2, s2;
SELECT s1, i1, i2, s2 FROM test6 ORDER BY s1, i1, i2, s2;
SELECT s1, i1, s2, i2 FROM test6 ORDER BY s1, i1, s2, i2;
SELECT s1, s2, i1, i2 FROM test6 ORDER BY s1, s2, i1, i2;
SELECT i1, i2, s1, s2 FROM test6 ORDER BY i1, i2, s1, s2;
SELECT s1, s2, i1, i2 FROM test6 ORDER BY i2 DESC, s1, s2, i1;
create table test7 (p_brand VARCHAR, p_type VARCHAR, p_size INT, supplier_cnt BIGINT);
insert into test7 values ('Brand#11', 'ECONOMY BRUSHED COPPER', 3, 4), ('Brand#11', 'ECONOMY BRUSHED COPPER', 9, 4), ('Brand#11', 'ECONOMY BRUSHED STEEL', 36, 4), ('Brand#11', 'ECONOMY BRUSHED STEEL', 9, 4), ('Brand#11', 'ECONOMY BURNISHED BRASS', 36, 4), ('Brand#11', 'ECONOMY BURNISHED COPPER', 49, 4), ('Brand#11', 'ECONOMY BURNISHED COPPER', 9, 4), ('Brand#11', 'ECONOMY BURNISHED NICKEL', 14, 4), ('Brand#11', 'ECONOMY BURNISHED NICKEL', 49, 4);
SELECT p_brand, p_type, p_size, supplier_cnt FROM test7 ORDER BY supplier_cnt DESC, p_brand, p_type, p_size;
create table test8 (i int, s varchar);
insert into test8 values (3, 'aba'), (1, 'ccbcc'), (NULL, 'dbdbd'), (2, NULL);
select i, string_split(s, 'b') from test8 order by i;
select i, list(s) from test8 group by i order by i;
select i, list(string_split(s, 'b')) from test8 group by i order by i;
PRAGMA threads=1;
CREATE TABLE test9 AS (SELECT range % 4 i, range j FROM range(5000));
INSERT INTO test9 VALUES (0, NULL), (1, NULL), (2, NULL), (3, NULL);
SELECT i, list(j) FROM test9 GROUP BY i ORDER BY i;
CREATE TABLE DirectReports
(
    EmployeeID smallint,
    Name varchar NOT NULL,
    Title varchar NOT NULL,
    EmployeeLevel int NOT NULL,
    Sort varchar NOT NULL
);
INSERT INTO DirectReports VALUES
(1, 'Ken Sánchez', 'Chief Executive Officer', 1, 'Ken Sánchez'),
(273, '>Brian Welcker', 'Vice President of Sales', 2, 'Ken Sánchez>Brian Welcker'),
(274, '>>Stephen Jiang', 'North American Sales Manager', 3, 'Ken Sánchez>Brian Welcker>Stephen Jiang'),
(285, '>>Syed Abbas', 'Pacific Sales Manager', 3, 'Ken Sánchez>Brian Welcker>Syed Abbas'),
(16, '>>David Bradley', 'Marketing Manager', 3, 'Ken Sánchez>Brian Welcker>David Bradley'),
(275, '>>>Michael Blythe', 'Sales Representative', 4, 'Ken Sánchez>Brian Welcker>Stephen Jiang>Michael Blythe'),
(276, '>>>Linda Mitchell', 'Sales Representative', 4, 'Ken Sánchez>Brian Welcker>Stephen Jiang>Linda Mitchell'),
(286, '>>>Lynn Tsoflias', 'Sales Representative', 4, 'Ken Sánchez>Brian Welcker>Syed Abbas>Lynn Tsoflias'),
(23, '>>>Mary Gibson', 'Marketing Specialist', 4, 'Ken Sánchez>Brian Welcker>David Bradley>Mary Gibson');
SELECT EmployeeID, Name, Title, EmployeeLevel
FROM DirectReports
ORDER BY Sort, EmployeeID;
DROP TABLE t0;
DROP TABLE test0;
DROP TABLE test1;
DROP TABLE test2;
DROP TABLE test2_1;
DROP TABLE test3;
DROP TABLE test3_1;
DROP TABLE test4;
DROP TABLE tpch_q1_agg;
DROP table test5;
DROP TABLE test6;
DROP table test7;
DROP table test8;
DROP TABLE test9;
DROP TABLE DirectReports;
PRAGMA debug_force_external=false;
select range % 2 i, string_agg('thisstringis200characterslong..........................................................................................................................................................................') s from range(5000) group by i order by i;
create table t0 (c0 varchar);
insert into t0 values ('a'), (NULL), (NULL), (NULL), (NULL), (NULL), (NULL);
SELECT * FROM t0 ORDER BY t0.c0 DESC;
CREATE TABLE test0 (job VARCHAR, name VARCHAR);
INSERT INTO test0 VALUES ('Shipping and Receiving Supervisor', 'Ackerman'), ('Shipping and Receiving Clerk', 'Berndt'), ('Shipping and Receiving Clerk', 'Kuppa'), ('Production Supervisor - WC60', 'Brown'), ('Production Supervisor - WC60', 'Campbell'), ('Production Supervisor - WC40', 'Dsa');
SELECT * FROM test0 ORDER BY job, name;
SELECT * FROM test0 ORDER BY job DESC, name DESC;
CREATE TABLE test1 (s VARCHAR);
INSERT INTO test1 VALUES ('2'), (NULL), ('3555555555552'), ('1'), ('355555555556'), ('10'), ('3555555555553'), ('3555555555551');
SELECT * FROM test1 ORDER BY s;
CREATE TABLE test2 AS (SELECT CAST(range AS VARCHAR) r, random() rand FROM range(10000));
CREATE TABLE test2_1 AS (SELECT * FROM test2 ORDER BY r);
SELECT count(*) FROM test2_1;
CREATE TABLE test3 AS (SELECT CAST(range AS VARCHAR) r, random() rand FROM range(10000));
CREATE TABLE test3_1 AS (SELECT * FROM test3 ORDER BY rand);
SELECT count(*) FROM test3_1;
CREATE TABLE test4 (i INT, j INT);
INSERT INTO test4 VALUES (3, 3), (2, 3), (2, 2), (3, 2);
SELECT * FROM test4 ORDER BY cast(i AS VARCHAR), j;
SELECT * FROM test4 ORDER BY i, cast(j AS VARCHAR);
SELECT * FROM test4 ORDER BY cast(i AS VARCHAR), cast(j AS VARCHAR);
CREATE TABLE tpch_q1_agg (l_returnflag VARCHAR, l_linestatus VARCHAR, sum_qty INT, sum_base_price DOUBLE, sum_disc_price DOUBLE, sum_charge DOUBLE, avg_qty DOUBLE, avg_price DOUBLE, avg_disc DOUBLE, count_order BIGINT);
INSERT INTO tpch_q1_agg VALUES ('N', 'O', 7459297, 10512270008.90, 9986238338.3847, 10385578376.585467, 25.545537671232875, 36000.9246880137, 0.05009595890410959, 292000), ('R', 'F', 3785523, 5337950526.47, 5071818532.9420, 5274405503.049367, 25.5259438574251, 35994.029214030925, 0.04998927856184382, 148301), ('A', 'F', 3774200, 5320753880.69, 5054096266.6828, 5256751331.449234, 25.537587116854997, 36002.12382901414, 0.05014459706340077, 147790), ('N', 'F', 95257, 133737795.84, 127132372.6512, 132286291.229445, 25.30066401062417, 35521.32691633466, 0.04939442231075697, 3765);
SELECT * FROM tpch_q1_agg ORDER BY l_returnflag, l_linestatus;
create table test5 (i int, s varchar);
insert into test5 values (3, 'ababa'), (1, 'babab'), (NULL, 'abbab'), (2, NULL);
select i, list(string_split(s, 'b')) from test5 group by i order by i;
select i, struct_pack(i:=i, s:=s) from test5 order by i;
select i, struct_pack(i:=i, s:=string_split(s, 'b')) from test5 order by i;
select i, struct_pack(i:=i, s:=UNNEST(string_split(s, 'b'))) from test5 order by i;
select i, struct_pack(i:=i, s:=list(s)) from test5 group by i order by i;
select i, struct_pack(i:=i, s:=s) from test5 order by s;
select i, struct_pack(i:=i, s:=list(string_split(s, 'b'))) from test5 group by i order by i;
CREATE TABLE test6 (i1 INT, s1 VARCHAR, i2 int, s2 VARCHAR);
INSERT INTO test6 VALUES
(6, '0reallylongstring1', 3, '1reallylongstring8'),
(6, '0reallylongstring1', 3, '1reallylongstring7'),
(6, '0reallylongstring1', 4, '1reallylongstring8'),
(6, '0reallylongstring1', 4, '1reallylongstring7'),
(6, '0reallylongstring2', 3, '1reallylongstring8'),
(6, '0reallylongstring2', 3, '1reallylongstring7'),
(6, '0reallylongstring2', 4, '1reallylongstring8'),
(6, '0reallylongstring2', 4, '1reallylongstring7'),
(5, '0reallylongstring1', 3, '1reallylongstring8'),
(5, '0reallylongstring1', 3, '1reallylongstring7'),
(5, '0reallylongstring1', 4, '1reallylongstring8'),
(5, '0reallylongstring1', 4, '1reallylongstring7'),
(5, '0reallylongstring2', 3, '1reallylongstring8'),
(5, '0reallylongstring2', 3, '1reallylongstring7'),
(5, '0reallylongstring2', 4, '1reallylongstring8'),
(5, '0reallylongstring2', 4, '1reallylongstring7');
SELECT i1, s1, i2, s2 FROM test6 ORDER BY i1, s1, i2, s2;
SELECT s1, i1, i2, s2 FROM test6 ORDER BY s1, i1, i2, s2;
SELECT s1, i1, s2, i2 FROM test6 ORDER BY s1, i1, s2, i2;
SELECT s1, s2, i1, i2 FROM test6 ORDER BY s1, s2, i1, i2;
SELECT i1, i2, s1, s2 FROM test6 ORDER BY i1, i2, s1, s2;
SELECT s1, s2, i1, i2 FROM test6 ORDER BY i2 DESC, s1, s2, i1;
create table test7 (p_brand VARCHAR, p_type VARCHAR, p_size INT, supplier_cnt BIGINT);
insert into test7 values ('Brand#11', 'ECONOMY BRUSHED COPPER', 3, 4), ('Brand#11', 'ECONOMY BRUSHED COPPER', 9, 4), ('Brand#11', 'ECONOMY BRUSHED STEEL', 36, 4), ('Brand#11', 'ECONOMY BRUSHED STEEL', 9, 4), ('Brand#11', 'ECONOMY BURNISHED BRASS', 36, 4), ('Brand#11', 'ECONOMY BURNISHED COPPER', 49, 4), ('Brand#11', 'ECONOMY BURNISHED COPPER', 9, 4), ('Brand#11', 'ECONOMY BURNISHED NICKEL', 14, 4), ('Brand#11', 'ECONOMY BURNISHED NICKEL', 49, 4);
SELECT p_brand, p_type, p_size, supplier_cnt FROM test7 ORDER BY supplier_cnt DESC, p_brand, p_type, p_size;
create table test8 (i int, s varchar);
insert into test8 values (3, 'aba'), (1, 'ccbcc'), (NULL, 'dbdbd'), (2, NULL);
select i, string_split(s, 'b') from test8 order by i;
select i, list(s) from test8 group by i order by i;
select i, list(string_split(s, 'b')) from test8 group by i order by i;
PRAGMA threads=1;
CREATE TABLE test9 AS (SELECT range % 4 i, range j FROM range(5000));
INSERT INTO test9 VALUES (0, NULL), (1, NULL), (2, NULL), (3, NULL);
SELECT i, list(j) FROM test9 GROUP BY i ORDER BY i;
CREATE TABLE DirectReports
(
    EmployeeID smallint,
    Name varchar NOT NULL,
    Title varchar NOT NULL,
    EmployeeLevel int NOT NULL,
    Sort varchar NOT NULL
);
INSERT INTO DirectReports VALUES
(1, 'Ken Sánchez', 'Chief Executive Officer', 1, 'Ken Sánchez'),
(273, '>Brian Welcker', 'Vice President of Sales', 2, 'Ken Sánchez>Brian Welcker'),
(274, '>>Stephen Jiang', 'North American Sales Manager', 3, 'Ken Sánchez>Brian Welcker>Stephen Jiang'),
(285, '>>Syed Abbas', 'Pacific Sales Manager', 3, 'Ken Sánchez>Brian Welcker>Syed Abbas'),
(16, '>>David Bradley', 'Marketing Manager', 3, 'Ken Sánchez>Brian Welcker>David Bradley'),
(275, '>>>Michael Blythe', 'Sales Representative', 4, 'Ken Sánchez>Brian Welcker>Stephen Jiang>Michael Blythe'),
(276, '>>>Linda Mitchell', 'Sales Representative', 4, 'Ken Sánchez>Brian Welcker>Stephen Jiang>Linda Mitchell'),
(286, '>>>Lynn Tsoflias', 'Sales Representative', 4, 'Ken Sánchez>Brian Welcker>Syed Abbas>Lynn Tsoflias'),
(23, '>>>Mary Gibson', 'Marketing Specialist', 4, 'Ken Sánchez>Brian Welcker>David Bradley>Mary Gibson');
SELECT EmployeeID, Name, Title, EmployeeLevel
FROM DirectReports
ORDER BY Sort, EmployeeID;
DROP TABLE t0;
DROP TABLE test0;
DROP TABLE test1;
DROP TABLE test2;
DROP TABLE test2_1;
DROP TABLE test3;
DROP TABLE test3_1;
DROP TABLE test4;
DROP TABLE tpch_q1_agg;
DROP table test5;
DROP TABLE test6;
DROP table test7;
DROP table test8;
DROP TABLE test9;
DROP TABLE DirectReports;
PRAGMA debug_force_external=false;
SET default_null_order='nulls_first';
SET default_null_order='nulls_first';
PRAGMA enable_verification;
PRAGMA debug_force_external=true;
CREATE TABLE test0 (i tinyint[]);
INSERT INTO test0 VALUES ([2]), ([1]), ([1, 2]), ([]), ([2, 2]), ([NULL]), ([2, 3]);
SELECT * FROM test0 ORDER BY i;
SELECT * FROM test0 ORDER BY i DESC;
INSERT INTO test0 VALUES (NULL);
SELECT * FROM test0 ORDER BY i;
SELECT * FROM test0 ORDER BY i NULLS LAST;
SELECT * FROM test0 ORDER BY i DESC;
SELECT * FROM test0 ORDER BY i DESC NULLS LAST;
CREATE TABLE test2 (i tinyint[][]);
INSERT INTO test2 VALUES ([[2]]), ([[1]]), ([NULL, []]), ([[1], [2]]), ([]), ([[]]), ([[2], [2]]), ([NULL]), (NULL), ([[2], [3]]);
SELECT * FROM test2 ORDER BY i;
SELECT * FROM test2 ORDER BY i DESC;
CREATE TABLE test3 (i tinyint[][]);
INSERT INTO test3 VALUES ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], []]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [5, 5, 5, 5, 1]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [5, 5, 5, 5, NULL]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [5, 5, 5, 5, 2]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [NULL]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], NULL]);
SELECT * FROM test3 ORDER BY i;
SELECT * FROM test3 ORDER BY i DESC;
CREATE TABLE test4 (i tinyint[][]);
INSERT INTO test4 VALUES ([[NULL, NULL, 0], [1, NULL, 1]]), ([[NULL, NULL, 1]]), ([[NULL, NULL, 0], [1, NULL, 0]]), ([[0, NULL, NULL, 1]]), ([[0, NULL, NULL, 0]]);
SELECT * FROM test4 ORDER BY i;
SELECT * FROM test4 ORDER BY i DESC;
CREATE TABLE test10 (s STRUCT(i tinyint, j tinyint));
INSERT INTO test10 values
({'i': 2, 'j': NULL}),
({'i': 1, 'j': NULL}),
({'i': 2, 'j': 3}),
({'i': 1, 'j': 2}),
({'i': 2, 'j': 2}),
({'i': NULL, 'j': NULL}),
(NULL),
({'i': 2, 'j': 3});
SELECT * FROM test10 ORDER BY s;
SELECT * FROM test10 ORDER BY s DESC;
CREATE TABLE test11 (s STRUCT(s1 STRUCT(i tinyint, j tinyint)));
INSERT INTO test11 VALUES ({'s1': NULL}), (NULL), ({'s1': {'i': NULL, 'j': 1}}), ({'s1': {'i': 0, 'j': NULL}}), ({'s1': {'i': NULL, 'j': NULL}}), ({'s1': {'i': 0, 'j': 1}});
SELECT * FROM test11 ORDER BY s;
SELECT * FROM test11 ORDER BY s DESC;
CREATE TABLE test13 (s STRUCT(a tinyint, b tinyint, c tinyint, d tinyint, e tinyint, f tinyint, g tinyint, h tinyint, i tinyint, j tinyint));
INSERT INTO test13 VALUES
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': 7, 'i': 8, 'j': 8}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': 7, 'i': 8, 'j': 9}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': NULL, 'f': NULL, 'g': NULL, 'h': NULL, 'i': 8, 'j': 8}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': NULL, 'f': NULL, 'g': NULL, 'h': NULL, 'i': 8, 'j': 9}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': NULL, 'i': NULL, 'j': 8}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': NULL, 'i': NULL, 'j': 9});
SELECT * FROM test13 ORDER BY s;
SELECT * FROM test13 ORDER BY s DESC;
CREATE TABLE test20 (l STRUCT(i tinyint)[]);
INSERT INTO test20 VALUES
([{'i': NULL}, {'i': NULL}, {'i': 0}, {'i': NULL}, {'i': NULL}, {'i': 0}]),
([{'i': NULL}, {'i': NULL}, {'i': 0}, {'i': NULL}, {'i': NULL}, {'i': 1}]),
([{'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': 1}]),
([{'i': NULL}, {'i': NULL}, {'i': 0}, {'i': NULL}, {'i': NULL}, {'i': NULL}]),
([{'i': NULL}, {'i': NULL}, {'i': 1}, {'i': NULL}, {'i': NULL}, {'i': 0}]),
([{'i': NULL}, {'i': NULL}, {'i': 1}, {'i': NULL}, {'i': NULL}, {'i': 1}]),
([{'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': 0}]),
([{'i': NULL}, {'i': NULL}, {'i': 1}, {'i': NULL}, {'i': NULL}, {'i': NULL}]);
SELECT * FROM test20 ORDER BY l;
SELECT * FROM test20 ORDER BY l DESC;
CREATE TABLE test22 (s STRUCT(i tinyint[], j tinyint[]));
INSERT INTO test22 VALUES
({'i': [0, NULL], 'j': [NULL, 0]}),
({'i': [0, NULL], 'j': [NULL, 1]}),
({'i': [0, NULL], 'j': [1, 2]}),
({'i': [1, NULL], 'j': [2, NULL]}),
({'i': [0, 2], 'j': [2, NULL]}),
({'i': NULL, 'j': [2, NULL]}),
({'i': [0, 2], 'j': NULL}),
({'i': NULL, 'j': [2, 3]});
SELECT * FROM test22 ORDER BY s;
SELECT * FROM test22 ORDER BY s DESC;
CREATE TABLE test24 (l STRUCT(l1 STRUCT(i tinyint)[])[]);
INSERT INTO test24 VALUES
([{'l1': [{'i': 0}]}, {'l1': [{'i': 0}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': 1}, {'i': 2}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': 1}, {'i': 1}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': 0}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': NULL}]}, {'l1': [{'i': 0}]}]),
([{'l1': [{'i': NULL}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': NULL}]}, {'l1': [{'i': NULL}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': NULL}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': NULL}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': NULL}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': NULL}]}, {'l1': [{'i': NULL}]}]);
SELECT * FROM test24 ORDER BY l;
SELECT * FROM test24 ORDER BY l DESC;
DROP TABLE test0;
DROP TABLE test2;
DROP TABLE test3;
DROP TABLE test4;
DROP TABLE test10;
DROP TABLE test11;
DROP TABLE test13;
DROP TABLE test20;
DROP TABLE test22;
DROP TABLE test24;
PRAGMA debug_force_external=false;
CREATE TABLE test0 (i smallint[]);
INSERT INTO test0 VALUES ([2]), ([1]), ([1, 2]), ([]), ([2, 2]), ([NULL]), ([2, 3]);
SELECT * FROM test0 ORDER BY i;
SELECT * FROM test0 ORDER BY i DESC;
INSERT INTO test0 VALUES (NULL);
SELECT * FROM test0 ORDER BY i;
SELECT * FROM test0 ORDER BY i NULLS LAST;
SELECT * FROM test0 ORDER BY i DESC;
SELECT * FROM test0 ORDER BY i DESC NULLS LAST;
CREATE TABLE test2 (i smallint[][]);
INSERT INTO test2 VALUES ([[2]]), ([[1]]), ([NULL, []]), ([[1], [2]]), ([]), ([[]]), ([[2], [2]]), ([NULL]), (NULL), ([[2], [3]]);
SELECT * FROM test2 ORDER BY i;
SELECT * FROM test2 ORDER BY i DESC;
CREATE TABLE test3 (i smallint[][]);
INSERT INTO test3 VALUES ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], []]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [5, 5, 5, 5, 1]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [5, 5, 5, 5, NULL]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [5, 5, 5, 5, 2]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [NULL]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], NULL]);
SELECT * FROM test3 ORDER BY i;
SELECT * FROM test3 ORDER BY i DESC;
CREATE TABLE test4 (i smallint[][]);
INSERT INTO test4 VALUES ([[NULL, NULL, 0], [1, NULL, 1]]), ([[NULL, NULL, 1]]), ([[NULL, NULL, 0], [1, NULL, 0]]), ([[0, NULL, NULL, 1]]), ([[0, NULL, NULL, 0]]);
SELECT * FROM test4 ORDER BY i;
SELECT * FROM test4 ORDER BY i DESC;
CREATE TABLE test10 (s STRUCT(i smallint, j smallint));
INSERT INTO test10 values
({'i': 2, 'j': NULL}),
({'i': 1, 'j': NULL}),
({'i': 2, 'j': 3}),
({'i': 1, 'j': 2}),
({'i': 2, 'j': 2}),
({'i': NULL, 'j': NULL}),
(NULL),
({'i': 2, 'j': 3});
SELECT * FROM test10 ORDER BY s;
SELECT * FROM test10 ORDER BY s DESC;
CREATE TABLE test11 (s STRUCT(s1 STRUCT(i smallint, j smallint)));
INSERT INTO test11 VALUES ({'s1': NULL}), (NULL), ({'s1': {'i': NULL, 'j': 1}}), ({'s1': {'i': 0, 'j': NULL}}), ({'s1': {'i': NULL, 'j': NULL}}), ({'s1': {'i': 0, 'j': 1}});
SELECT * FROM test11 ORDER BY s;
SELECT * FROM test11 ORDER BY s DESC;
CREATE TABLE test13 (s STRUCT(a smallint, b smallint, c smallint, d smallint, e smallint, f smallint, g smallint, h smallint, i smallint, j smallint));
INSERT INTO test13 VALUES
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': 7, 'i': 8, 'j': 8}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': 7, 'i': 8, 'j': 9}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': NULL, 'f': NULL, 'g': NULL, 'h': NULL, 'i': 8, 'j': 8}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': NULL, 'f': NULL, 'g': NULL, 'h': NULL, 'i': 8, 'j': 9}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': NULL, 'i': NULL, 'j': 8}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': NULL, 'i': NULL, 'j': 9});
SELECT * FROM test13 ORDER BY s;
SELECT * FROM test13 ORDER BY s DESC;
CREATE TABLE test20 (l STRUCT(i smallint)[]);
INSERT INTO test20 VALUES
([{'i': NULL}, {'i': NULL}, {'i': 0}, {'i': NULL}, {'i': NULL}, {'i': 0}]),
([{'i': NULL}, {'i': NULL}, {'i': 0}, {'i': NULL}, {'i': NULL}, {'i': 1}]),
([{'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': 1}]),
([{'i': NULL}, {'i': NULL}, {'i': 0}, {'i': NULL}, {'i': NULL}, {'i': NULL}]),
([{'i': NULL}, {'i': NULL}, {'i': 1}, {'i': NULL}, {'i': NULL}, {'i': 0}]),
([{'i': NULL}, {'i': NULL}, {'i': 1}, {'i': NULL}, {'i': NULL}, {'i': 1}]),
([{'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': 0}]),
([{'i': NULL}, {'i': NULL}, {'i': 1}, {'i': NULL}, {'i': NULL}, {'i': NULL}]);
SELECT * FROM test20 ORDER BY l;
SELECT * FROM test20 ORDER BY l DESC;
CREATE TABLE test22 (s STRUCT(i smallint[], j smallint[]));
INSERT INTO test22 VALUES
({'i': [0, NULL], 'j': [NULL, 0]}),
({'i': [0, NULL], 'j': [NULL, 1]}),
({'i': [0, NULL], 'j': [1, 2]}),
({'i': [1, NULL], 'j': [2, NULL]}),
({'i': [0, 2], 'j': [2, NULL]}),
({'i': NULL, 'j': [2, NULL]}),
({'i': [0, 2], 'j': NULL}),
({'i': NULL, 'j': [2, 3]});
SELECT * FROM test22 ORDER BY s;
SELECT * FROM test22 ORDER BY s DESC;
CREATE TABLE test24 (l STRUCT(l1 STRUCT(i smallint)[])[]);
INSERT INTO test24 VALUES
([{'l1': [{'i': 0}]}, {'l1': [{'i': 0}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': 1}, {'i': 2}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': 1}, {'i': 1}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': 0}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': NULL}]}, {'l1': [{'i': 0}]}]),
([{'l1': [{'i': NULL}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': NULL}]}, {'l1': [{'i': NULL}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': NULL}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': NULL}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': NULL}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': NULL}]}, {'l1': [{'i': NULL}]}]);
SELECT * FROM test24 ORDER BY l;
SELECT * FROM test24 ORDER BY l DESC;
DROP TABLE test0;
DROP TABLE test2;
DROP TABLE test3;
DROP TABLE test4;
DROP TABLE test10;
DROP TABLE test11;
DROP TABLE test13;
DROP TABLE test20;
DROP TABLE test22;
DROP TABLE test24;
PRAGMA debug_force_external=false;
CREATE TABLE test0 (i integer[]);
INSERT INTO test0 VALUES ([2]), ([1]), ([1, 2]), ([]), ([2, 2]), ([NULL]), ([2, 3]);
SELECT * FROM test0 ORDER BY i;
SELECT * FROM test0 ORDER BY i DESC;
INSERT INTO test0 VALUES (NULL);
SELECT * FROM test0 ORDER BY i;
SELECT * FROM test0 ORDER BY i NULLS LAST;
SELECT * FROM test0 ORDER BY i DESC;
SELECT * FROM test0 ORDER BY i DESC NULLS LAST;
CREATE TABLE test2 (i integer[][]);
INSERT INTO test2 VALUES ([[2]]), ([[1]]), ([NULL, []]), ([[1], [2]]), ([]), ([[]]), ([[2], [2]]), ([NULL]), (NULL), ([[2], [3]]);
SELECT * FROM test2 ORDER BY i;
SELECT * FROM test2 ORDER BY i DESC;
CREATE TABLE test3 (i integer[][]);
INSERT INTO test3 VALUES ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], []]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [5, 5, 5, 5, 1]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [5, 5, 5, 5, NULL]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [5, 5, 5, 5, 2]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [NULL]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], NULL]);
SELECT * FROM test3 ORDER BY i;
SELECT * FROM test3 ORDER BY i DESC;
CREATE TABLE test4 (i integer[][]);
INSERT INTO test4 VALUES ([[NULL, NULL, 0], [1, NULL, 1]]), ([[NULL, NULL, 1]]), ([[NULL, NULL, 0], [1, NULL, 0]]), ([[0, NULL, NULL, 1]]), ([[0, NULL, NULL, 0]]);
SELECT * FROM test4 ORDER BY i;
SELECT * FROM test4 ORDER BY i DESC;
CREATE TABLE test10 (s STRUCT(i integer, j integer));
INSERT INTO test10 values
({'i': 2, 'j': NULL}),
({'i': 1, 'j': NULL}),
({'i': 2, 'j': 3}),
({'i': 1, 'j': 2}),
({'i': 2, 'j': 2}),
({'i': NULL, 'j': NULL}),
(NULL),
({'i': 2, 'j': 3});
SELECT * FROM test10 ORDER BY s;
SELECT * FROM test10 ORDER BY s DESC;
CREATE TABLE test11 (s STRUCT(s1 STRUCT(i integer, j integer)));
INSERT INTO test11 VALUES ({'s1': NULL}), (NULL), ({'s1': {'i': NULL, 'j': 1}}), ({'s1': {'i': 0, 'j': NULL}}), ({'s1': {'i': NULL, 'j': NULL}}), ({'s1': {'i': 0, 'j': 1}});
SELECT * FROM test11 ORDER BY s;
SELECT * FROM test11 ORDER BY s DESC;
CREATE TABLE test13 (s STRUCT(a integer, b integer, c integer, d integer, e integer, f integer, g integer, h integer, i integer, j integer));
INSERT INTO test13 VALUES
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': 7, 'i': 8, 'j': 8}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': 7, 'i': 8, 'j': 9}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': NULL, 'f': NULL, 'g': NULL, 'h': NULL, 'i': 8, 'j': 8}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': NULL, 'f': NULL, 'g': NULL, 'h': NULL, 'i': 8, 'j': 9}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': NULL, 'i': NULL, 'j': 8}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': NULL, 'i': NULL, 'j': 9});
SELECT * FROM test13 ORDER BY s;
SELECT * FROM test13 ORDER BY s DESC;
CREATE TABLE test20 (l STRUCT(i integer)[]);
INSERT INTO test20 VALUES
([{'i': NULL}, {'i': NULL}, {'i': 0}, {'i': NULL}, {'i': NULL}, {'i': 0}]),
([{'i': NULL}, {'i': NULL}, {'i': 0}, {'i': NULL}, {'i': NULL}, {'i': 1}]),
([{'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': 1}]),
([{'i': NULL}, {'i': NULL}, {'i': 0}, {'i': NULL}, {'i': NULL}, {'i': NULL}]),
([{'i': NULL}, {'i': NULL}, {'i': 1}, {'i': NULL}, {'i': NULL}, {'i': 0}]),
([{'i': NULL}, {'i': NULL}, {'i': 1}, {'i': NULL}, {'i': NULL}, {'i': 1}]),
([{'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': 0}]),
([{'i': NULL}, {'i': NULL}, {'i': 1}, {'i': NULL}, {'i': NULL}, {'i': NULL}]);
SELECT * FROM test20 ORDER BY l;
SELECT * FROM test20 ORDER BY l DESC;
CREATE TABLE test22 (s STRUCT(i integer[], j integer[]));
INSERT INTO test22 VALUES
({'i': [0, NULL], 'j': [NULL, 0]}),
({'i': [0, NULL], 'j': [NULL, 1]}),
({'i': [0, NULL], 'j': [1, 2]}),
({'i': [1, NULL], 'j': [2, NULL]}),
({'i': [0, 2], 'j': [2, NULL]}),
({'i': NULL, 'j': [2, NULL]}),
({'i': [0, 2], 'j': NULL}),
({'i': NULL, 'j': [2, 3]});
SELECT * FROM test22 ORDER BY s;
SELECT * FROM test22 ORDER BY s DESC;
CREATE TABLE test24 (l STRUCT(l1 STRUCT(i integer)[])[]);
INSERT INTO test24 VALUES
([{'l1': [{'i': 0}]}, {'l1': [{'i': 0}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': 1}, {'i': 2}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': 1}, {'i': 1}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': 0}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': NULL}]}, {'l1': [{'i': 0}]}]),
([{'l1': [{'i': NULL}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': NULL}]}, {'l1': [{'i': NULL}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': NULL}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': NULL}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': NULL}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': NULL}]}, {'l1': [{'i': NULL}]}]);
SELECT * FROM test24 ORDER BY l;
SELECT * FROM test24 ORDER BY l DESC;
DROP TABLE test0;
DROP TABLE test2;
DROP TABLE test3;
DROP TABLE test4;
DROP TABLE test10;
DROP TABLE test11;
DROP TABLE test13;
DROP TABLE test20;
DROP TABLE test22;
DROP TABLE test24;
PRAGMA debug_force_external=false;
CREATE TABLE test0 (i bigint[]);
INSERT INTO test0 VALUES ([2]), ([1]), ([1, 2]), ([]), ([2, 2]), ([NULL]), ([2, 3]);
SELECT * FROM test0 ORDER BY i;
SELECT * FROM test0 ORDER BY i DESC;
INSERT INTO test0 VALUES (NULL);
SELECT * FROM test0 ORDER BY i;
SELECT * FROM test0 ORDER BY i NULLS LAST;
SELECT * FROM test0 ORDER BY i DESC;
SELECT * FROM test0 ORDER BY i DESC NULLS LAST;
CREATE TABLE test2 (i bigint[][]);
INSERT INTO test2 VALUES ([[2]]), ([[1]]), ([NULL, []]), ([[1], [2]]), ([]), ([[]]), ([[2], [2]]), ([NULL]), (NULL), ([[2], [3]]);
SELECT * FROM test2 ORDER BY i;
SELECT * FROM test2 ORDER BY i DESC;
CREATE TABLE test3 (i bigint[][]);
INSERT INTO test3 VALUES ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], []]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [5, 5, 5, 5, 1]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [5, 5, 5, 5, NULL]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [5, 5, 5, 5, 2]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [NULL]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], NULL]);
SELECT * FROM test3 ORDER BY i;
SELECT * FROM test3 ORDER BY i DESC;
CREATE TABLE test4 (i bigint[][]);
INSERT INTO test4 VALUES ([[NULL, NULL, 0], [1, NULL, 1]]), ([[NULL, NULL, 1]]), ([[NULL, NULL, 0], [1, NULL, 0]]), ([[0, NULL, NULL, 1]]), ([[0, NULL, NULL, 0]]);
SELECT * FROM test4 ORDER BY i;
SELECT * FROM test4 ORDER BY i DESC;
CREATE TABLE test10 (s STRUCT(i bigint, j bigint));
INSERT INTO test10 values
({'i': 2, 'j': NULL}),
({'i': 1, 'j': NULL}),
({'i': 2, 'j': 3}),
({'i': 1, 'j': 2}),
({'i': 2, 'j': 2}),
({'i': NULL, 'j': NULL}),
(NULL),
({'i': 2, 'j': 3});
SELECT * FROM test10 ORDER BY s;
SELECT * FROM test10 ORDER BY s DESC;
CREATE TABLE test11 (s STRUCT(s1 STRUCT(i bigint, j bigint)));
INSERT INTO test11 VALUES ({'s1': NULL}), (NULL), ({'s1': {'i': NULL, 'j': 1}}), ({'s1': {'i': 0, 'j': NULL}}), ({'s1': {'i': NULL, 'j': NULL}}), ({'s1': {'i': 0, 'j': 1}});
SELECT * FROM test11 ORDER BY s;
SELECT * FROM test11 ORDER BY s DESC;
CREATE TABLE test13 (s STRUCT(a bigint, b bigint, c bigint, d bigint, e bigint, f bigint, g bigint, h bigint, i bigint, j bigint));
INSERT INTO test13 VALUES
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': 7, 'i': 8, 'j': 8}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': 7, 'i': 8, 'j': 9}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': NULL, 'f': NULL, 'g': NULL, 'h': NULL, 'i': 8, 'j': 8}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': NULL, 'f': NULL, 'g': NULL, 'h': NULL, 'i': 8, 'j': 9}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': NULL, 'i': NULL, 'j': 8}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': NULL, 'i': NULL, 'j': 9});
SELECT * FROM test13 ORDER BY s;
SELECT * FROM test13 ORDER BY s DESC;
CREATE TABLE test20 (l STRUCT(i bigint)[]);
INSERT INTO test20 VALUES
([{'i': NULL}, {'i': NULL}, {'i': 0}, {'i': NULL}, {'i': NULL}, {'i': 0}]),
([{'i': NULL}, {'i': NULL}, {'i': 0}, {'i': NULL}, {'i': NULL}, {'i': 1}]),
([{'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': 1}]),
([{'i': NULL}, {'i': NULL}, {'i': 0}, {'i': NULL}, {'i': NULL}, {'i': NULL}]),
([{'i': NULL}, {'i': NULL}, {'i': 1}, {'i': NULL}, {'i': NULL}, {'i': 0}]),
([{'i': NULL}, {'i': NULL}, {'i': 1}, {'i': NULL}, {'i': NULL}, {'i': 1}]),
([{'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': 0}]),
([{'i': NULL}, {'i': NULL}, {'i': 1}, {'i': NULL}, {'i': NULL}, {'i': NULL}]);
SELECT * FROM test20 ORDER BY l;
SELECT * FROM test20 ORDER BY l DESC;
CREATE TABLE test22 (s STRUCT(i bigint[], j bigint[]));
INSERT INTO test22 VALUES
({'i': [0, NULL], 'j': [NULL, 0]}),
({'i': [0, NULL], 'j': [NULL, 1]}),
({'i': [0, NULL], 'j': [1, 2]}),
({'i': [1, NULL], 'j': [2, NULL]}),
({'i': [0, 2], 'j': [2, NULL]}),
({'i': NULL, 'j': [2, NULL]}),
({'i': [0, 2], 'j': NULL}),
({'i': NULL, 'j': [2, 3]});
SELECT * FROM test22 ORDER BY s;
SELECT * FROM test22 ORDER BY s DESC;
CREATE TABLE test24 (l STRUCT(l1 STRUCT(i bigint)[])[]);
INSERT INTO test24 VALUES
([{'l1': [{'i': 0}]}, {'l1': [{'i': 0}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': 1}, {'i': 2}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': 1}, {'i': 1}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': 0}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': NULL}]}, {'l1': [{'i': 0}]}]),
([{'l1': [{'i': NULL}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': NULL}]}, {'l1': [{'i': NULL}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': NULL}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': NULL}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': NULL}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': NULL}]}, {'l1': [{'i': NULL}]}]);
SELECT * FROM test24 ORDER BY l;
SELECT * FROM test24 ORDER BY l DESC;
DROP TABLE test0;
DROP TABLE test2;
DROP TABLE test3;
DROP TABLE test4;
DROP TABLE test10;
DROP TABLE test11;
DROP TABLE test13;
DROP TABLE test20;
DROP TABLE test22;
DROP TABLE test24;
PRAGMA debug_force_external=false;
CREATE TABLE test0 (i hugeint[]);
INSERT INTO test0 VALUES ([2]), ([1]), ([1, 2]), ([]), ([2, 2]), ([NULL]), ([2, 3]);
SELECT * FROM test0 ORDER BY i;
SELECT * FROM test0 ORDER BY i DESC;
INSERT INTO test0 VALUES (NULL);
SELECT * FROM test0 ORDER BY i;
SELECT * FROM test0 ORDER BY i NULLS LAST;
SELECT * FROM test0 ORDER BY i DESC;
SELECT * FROM test0 ORDER BY i DESC NULLS LAST;
CREATE TABLE test2 (i hugeint[][]);
INSERT INTO test2 VALUES ([[2]]), ([[1]]), ([NULL, []]), ([[1], [2]]), ([]), ([[]]), ([[2], [2]]), ([NULL]), (NULL), ([[2], [3]]);
SELECT * FROM test2 ORDER BY i;
SELECT * FROM test2 ORDER BY i DESC;
CREATE TABLE test3 (i hugeint[][]);
INSERT INTO test3 VALUES ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], []]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [5, 5, 5, 5, 1]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [5, 5, 5, 5, NULL]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [5, 5, 5, 5, 2]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [NULL]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], NULL]);
SELECT * FROM test3 ORDER BY i;
SELECT * FROM test3 ORDER BY i DESC;
CREATE TABLE test4 (i hugeint[][]);
INSERT INTO test4 VALUES ([[NULL, NULL, 0], [1, NULL, 1]]), ([[NULL, NULL, 1]]), ([[NULL, NULL, 0], [1, NULL, 0]]), ([[0, NULL, NULL, 1]]), ([[0, NULL, NULL, 0]]);
SELECT * FROM test4 ORDER BY i;
SELECT * FROM test4 ORDER BY i DESC;
CREATE TABLE test10 (s STRUCT(i hugeint, j hugeint));
INSERT INTO test10 values
({'i': 2, 'j': NULL}),
({'i': 1, 'j': NULL}),
({'i': 2, 'j': 3}),
({'i': 1, 'j': 2}),
({'i': 2, 'j': 2}),
({'i': NULL, 'j': NULL}),
(NULL),
({'i': 2, 'j': 3});
SELECT * FROM test10 ORDER BY s;
SELECT * FROM test10 ORDER BY s DESC;
CREATE TABLE test11 (s STRUCT(s1 STRUCT(i hugeint, j hugeint)));
INSERT INTO test11 VALUES ({'s1': NULL}), (NULL), ({'s1': {'i': NULL, 'j': 1}}), ({'s1': {'i': 0, 'j': NULL}}), ({'s1': {'i': NULL, 'j': NULL}}), ({'s1': {'i': 0, 'j': 1}});
SELECT * FROM test11 ORDER BY s;
SELECT * FROM test11 ORDER BY s DESC;
CREATE TABLE test13 (s STRUCT(a hugeint, b hugeint, c hugeint, d hugeint, e hugeint, f hugeint, g hugeint, h hugeint, i hugeint, j hugeint));
INSERT INTO test13 VALUES
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': 7, 'i': 8, 'j': 8}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': 7, 'i': 8, 'j': 9}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': NULL, 'f': NULL, 'g': NULL, 'h': NULL, 'i': 8, 'j': 8}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': NULL, 'f': NULL, 'g': NULL, 'h': NULL, 'i': 8, 'j': 9}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': NULL, 'i': NULL, 'j': 8}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': NULL, 'i': NULL, 'j': 9});
SELECT * FROM test13 ORDER BY s;
SELECT * FROM test13 ORDER BY s DESC;
CREATE TABLE test20 (l STRUCT(i hugeint)[]);
INSERT INTO test20 VALUES
([{'i': NULL}, {'i': NULL}, {'i': 0}, {'i': NULL}, {'i': NULL}, {'i': 0}]),
([{'i': NULL}, {'i': NULL}, {'i': 0}, {'i': NULL}, {'i': NULL}, {'i': 1}]),
([{'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': 1}]),
([{'i': NULL}, {'i': NULL}, {'i': 0}, {'i': NULL}, {'i': NULL}, {'i': NULL}]),
([{'i': NULL}, {'i': NULL}, {'i': 1}, {'i': NULL}, {'i': NULL}, {'i': 0}]),
([{'i': NULL}, {'i': NULL}, {'i': 1}, {'i': NULL}, {'i': NULL}, {'i': 1}]),
([{'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': 0}]),
([{'i': NULL}, {'i': NULL}, {'i': 1}, {'i': NULL}, {'i': NULL}, {'i': NULL}]);
SELECT * FROM test20 ORDER BY l;
SELECT * FROM test20 ORDER BY l DESC;
CREATE TABLE test22 (s STRUCT(i hugeint[], j hugeint[]));
INSERT INTO test22 VALUES
({'i': [0, NULL], 'j': [NULL, 0]}),
({'i': [0, NULL], 'j': [NULL, 1]}),
({'i': [0, NULL], 'j': [1, 2]}),
({'i': [1, NULL], 'j': [2, NULL]}),
({'i': [0, 2], 'j': [2, NULL]}),
({'i': NULL, 'j': [2, NULL]}),
({'i': [0, 2], 'j': NULL}),
({'i': NULL, 'j': [2, 3]});
SELECT * FROM test22 ORDER BY s;
SELECT * FROM test22 ORDER BY s DESC;
CREATE TABLE test24 (l STRUCT(l1 STRUCT(i hugeint)[])[]);
INSERT INTO test24 VALUES
([{'l1': [{'i': 0}]}, {'l1': [{'i': 0}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': 1}, {'i': 2}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': 1}, {'i': 1}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': 0}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': NULL}]}, {'l1': [{'i': 0}]}]),
([{'l1': [{'i': NULL}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': NULL}]}, {'l1': [{'i': NULL}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': NULL}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': NULL}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': NULL}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': NULL}]}, {'l1': [{'i': NULL}]}]);
SELECT * FROM test24 ORDER BY l;
SELECT * FROM test24 ORDER BY l DESC;
DROP TABLE test0;
DROP TABLE test2;
DROP TABLE test3;
DROP TABLE test4;
DROP TABLE test10;
DROP TABLE test11;
DROP TABLE test13;
DROP TABLE test20;
DROP TABLE test22;
DROP TABLE test24;
PRAGMA debug_force_external=false;
CREATE TABLE test0 (i utinyint[]);
INSERT INTO test0 VALUES ([2]), ([1]), ([1, 2]), ([]), ([2, 2]), ([NULL]), ([2, 3]);
SELECT * FROM test0 ORDER BY i;
SELECT * FROM test0 ORDER BY i DESC;
INSERT INTO test0 VALUES (NULL);
SELECT * FROM test0 ORDER BY i;
SELECT * FROM test0 ORDER BY i NULLS LAST;
SELECT * FROM test0 ORDER BY i DESC;
SELECT * FROM test0 ORDER BY i DESC NULLS LAST;
CREATE TABLE test2 (i utinyint[][]);
INSERT INTO test2 VALUES ([[2]]), ([[1]]), ([NULL, []]), ([[1], [2]]), ([]), ([[]]), ([[2], [2]]), ([NULL]), (NULL), ([[2], [3]]);
SELECT * FROM test2 ORDER BY i;
SELECT * FROM test2 ORDER BY i DESC;
CREATE TABLE test3 (i utinyint[][]);
INSERT INTO test3 VALUES ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], []]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [5, 5, 5, 5, 1]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [5, 5, 5, 5, NULL]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [5, 5, 5, 5, 2]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [NULL]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], NULL]);
SELECT * FROM test3 ORDER BY i;
SELECT * FROM test3 ORDER BY i DESC;
CREATE TABLE test4 (i utinyint[][]);
INSERT INTO test4 VALUES ([[NULL, NULL, 0], [1, NULL, 1]]), ([[NULL, NULL, 1]]), ([[NULL, NULL, 0], [1, NULL, 0]]), ([[0, NULL, NULL, 1]]), ([[0, NULL, NULL, 0]]);
SELECT * FROM test4 ORDER BY i;
SELECT * FROM test4 ORDER BY i DESC;
CREATE TABLE test10 (s STRUCT(i utinyint, j utinyint));
INSERT INTO test10 values
({'i': 2, 'j': NULL}),
({'i': 1, 'j': NULL}),
({'i': 2, 'j': 3}),
({'i': 1, 'j': 2}),
({'i': 2, 'j': 2}),
({'i': NULL, 'j': NULL}),
(NULL),
({'i': 2, 'j': 3});
SELECT * FROM test10 ORDER BY s;
SELECT * FROM test10 ORDER BY s DESC;
CREATE TABLE test11 (s STRUCT(s1 STRUCT(i utinyint, j utinyint)));
INSERT INTO test11 VALUES ({'s1': NULL}), (NULL), ({'s1': {'i': NULL, 'j': 1}}), ({'s1': {'i': 0, 'j': NULL}}), ({'s1': {'i': NULL, 'j': NULL}}), ({'s1': {'i': 0, 'j': 1}});
SELECT * FROM test11 ORDER BY s;
SELECT * FROM test11 ORDER BY s DESC;
CREATE TABLE test13 (s STRUCT(a utinyint, b utinyint, c utinyint, d utinyint, e utinyint, f utinyint, g utinyint, h utinyint, i utinyint, j utinyint));
INSERT INTO test13 VALUES
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': 7, 'i': 8, 'j': 8}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': 7, 'i': 8, 'j': 9}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': NULL, 'f': NULL, 'g': NULL, 'h': NULL, 'i': 8, 'j': 8}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': NULL, 'f': NULL, 'g': NULL, 'h': NULL, 'i': 8, 'j': 9}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': NULL, 'i': NULL, 'j': 8}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': NULL, 'i': NULL, 'j': 9});
SELECT * FROM test13 ORDER BY s;
SELECT * FROM test13 ORDER BY s DESC;
CREATE TABLE test20 (l STRUCT(i utinyint)[]);
INSERT INTO test20 VALUES
([{'i': NULL}, {'i': NULL}, {'i': 0}, {'i': NULL}, {'i': NULL}, {'i': 0}]),
([{'i': NULL}, {'i': NULL}, {'i': 0}, {'i': NULL}, {'i': NULL}, {'i': 1}]),
([{'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': 1}]),
([{'i': NULL}, {'i': NULL}, {'i': 0}, {'i': NULL}, {'i': NULL}, {'i': NULL}]),
([{'i': NULL}, {'i': NULL}, {'i': 1}, {'i': NULL}, {'i': NULL}, {'i': 0}]),
([{'i': NULL}, {'i': NULL}, {'i': 1}, {'i': NULL}, {'i': NULL}, {'i': 1}]),
([{'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': 0}]),
([{'i': NULL}, {'i': NULL}, {'i': 1}, {'i': NULL}, {'i': NULL}, {'i': NULL}]);
SELECT * FROM test20 ORDER BY l;
SELECT * FROM test20 ORDER BY l DESC;
CREATE TABLE test22 (s STRUCT(i utinyint[], j utinyint[]));
INSERT INTO test22 VALUES
({'i': [0, NULL], 'j': [NULL, 0]}),
({'i': [0, NULL], 'j': [NULL, 1]}),
({'i': [0, NULL], 'j': [1, 2]}),
({'i': [1, NULL], 'j': [2, NULL]}),
({'i': [0, 2], 'j': [2, NULL]}),
({'i': NULL, 'j': [2, NULL]}),
({'i': [0, 2], 'j': NULL}),
({'i': NULL, 'j': [2, 3]});
SELECT * FROM test22 ORDER BY s;
SELECT * FROM test22 ORDER BY s DESC;
CREATE TABLE test24 (l STRUCT(l1 STRUCT(i utinyint)[])[]);
INSERT INTO test24 VALUES
([{'l1': [{'i': 0}]}, {'l1': [{'i': 0}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': 1}, {'i': 2}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': 1}, {'i': 1}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': 0}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': NULL}]}, {'l1': [{'i': 0}]}]),
([{'l1': [{'i': NULL}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': NULL}]}, {'l1': [{'i': NULL}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': NULL}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': NULL}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': NULL}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': NULL}]}, {'l1': [{'i': NULL}]}]);
SELECT * FROM test24 ORDER BY l;
SELECT * FROM test24 ORDER BY l DESC;
DROP TABLE test0;
DROP TABLE test2;
DROP TABLE test3;
DROP TABLE test4;
DROP TABLE test10;
DROP TABLE test11;
DROP TABLE test13;
DROP TABLE test20;
DROP TABLE test22;
DROP TABLE test24;
PRAGMA debug_force_external=false;
CREATE TABLE test0 (i usmallint[]);
INSERT INTO test0 VALUES ([2]), ([1]), ([1, 2]), ([]), ([2, 2]), ([NULL]), ([2, 3]);
SELECT * FROM test0 ORDER BY i;
SELECT * FROM test0 ORDER BY i DESC;
INSERT INTO test0 VALUES (NULL);
SELECT * FROM test0 ORDER BY i;
SELECT * FROM test0 ORDER BY i NULLS LAST;
SELECT * FROM test0 ORDER BY i DESC;
SELECT * FROM test0 ORDER BY i DESC NULLS LAST;
CREATE TABLE test2 (i usmallint[][]);
INSERT INTO test2 VALUES ([[2]]), ([[1]]), ([NULL, []]), ([[1], [2]]), ([]), ([[]]), ([[2], [2]]), ([NULL]), (NULL), ([[2], [3]]);
SELECT * FROM test2 ORDER BY i;
SELECT * FROM test2 ORDER BY i DESC;
CREATE TABLE test3 (i usmallint[][]);
INSERT INTO test3 VALUES ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], []]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [5, 5, 5, 5, 1]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [5, 5, 5, 5, NULL]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [5, 5, 5, 5, 2]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [NULL]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], NULL]);
SELECT * FROM test3 ORDER BY i;
SELECT * FROM test3 ORDER BY i DESC;
CREATE TABLE test4 (i usmallint[][]);
INSERT INTO test4 VALUES ([[NULL, NULL, 0], [1, NULL, 1]]), ([[NULL, NULL, 1]]), ([[NULL, NULL, 0], [1, NULL, 0]]), ([[0, NULL, NULL, 1]]), ([[0, NULL, NULL, 0]]);
SELECT * FROM test4 ORDER BY i;
SELECT * FROM test4 ORDER BY i DESC;
CREATE TABLE test10 (s STRUCT(i usmallint, j usmallint));
INSERT INTO test10 values
({'i': 2, 'j': NULL}),
({'i': 1, 'j': NULL}),
({'i': 2, 'j': 3}),
({'i': 1, 'j': 2}),
({'i': 2, 'j': 2}),
({'i': NULL, 'j': NULL}),
(NULL),
({'i': 2, 'j': 3});
SELECT * FROM test10 ORDER BY s;
SELECT * FROM test10 ORDER BY s DESC;
CREATE TABLE test11 (s STRUCT(s1 STRUCT(i usmallint, j usmallint)));
INSERT INTO test11 VALUES ({'s1': NULL}), (NULL), ({'s1': {'i': NULL, 'j': 1}}), ({'s1': {'i': 0, 'j': NULL}}), ({'s1': {'i': NULL, 'j': NULL}}), ({'s1': {'i': 0, 'j': 1}});
SELECT * FROM test11 ORDER BY s;
SELECT * FROM test11 ORDER BY s DESC;
CREATE TABLE test13 (s STRUCT(a usmallint, b usmallint, c usmallint, d usmallint, e usmallint, f usmallint, g usmallint, h usmallint, i usmallint, j usmallint));
INSERT INTO test13 VALUES
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': 7, 'i': 8, 'j': 8}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': 7, 'i': 8, 'j': 9}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': NULL, 'f': NULL, 'g': NULL, 'h': NULL, 'i': 8, 'j': 8}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': NULL, 'f': NULL, 'g': NULL, 'h': NULL, 'i': 8, 'j': 9}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': NULL, 'i': NULL, 'j': 8}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': NULL, 'i': NULL, 'j': 9});
SELECT * FROM test13 ORDER BY s;
SELECT * FROM test13 ORDER BY s DESC;
CREATE TABLE test20 (l STRUCT(i usmallint)[]);
INSERT INTO test20 VALUES
([{'i': NULL}, {'i': NULL}, {'i': 0}, {'i': NULL}, {'i': NULL}, {'i': 0}]),
([{'i': NULL}, {'i': NULL}, {'i': 0}, {'i': NULL}, {'i': NULL}, {'i': 1}]),
([{'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': 1}]),
([{'i': NULL}, {'i': NULL}, {'i': 0}, {'i': NULL}, {'i': NULL}, {'i': NULL}]),
([{'i': NULL}, {'i': NULL}, {'i': 1}, {'i': NULL}, {'i': NULL}, {'i': 0}]),
([{'i': NULL}, {'i': NULL}, {'i': 1}, {'i': NULL}, {'i': NULL}, {'i': 1}]),
([{'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': 0}]),
([{'i': NULL}, {'i': NULL}, {'i': 1}, {'i': NULL}, {'i': NULL}, {'i': NULL}]);
SELECT * FROM test20 ORDER BY l;
SELECT * FROM test20 ORDER BY l DESC;
CREATE TABLE test22 (s STRUCT(i usmallint[], j usmallint[]));
INSERT INTO test22 VALUES
({'i': [0, NULL], 'j': [NULL, 0]}),
({'i': [0, NULL], 'j': [NULL, 1]}),
({'i': [0, NULL], 'j': [1, 2]}),
({'i': [1, NULL], 'j': [2, NULL]}),
({'i': [0, 2], 'j': [2, NULL]}),
({'i': NULL, 'j': [2, NULL]}),
({'i': [0, 2], 'j': NULL}),
({'i': NULL, 'j': [2, 3]});
SELECT * FROM test22 ORDER BY s;
SELECT * FROM test22 ORDER BY s DESC;
CREATE TABLE test24 (l STRUCT(l1 STRUCT(i usmallint)[])[]);
INSERT INTO test24 VALUES
([{'l1': [{'i': 0}]}, {'l1': [{'i': 0}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': 1}, {'i': 2}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': 1}, {'i': 1}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': 0}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': NULL}]}, {'l1': [{'i': 0}]}]),
([{'l1': [{'i': NULL}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': NULL}]}, {'l1': [{'i': NULL}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': NULL}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': NULL}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': NULL}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': NULL}]}, {'l1': [{'i': NULL}]}]);
SELECT * FROM test24 ORDER BY l;
SELECT * FROM test24 ORDER BY l DESC;
DROP TABLE test0;
DROP TABLE test2;
DROP TABLE test3;
DROP TABLE test4;
DROP TABLE test10;
DROP TABLE test11;
DROP TABLE test13;
DROP TABLE test20;
DROP TABLE test22;
DROP TABLE test24;
PRAGMA debug_force_external=false;
CREATE TABLE test0 (i uinteger[]);
INSERT INTO test0 VALUES ([2]), ([1]), ([1, 2]), ([]), ([2, 2]), ([NULL]), ([2, 3]);
SELECT * FROM test0 ORDER BY i;
SELECT * FROM test0 ORDER BY i DESC;
INSERT INTO test0 VALUES (NULL);
SELECT * FROM test0 ORDER BY i;
SELECT * FROM test0 ORDER BY i NULLS LAST;
SELECT * FROM test0 ORDER BY i DESC;
SELECT * FROM test0 ORDER BY i DESC NULLS LAST;
CREATE TABLE test2 (i uinteger[][]);
INSERT INTO test2 VALUES ([[2]]), ([[1]]), ([NULL, []]), ([[1], [2]]), ([]), ([[]]), ([[2], [2]]), ([NULL]), (NULL), ([[2], [3]]);
SELECT * FROM test2 ORDER BY i;
SELECT * FROM test2 ORDER BY i DESC;
CREATE TABLE test3 (i uinteger[][]);
INSERT INTO test3 VALUES ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], []]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [5, 5, 5, 5, 1]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [5, 5, 5, 5, NULL]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [5, 5, 5, 5, 2]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [NULL]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], NULL]);
SELECT * FROM test3 ORDER BY i;
SELECT * FROM test3 ORDER BY i DESC;
CREATE TABLE test4 (i uinteger[][]);
INSERT INTO test4 VALUES ([[NULL, NULL, 0], [1, NULL, 1]]), ([[NULL, NULL, 1]]), ([[NULL, NULL, 0], [1, NULL, 0]]), ([[0, NULL, NULL, 1]]), ([[0, NULL, NULL, 0]]);
SELECT * FROM test4 ORDER BY i;
SELECT * FROM test4 ORDER BY i DESC;
CREATE TABLE test10 (s STRUCT(i uinteger, j uinteger));
INSERT INTO test10 values
({'i': 2, 'j': NULL}),
({'i': 1, 'j': NULL}),
({'i': 2, 'j': 3}),
({'i': 1, 'j': 2}),
({'i': 2, 'j': 2}),
({'i': NULL, 'j': NULL}),
(NULL),
({'i': 2, 'j': 3});
SELECT * FROM test10 ORDER BY s;
SELECT * FROM test10 ORDER BY s DESC;
CREATE TABLE test11 (s STRUCT(s1 STRUCT(i uinteger, j uinteger)));
INSERT INTO test11 VALUES ({'s1': NULL}), (NULL), ({'s1': {'i': NULL, 'j': 1}}), ({'s1': {'i': 0, 'j': NULL}}), ({'s1': {'i': NULL, 'j': NULL}}), ({'s1': {'i': 0, 'j': 1}});
SELECT * FROM test11 ORDER BY s;
SELECT * FROM test11 ORDER BY s DESC;
CREATE TABLE test13 (s STRUCT(a uinteger, b uinteger, c uinteger, d uinteger, e uinteger, f uinteger, g uinteger, h uinteger, i uinteger, j uinteger));
INSERT INTO test13 VALUES
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': 7, 'i': 8, 'j': 8}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': 7, 'i': 8, 'j': 9}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': NULL, 'f': NULL, 'g': NULL, 'h': NULL, 'i': 8, 'j': 8}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': NULL, 'f': NULL, 'g': NULL, 'h': NULL, 'i': 8, 'j': 9}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': NULL, 'i': NULL, 'j': 8}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': NULL, 'i': NULL, 'j': 9});
SELECT * FROM test13 ORDER BY s;
SELECT * FROM test13 ORDER BY s DESC;
CREATE TABLE test20 (l STRUCT(i uinteger)[]);
INSERT INTO test20 VALUES
([{'i': NULL}, {'i': NULL}, {'i': 0}, {'i': NULL}, {'i': NULL}, {'i': 0}]),
([{'i': NULL}, {'i': NULL}, {'i': 0}, {'i': NULL}, {'i': NULL}, {'i': 1}]),
([{'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': 1}]),
([{'i': NULL}, {'i': NULL}, {'i': 0}, {'i': NULL}, {'i': NULL}, {'i': NULL}]),
([{'i': NULL}, {'i': NULL}, {'i': 1}, {'i': NULL}, {'i': NULL}, {'i': 0}]),
([{'i': NULL}, {'i': NULL}, {'i': 1}, {'i': NULL}, {'i': NULL}, {'i': 1}]),
([{'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': 0}]),
([{'i': NULL}, {'i': NULL}, {'i': 1}, {'i': NULL}, {'i': NULL}, {'i': NULL}]);
SELECT * FROM test20 ORDER BY l;
SELECT * FROM test20 ORDER BY l DESC;
CREATE TABLE test22 (s STRUCT(i uinteger[], j uinteger[]));
INSERT INTO test22 VALUES
({'i': [0, NULL], 'j': [NULL, 0]}),
({'i': [0, NULL], 'j': [NULL, 1]}),
({'i': [0, NULL], 'j': [1, 2]}),
({'i': [1, NULL], 'j': [2, NULL]}),
({'i': [0, 2], 'j': [2, NULL]}),
({'i': NULL, 'j': [2, NULL]}),
({'i': [0, 2], 'j': NULL}),
({'i': NULL, 'j': [2, 3]});
SELECT * FROM test22 ORDER BY s;
SELECT * FROM test22 ORDER BY s DESC;
CREATE TABLE test24 (l STRUCT(l1 STRUCT(i uinteger)[])[]);
INSERT INTO test24 VALUES
([{'l1': [{'i': 0}]}, {'l1': [{'i': 0}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': 1}, {'i': 2}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': 1}, {'i': 1}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': 0}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': NULL}]}, {'l1': [{'i': 0}]}]),
([{'l1': [{'i': NULL}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': NULL}]}, {'l1': [{'i': NULL}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': NULL}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': NULL}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': NULL}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': NULL}]}, {'l1': [{'i': NULL}]}]);
SELECT * FROM test24 ORDER BY l;
SELECT * FROM test24 ORDER BY l DESC;
DROP TABLE test0;
DROP TABLE test2;
DROP TABLE test3;
DROP TABLE test4;
DROP TABLE test10;
DROP TABLE test11;
DROP TABLE test13;
DROP TABLE test20;
DROP TABLE test22;
DROP TABLE test24;
PRAGMA debug_force_external=false;
CREATE TABLE test0 (i ubigint[]);
INSERT INTO test0 VALUES ([2]), ([1]), ([1, 2]), ([]), ([2, 2]), ([NULL]), ([2, 3]);
SELECT * FROM test0 ORDER BY i;
SELECT * FROM test0 ORDER BY i DESC;
INSERT INTO test0 VALUES (NULL);
SELECT * FROM test0 ORDER BY i;
SELECT * FROM test0 ORDER BY i NULLS LAST;
SELECT * FROM test0 ORDER BY i DESC;
SELECT * FROM test0 ORDER BY i DESC NULLS LAST;
CREATE TABLE test2 (i ubigint[][]);
INSERT INTO test2 VALUES ([[2]]), ([[1]]), ([NULL, []]), ([[1], [2]]), ([]), ([[]]), ([[2], [2]]), ([NULL]), (NULL), ([[2], [3]]);
SELECT * FROM test2 ORDER BY i;
SELECT * FROM test2 ORDER BY i DESC;
CREATE TABLE test3 (i ubigint[][]);
INSERT INTO test3 VALUES ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], []]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [5, 5, 5, 5, 1]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [5, 5, 5, 5, NULL]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [5, 5, 5, 5, 2]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [NULL]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], NULL]);
SELECT * FROM test3 ORDER BY i;
SELECT * FROM test3 ORDER BY i DESC;
CREATE TABLE test4 (i ubigint[][]);
INSERT INTO test4 VALUES ([[NULL, NULL, 0], [1, NULL, 1]]), ([[NULL, NULL, 1]]), ([[NULL, NULL, 0], [1, NULL, 0]]), ([[0, NULL, NULL, 1]]), ([[0, NULL, NULL, 0]]);
SELECT * FROM test4 ORDER BY i;
SELECT * FROM test4 ORDER BY i DESC;
CREATE TABLE test10 (s STRUCT(i ubigint, j ubigint));
INSERT INTO test10 values
({'i': 2, 'j': NULL}),
({'i': 1, 'j': NULL}),
({'i': 2, 'j': 3}),
({'i': 1, 'j': 2}),
({'i': 2, 'j': 2}),
({'i': NULL, 'j': NULL}),
(NULL),
({'i': 2, 'j': 3});
SELECT * FROM test10 ORDER BY s;
SELECT * FROM test10 ORDER BY s DESC;
CREATE TABLE test11 (s STRUCT(s1 STRUCT(i ubigint, j ubigint)));
INSERT INTO test11 VALUES ({'s1': NULL}), (NULL), ({'s1': {'i': NULL, 'j': 1}}), ({'s1': {'i': 0, 'j': NULL}}), ({'s1': {'i': NULL, 'j': NULL}}), ({'s1': {'i': 0, 'j': 1}});
SELECT * FROM test11 ORDER BY s;
SELECT * FROM test11 ORDER BY s DESC;
CREATE TABLE test13 (s STRUCT(a ubigint, b ubigint, c ubigint, d ubigint, e ubigint, f ubigint, g ubigint, h ubigint, i ubigint, j ubigint));
INSERT INTO test13 VALUES
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': 7, 'i': 8, 'j': 8}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': 7, 'i': 8, 'j': 9}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': NULL, 'f': NULL, 'g': NULL, 'h': NULL, 'i': 8, 'j': 8}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': NULL, 'f': NULL, 'g': NULL, 'h': NULL, 'i': 8, 'j': 9}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': NULL, 'i': NULL, 'j': 8}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': NULL, 'i': NULL, 'j': 9});
SELECT * FROM test13 ORDER BY s;
SELECT * FROM test13 ORDER BY s DESC;
CREATE TABLE test20 (l STRUCT(i ubigint)[]);
INSERT INTO test20 VALUES
([{'i': NULL}, {'i': NULL}, {'i': 0}, {'i': NULL}, {'i': NULL}, {'i': 0}]),
([{'i': NULL}, {'i': NULL}, {'i': 0}, {'i': NULL}, {'i': NULL}, {'i': 1}]),
([{'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': 1}]),
([{'i': NULL}, {'i': NULL}, {'i': 0}, {'i': NULL}, {'i': NULL}, {'i': NULL}]),
([{'i': NULL}, {'i': NULL}, {'i': 1}, {'i': NULL}, {'i': NULL}, {'i': 0}]),
([{'i': NULL}, {'i': NULL}, {'i': 1}, {'i': NULL}, {'i': NULL}, {'i': 1}]),
([{'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': 0}]),
([{'i': NULL}, {'i': NULL}, {'i': 1}, {'i': NULL}, {'i': NULL}, {'i': NULL}]);
SELECT * FROM test20 ORDER BY l;
SELECT * FROM test20 ORDER BY l DESC;
CREATE TABLE test22 (s STRUCT(i ubigint[], j ubigint[]));
INSERT INTO test22 VALUES
({'i': [0, NULL], 'j': [NULL, 0]}),
({'i': [0, NULL], 'j': [NULL, 1]}),
({'i': [0, NULL], 'j': [1, 2]}),
({'i': [1, NULL], 'j': [2, NULL]}),
({'i': [0, 2], 'j': [2, NULL]}),
({'i': NULL, 'j': [2, NULL]}),
({'i': [0, 2], 'j': NULL}),
({'i': NULL, 'j': [2, 3]});
SELECT * FROM test22 ORDER BY s;
SELECT * FROM test22 ORDER BY s DESC;
CREATE TABLE test24 (l STRUCT(l1 STRUCT(i ubigint)[])[]);
INSERT INTO test24 VALUES
([{'l1': [{'i': 0}]}, {'l1': [{'i': 0}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': 1}, {'i': 2}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': 1}, {'i': 1}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': 0}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': NULL}]}, {'l1': [{'i': 0}]}]),
([{'l1': [{'i': NULL}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': NULL}]}, {'l1': [{'i': NULL}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': NULL}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': NULL}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': NULL}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': NULL}]}, {'l1': [{'i': NULL}]}]);
SELECT * FROM test24 ORDER BY l;
SELECT * FROM test24 ORDER BY l DESC;
DROP TABLE test0;
DROP TABLE test2;
DROP TABLE test3;
DROP TABLE test4;
DROP TABLE test10;
DROP TABLE test11;
DROP TABLE test13;
DROP TABLE test20;
DROP TABLE test22;
DROP TABLE test24;
PRAGMA debug_force_external=false;
CREATE TABLE test0 (i uhugeint[]);
INSERT INTO test0 VALUES ([2]), ([1]), ([1, 2]), ([]), ([2, 2]), ([NULL]), ([2, 3]);
SELECT * FROM test0 ORDER BY i;
SELECT * FROM test0 ORDER BY i DESC;
INSERT INTO test0 VALUES (NULL);
SELECT * FROM test0 ORDER BY i;
SELECT * FROM test0 ORDER BY i NULLS LAST;
SELECT * FROM test0 ORDER BY i DESC;
SELECT * FROM test0 ORDER BY i DESC NULLS LAST;
CREATE TABLE test2 (i uhugeint[][]);
INSERT INTO test2 VALUES ([[2]]), ([[1]]), ([NULL, []]), ([[1], [2]]), ([]), ([[]]), ([[2], [2]]), ([NULL]), (NULL), ([[2], [3]]);
SELECT * FROM test2 ORDER BY i;
SELECT * FROM test2 ORDER BY i DESC;
CREATE TABLE test3 (i uhugeint[][]);
INSERT INTO test3 VALUES ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], []]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [5, 5, 5, 5, 1]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [5, 5, 5, 5, NULL]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [5, 5, 5, 5, 2]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [NULL]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], NULL]);
SELECT * FROM test3 ORDER BY i;
SELECT * FROM test3 ORDER BY i DESC;
CREATE TABLE test4 (i uhugeint[][]);
INSERT INTO test4 VALUES ([[NULL, NULL, 0], [1, NULL, 1]]), ([[NULL, NULL, 1]]), ([[NULL, NULL, 0], [1, NULL, 0]]), ([[0, NULL, NULL, 1]]), ([[0, NULL, NULL, 0]]);
SELECT * FROM test4 ORDER BY i;
SELECT * FROM test4 ORDER BY i DESC;
CREATE TABLE test10 (s STRUCT(i uhugeint, j uhugeint));
INSERT INTO test10 values
({'i': 2, 'j': NULL}),
({'i': 1, 'j': NULL}),
({'i': 2, 'j': 3}),
({'i': 1, 'j': 2}),
({'i': 2, 'j': 2}),
({'i': NULL, 'j': NULL}),
(NULL),
({'i': 2, 'j': 3});
SELECT * FROM test10 ORDER BY s;
SELECT * FROM test10 ORDER BY s DESC;
CREATE TABLE test11 (s STRUCT(s1 STRUCT(i uhugeint, j uhugeint)));
INSERT INTO test11 VALUES ({'s1': NULL}), (NULL), ({'s1': {'i': NULL, 'j': 1}}), ({'s1': {'i': 0, 'j': NULL}}), ({'s1': {'i': NULL, 'j': NULL}}), ({'s1': {'i': 0, 'j': 1}});
SELECT * FROM test11 ORDER BY s;
SELECT * FROM test11 ORDER BY s DESC;
CREATE TABLE test13 (s STRUCT(a uhugeint, b uhugeint, c uhugeint, d uhugeint, e uhugeint, f uhugeint, g uhugeint, h uhugeint, i uhugeint, j uhugeint));
INSERT INTO test13 VALUES
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': 7, 'i': 8, 'j': 8}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': 7, 'i': 8, 'j': 9}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': NULL, 'f': NULL, 'g': NULL, 'h': NULL, 'i': 8, 'j': 8}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': NULL, 'f': NULL, 'g': NULL, 'h': NULL, 'i': 8, 'j': 9}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': NULL, 'i': NULL, 'j': 8}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': NULL, 'i': NULL, 'j': 9});
SELECT * FROM test13 ORDER BY s;
SELECT * FROM test13 ORDER BY s DESC;
CREATE TABLE test20 (l STRUCT(i uhugeint)[]);
INSERT INTO test20 VALUES
([{'i': NULL}, {'i': NULL}, {'i': 0}, {'i': NULL}, {'i': NULL}, {'i': 0}]),
([{'i': NULL}, {'i': NULL}, {'i': 0}, {'i': NULL}, {'i': NULL}, {'i': 1}]),
([{'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': 1}]),
([{'i': NULL}, {'i': NULL}, {'i': 0}, {'i': NULL}, {'i': NULL}, {'i': NULL}]),
([{'i': NULL}, {'i': NULL}, {'i': 1}, {'i': NULL}, {'i': NULL}, {'i': 0}]),
([{'i': NULL}, {'i': NULL}, {'i': 1}, {'i': NULL}, {'i': NULL}, {'i': 1}]),
([{'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': 0}]),
([{'i': NULL}, {'i': NULL}, {'i': 1}, {'i': NULL}, {'i': NULL}, {'i': NULL}]);
SELECT * FROM test20 ORDER BY l;
SELECT * FROM test20 ORDER BY l DESC;
CREATE TABLE test22 (s STRUCT(i uhugeint[], j uhugeint[]));
INSERT INTO test22 VALUES
({'i': [0, NULL], 'j': [NULL, 0]}),
({'i': [0, NULL], 'j': [NULL, 1]}),
({'i': [0, NULL], 'j': [1, 2]}),
({'i': [1, NULL], 'j': [2, NULL]}),
({'i': [0, 2], 'j': [2, NULL]}),
({'i': NULL, 'j': [2, NULL]}),
({'i': [0, 2], 'j': NULL}),
({'i': NULL, 'j': [2, 3]});
SELECT * FROM test22 ORDER BY s;
SELECT * FROM test22 ORDER BY s DESC;
CREATE TABLE test24 (l STRUCT(l1 STRUCT(i uhugeint)[])[]);
INSERT INTO test24 VALUES
([{'l1': [{'i': 0}]}, {'l1': [{'i': 0}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': 1}, {'i': 2}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': 1}, {'i': 1}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': 0}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': NULL}]}, {'l1': [{'i': 0}]}]),
([{'l1': [{'i': NULL}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': NULL}]}, {'l1': [{'i': NULL}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': NULL}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': NULL}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': NULL}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': NULL}]}, {'l1': [{'i': NULL}]}]);
SELECT * FROM test24 ORDER BY l;
SELECT * FROM test24 ORDER BY l DESC;
DROP TABLE test0;
DROP TABLE test2;
DROP TABLE test3;
DROP TABLE test4;
DROP TABLE test10;
DROP TABLE test11;
DROP TABLE test13;
DROP TABLE test20;
DROP TABLE test22;
DROP TABLE test24;
PRAGMA debug_force_external=false;
CREATE TABLE test0 (i varchar[]);
INSERT INTO test0 VALUES ([2]), ([1]), ([1, 2]), ([]), ([2, 2]), ([NULL]), ([2, 3]);
SELECT * FROM test0 ORDER BY i;
SELECT * FROM test0 ORDER BY i DESC;
INSERT INTO test0 VALUES (NULL);
SELECT * FROM test0 ORDER BY i;
SELECT * FROM test0 ORDER BY i NULLS LAST;
SELECT * FROM test0 ORDER BY i DESC;
SELECT * FROM test0 ORDER BY i DESC NULLS LAST;
CREATE TABLE test2 (i varchar[][]);
INSERT INTO test2 VALUES ([[2]]), ([[1]]), ([NULL, []]), ([[1], [2]]), ([]), ([[]]), ([[2], [2]]), ([NULL]), (NULL), ([[2], [3]]);
SELECT * FROM test2 ORDER BY i;
SELECT * FROM test2 ORDER BY i DESC;
CREATE TABLE test3 (i varchar[][]);
INSERT INTO test3 VALUES ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], []]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [5, 5, 5, 5, 1]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [5, 5, 5, 5, NULL]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [5, 5, 5, 5, 2]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [NULL]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], NULL]);
SELECT * FROM test3 ORDER BY i;
SELECT * FROM test3 ORDER BY i DESC;
CREATE TABLE test4 (i varchar[][]);
INSERT INTO test4 VALUES ([[NULL, NULL, 0], [1, NULL, 1]]), ([[NULL, NULL, 1]]), ([[NULL, NULL, 0], [1, NULL, 0]]), ([[0, NULL, NULL, 1]]), ([[0, NULL, NULL, 0]]);
SELECT * FROM test4 ORDER BY i;
SELECT * FROM test4 ORDER BY i DESC;
CREATE TABLE test10 (s STRUCT(i varchar, j varchar));
INSERT INTO test10 values
({'i': 2, 'j': NULL}),
({'i': 1, 'j': NULL}),
({'i': 2, 'j': 3}),
({'i': 1, 'j': 2}),
({'i': 2, 'j': 2}),
({'i': NULL, 'j': NULL}),
(NULL),
({'i': 2, 'j': 3});
SELECT * FROM test10 ORDER BY s;
SELECT * FROM test10 ORDER BY s DESC;
CREATE TABLE test11 (s STRUCT(s1 STRUCT(i varchar, j varchar)));
INSERT INTO test11 VALUES ({'s1': NULL}), (NULL), ({'s1': {'i': NULL, 'j': 1}}), ({'s1': {'i': 0, 'j': NULL}}), ({'s1': {'i': NULL, 'j': NULL}}), ({'s1': {'i': 0, 'j': 1}});
SELECT * FROM test11 ORDER BY s;
SELECT * FROM test11 ORDER BY s DESC;
CREATE TABLE test13 (s STRUCT(a varchar, b varchar, c varchar, d varchar, e varchar, f varchar, g varchar, h varchar, i varchar, j varchar));
INSERT INTO test13 VALUES
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': 7, 'i': 8, 'j': 8}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': 7, 'i': 8, 'j': 9}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': NULL, 'f': NULL, 'g': NULL, 'h': NULL, 'i': 8, 'j': 8}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': NULL, 'f': NULL, 'g': NULL, 'h': NULL, 'i': 8, 'j': 9}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': NULL, 'i': NULL, 'j': 8}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': NULL, 'i': NULL, 'j': 9});
SELECT * FROM test13 ORDER BY s;
SELECT * FROM test13 ORDER BY s DESC;
CREATE TABLE test20 (l STRUCT(i varchar)[]);
INSERT INTO test20 VALUES
([{'i': NULL}, {'i': NULL}, {'i': 0}, {'i': NULL}, {'i': NULL}, {'i': 0}]),
([{'i': NULL}, {'i': NULL}, {'i': 0}, {'i': NULL}, {'i': NULL}, {'i': 1}]),
([{'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': 1}]),
([{'i': NULL}, {'i': NULL}, {'i': 0}, {'i': NULL}, {'i': NULL}, {'i': NULL}]),
([{'i': NULL}, {'i': NULL}, {'i': 1}, {'i': NULL}, {'i': NULL}, {'i': 0}]),
([{'i': NULL}, {'i': NULL}, {'i': 1}, {'i': NULL}, {'i': NULL}, {'i': 1}]),
([{'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': 0}]),
([{'i': NULL}, {'i': NULL}, {'i': 1}, {'i': NULL}, {'i': NULL}, {'i': NULL}]);
SELECT * FROM test20 ORDER BY l;
SELECT * FROM test20 ORDER BY l DESC;
CREATE TABLE test22 (s STRUCT(i varchar[], j varchar[]));
INSERT INTO test22 VALUES
({'i': [0, NULL], 'j': [NULL, 0]}),
({'i': [0, NULL], 'j': [NULL, 1]}),
({'i': [0, NULL], 'j': [1, 2]}),
({'i': [1, NULL], 'j': [2, NULL]}),
({'i': [0, 2], 'j': [2, NULL]}),
({'i': NULL, 'j': [2, NULL]}),
({'i': [0, 2], 'j': NULL}),
({'i': NULL, 'j': [2, 3]});
SELECT * FROM test22 ORDER BY s;
SELECT * FROM test22 ORDER BY s DESC;
CREATE TABLE test24 (l STRUCT(l1 STRUCT(i varchar)[])[]);
INSERT INTO test24 VALUES
([{'l1': [{'i': 0}]}, {'l1': [{'i': 0}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': 1}, {'i': 2}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': 1}, {'i': 1}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': 0}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': NULL}]}, {'l1': [{'i': 0}]}]),
([{'l1': [{'i': NULL}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': NULL}]}, {'l1': [{'i': NULL}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': NULL}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': NULL}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': NULL}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': NULL}]}, {'l1': [{'i': NULL}]}]);
SELECT * FROM test24 ORDER BY l;
SELECT * FROM test24 ORDER BY l DESC;
DROP TABLE test0;
DROP TABLE test2;
DROP TABLE test3;
DROP TABLE test4;
DROP TABLE test10;
DROP TABLE test11;
DROP TABLE test13;
DROP TABLE test20;
DROP TABLE test22;
DROP TABLE test24;
PRAGMA debug_force_external=false;
CREATE TABLE test0 (i tinyint[]);
INSERT INTO test0 VALUES ([2]), ([1]), ([1, 2]), ([]), ([2, 2]), ([NULL]), ([2, 3]);
SELECT * FROM test0 ORDER BY i;
SELECT * FROM test0 ORDER BY i DESC;
INSERT INTO test0 VALUES (NULL);
SELECT * FROM test0 ORDER BY i;
SELECT * FROM test0 ORDER BY i NULLS LAST;
SELECT * FROM test0 ORDER BY i DESC;
SELECT * FROM test0 ORDER BY i DESC NULLS LAST;
CREATE TABLE test2 (i tinyint[][]);
INSERT INTO test2 VALUES ([[2]]), ([[1]]), ([NULL, []]), ([[1], [2]]), ([]), ([[]]), ([[2], [2]]), ([NULL]), (NULL), ([[2], [3]]);
SELECT * FROM test2 ORDER BY i;
SELECT * FROM test2 ORDER BY i DESC;
CREATE TABLE test3 (i tinyint[][]);
INSERT INTO test3 VALUES ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], []]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [5, 5, 5, 5, 1]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [5, 5, 5, 5, NULL]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [5, 5, 5, 5, 2]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [NULL]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], NULL]);
SELECT * FROM test3 ORDER BY i;
SELECT * FROM test3 ORDER BY i DESC;
CREATE TABLE test4 (i tinyint[][]);
INSERT INTO test4 VALUES ([[NULL, NULL, 0], [1, NULL, 1]]), ([[NULL, NULL, 1]]), ([[NULL, NULL, 0], [1, NULL, 0]]), ([[0, NULL, NULL, 1]]), ([[0, NULL, NULL, 0]]);
SELECT * FROM test4 ORDER BY i;
SELECT * FROM test4 ORDER BY i DESC;
CREATE TABLE test10 (s STRUCT(i tinyint, j tinyint));
INSERT INTO test10 values
({'i': 2, 'j': NULL}),
({'i': 1, 'j': NULL}),
({'i': 2, 'j': 3}),
({'i': 1, 'j': 2}),
({'i': 2, 'j': 2}),
({'i': NULL, 'j': NULL}),
(NULL),
({'i': 2, 'j': 3});
SELECT * FROM test10 ORDER BY s;
SELECT * FROM test10 ORDER BY s DESC;
CREATE TABLE test11 (s STRUCT(s1 STRUCT(i tinyint, j tinyint)));
INSERT INTO test11 VALUES ({'s1': NULL}), (NULL), ({'s1': {'i': NULL, 'j': 1}}), ({'s1': {'i': 0, 'j': NULL}}), ({'s1': {'i': NULL, 'j': NULL}}), ({'s1': {'i': 0, 'j': 1}});
SELECT * FROM test11 ORDER BY s;
SELECT * FROM test11 ORDER BY s DESC;
CREATE TABLE test13 (s STRUCT(a tinyint, b tinyint, c tinyint, d tinyint, e tinyint, f tinyint, g tinyint, h tinyint, i tinyint, j tinyint));
INSERT INTO test13 VALUES
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': 7, 'i': 8, 'j': 8}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': 7, 'i': 8, 'j': 9}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': NULL, 'f': NULL, 'g': NULL, 'h': NULL, 'i': 8, 'j': 8}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': NULL, 'f': NULL, 'g': NULL, 'h': NULL, 'i': 8, 'j': 9}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': NULL, 'i': NULL, 'j': 8}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': NULL, 'i': NULL, 'j': 9});
SELECT * FROM test13 ORDER BY s;
SELECT * FROM test13 ORDER BY s DESC;
CREATE TABLE test20 (l STRUCT(i tinyint)[]);
INSERT INTO test20 VALUES
([{'i': NULL}, {'i': NULL}, {'i': 0}, {'i': NULL}, {'i': NULL}, {'i': 0}]),
([{'i': NULL}, {'i': NULL}, {'i': 0}, {'i': NULL}, {'i': NULL}, {'i': 1}]),
([{'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': 1}]),
([{'i': NULL}, {'i': NULL}, {'i': 0}, {'i': NULL}, {'i': NULL}, {'i': NULL}]),
([{'i': NULL}, {'i': NULL}, {'i': 1}, {'i': NULL}, {'i': NULL}, {'i': 0}]),
([{'i': NULL}, {'i': NULL}, {'i': 1}, {'i': NULL}, {'i': NULL}, {'i': 1}]),
([{'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': 0}]),
([{'i': NULL}, {'i': NULL}, {'i': 1}, {'i': NULL}, {'i': NULL}, {'i': NULL}]);
SELECT * FROM test20 ORDER BY l;
SELECT * FROM test20 ORDER BY l DESC;
CREATE TABLE test22 (s STRUCT(i tinyint[], j tinyint[]));
INSERT INTO test22 VALUES
({'i': [0, NULL], 'j': [NULL, 0]}),
({'i': [0, NULL], 'j': [NULL, 1]}),
({'i': [0, NULL], 'j': [1, 2]}),
({'i': [1, NULL], 'j': [2, NULL]}),
({'i': [0, 2], 'j': [2, NULL]}),
({'i': NULL, 'j': [2, NULL]}),
({'i': [0, 2], 'j': NULL}),
({'i': NULL, 'j': [2, 3]});
SELECT * FROM test22 ORDER BY s;
SELECT * FROM test22 ORDER BY s DESC;
CREATE TABLE test24 (l STRUCT(l1 STRUCT(i tinyint)[])[]);
INSERT INTO test24 VALUES
([{'l1': [{'i': 0}]}, {'l1': [{'i': 0}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': 1}, {'i': 2}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': 1}, {'i': 1}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': 0}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': NULL}]}, {'l1': [{'i': 0}]}]),
([{'l1': [{'i': NULL}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': NULL}]}, {'l1': [{'i': NULL}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': NULL}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': NULL}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': NULL}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': NULL}]}, {'l1': [{'i': NULL}]}]);
SELECT * FROM test24 ORDER BY l;
SELECT * FROM test24 ORDER BY l DESC;
DROP TABLE test0;
DROP TABLE test2;
DROP TABLE test3;
DROP TABLE test4;
DROP TABLE test10;
DROP TABLE test11;
DROP TABLE test13;
DROP TABLE test20;
DROP TABLE test22;
DROP TABLE test24;
PRAGMA debug_force_external=false;
CREATE TABLE test0 (i smallint[]);
INSERT INTO test0 VALUES ([2]), ([1]), ([1, 2]), ([]), ([2, 2]), ([NULL]), ([2, 3]);
SELECT * FROM test0 ORDER BY i;
SELECT * FROM test0 ORDER BY i DESC;
INSERT INTO test0 VALUES (NULL);
SELECT * FROM test0 ORDER BY i;
SELECT * FROM test0 ORDER BY i NULLS LAST;
SELECT * FROM test0 ORDER BY i DESC;
SELECT * FROM test0 ORDER BY i DESC NULLS LAST;
CREATE TABLE test2 (i smallint[][]);
INSERT INTO test2 VALUES ([[2]]), ([[1]]), ([NULL, []]), ([[1], [2]]), ([]), ([[]]), ([[2], [2]]), ([NULL]), (NULL), ([[2], [3]]);
SELECT * FROM test2 ORDER BY i;
SELECT * FROM test2 ORDER BY i DESC;
CREATE TABLE test3 (i smallint[][]);
INSERT INTO test3 VALUES ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], []]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [5, 5, 5, 5, 1]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [5, 5, 5, 5, NULL]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [5, 5, 5, 5, 2]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [NULL]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], NULL]);
SELECT * FROM test3 ORDER BY i;
SELECT * FROM test3 ORDER BY i DESC;
CREATE TABLE test4 (i smallint[][]);
INSERT INTO test4 VALUES ([[NULL, NULL, 0], [1, NULL, 1]]), ([[NULL, NULL, 1]]), ([[NULL, NULL, 0], [1, NULL, 0]]), ([[0, NULL, NULL, 1]]), ([[0, NULL, NULL, 0]]);
SELECT * FROM test4 ORDER BY i;
SELECT * FROM test4 ORDER BY i DESC;
CREATE TABLE test10 (s STRUCT(i smallint, j smallint));
INSERT INTO test10 values
({'i': 2, 'j': NULL}),
({'i': 1, 'j': NULL}),
({'i': 2, 'j': 3}),
({'i': 1, 'j': 2}),
({'i': 2, 'j': 2}),
({'i': NULL, 'j': NULL}),
(NULL),
({'i': 2, 'j': 3});
SELECT * FROM test10 ORDER BY s;
SELECT * FROM test10 ORDER BY s DESC;
CREATE TABLE test11 (s STRUCT(s1 STRUCT(i smallint, j smallint)));
INSERT INTO test11 VALUES ({'s1': NULL}), (NULL), ({'s1': {'i': NULL, 'j': 1}}), ({'s1': {'i': 0, 'j': NULL}}), ({'s1': {'i': NULL, 'j': NULL}}), ({'s1': {'i': 0, 'j': 1}});
SELECT * FROM test11 ORDER BY s;
SELECT * FROM test11 ORDER BY s DESC;
CREATE TABLE test13 (s STRUCT(a smallint, b smallint, c smallint, d smallint, e smallint, f smallint, g smallint, h smallint, i smallint, j smallint));
INSERT INTO test13 VALUES
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': 7, 'i': 8, 'j': 8}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': 7, 'i': 8, 'j': 9}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': NULL, 'f': NULL, 'g': NULL, 'h': NULL, 'i': 8, 'j': 8}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': NULL, 'f': NULL, 'g': NULL, 'h': NULL, 'i': 8, 'j': 9}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': NULL, 'i': NULL, 'j': 8}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': NULL, 'i': NULL, 'j': 9});
SELECT * FROM test13 ORDER BY s;
SELECT * FROM test13 ORDER BY s DESC;
CREATE TABLE test20 (l STRUCT(i smallint)[]);
INSERT INTO test20 VALUES
([{'i': NULL}, {'i': NULL}, {'i': 0}, {'i': NULL}, {'i': NULL}, {'i': 0}]),
([{'i': NULL}, {'i': NULL}, {'i': 0}, {'i': NULL}, {'i': NULL}, {'i': 1}]),
([{'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': 1}]),
([{'i': NULL}, {'i': NULL}, {'i': 0}, {'i': NULL}, {'i': NULL}, {'i': NULL}]),
([{'i': NULL}, {'i': NULL}, {'i': 1}, {'i': NULL}, {'i': NULL}, {'i': 0}]),
([{'i': NULL}, {'i': NULL}, {'i': 1}, {'i': NULL}, {'i': NULL}, {'i': 1}]),
([{'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': 0}]),
([{'i': NULL}, {'i': NULL}, {'i': 1}, {'i': NULL}, {'i': NULL}, {'i': NULL}]);
SELECT * FROM test20 ORDER BY l;
SELECT * FROM test20 ORDER BY l DESC;
CREATE TABLE test22 (s STRUCT(i smallint[], j smallint[]));
INSERT INTO test22 VALUES
({'i': [0, NULL], 'j': [NULL, 0]}),
({'i': [0, NULL], 'j': [NULL, 1]}),
({'i': [0, NULL], 'j': [1, 2]}),
({'i': [1, NULL], 'j': [2, NULL]}),
({'i': [0, 2], 'j': [2, NULL]}),
({'i': NULL, 'j': [2, NULL]}),
({'i': [0, 2], 'j': NULL}),
({'i': NULL, 'j': [2, 3]});
SELECT * FROM test22 ORDER BY s;
SELECT * FROM test22 ORDER BY s DESC;
CREATE TABLE test24 (l STRUCT(l1 STRUCT(i smallint)[])[]);
INSERT INTO test24 VALUES
([{'l1': [{'i': 0}]}, {'l1': [{'i': 0}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': 1}, {'i': 2}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': 1}, {'i': 1}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': 0}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': NULL}]}, {'l1': [{'i': 0}]}]),
([{'l1': [{'i': NULL}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': NULL}]}, {'l1': [{'i': NULL}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': NULL}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': NULL}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': NULL}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': NULL}]}, {'l1': [{'i': NULL}]}]);
SELECT * FROM test24 ORDER BY l;
SELECT * FROM test24 ORDER BY l DESC;
DROP TABLE test0;
DROP TABLE test2;
DROP TABLE test3;
DROP TABLE test4;
DROP TABLE test10;
DROP TABLE test11;
DROP TABLE test13;
DROP TABLE test20;
DROP TABLE test22;
DROP TABLE test24;
PRAGMA debug_force_external=false;
CREATE TABLE test0 (i integer[]);
INSERT INTO test0 VALUES ([2]), ([1]), ([1, 2]), ([]), ([2, 2]), ([NULL]), ([2, 3]);
SELECT * FROM test0 ORDER BY i;
SELECT * FROM test0 ORDER BY i DESC;
INSERT INTO test0 VALUES (NULL);
SELECT * FROM test0 ORDER BY i;
SELECT * FROM test0 ORDER BY i NULLS LAST;
SELECT * FROM test0 ORDER BY i DESC;
SELECT * FROM test0 ORDER BY i DESC NULLS LAST;
CREATE TABLE test2 (i integer[][]);
INSERT INTO test2 VALUES ([[2]]), ([[1]]), ([NULL, []]), ([[1], [2]]), ([]), ([[]]), ([[2], [2]]), ([NULL]), (NULL), ([[2], [3]]);
SELECT * FROM test2 ORDER BY i;
SELECT * FROM test2 ORDER BY i DESC;
CREATE TABLE test3 (i integer[][]);
INSERT INTO test3 VALUES ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], []]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [5, 5, 5, 5, 1]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [5, 5, 5, 5, NULL]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [5, 5, 5, 5, 2]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [NULL]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], NULL]);
SELECT * FROM test3 ORDER BY i;
SELECT * FROM test3 ORDER BY i DESC;
CREATE TABLE test4 (i integer[][]);
INSERT INTO test4 VALUES ([[NULL, NULL, 0], [1, NULL, 1]]), ([[NULL, NULL, 1]]), ([[NULL, NULL, 0], [1, NULL, 0]]), ([[0, NULL, NULL, 1]]), ([[0, NULL, NULL, 0]]);
SELECT * FROM test4 ORDER BY i;
SELECT * FROM test4 ORDER BY i DESC;
CREATE TABLE test10 (s STRUCT(i integer, j integer));
INSERT INTO test10 values
({'i': 2, 'j': NULL}),
({'i': 1, 'j': NULL}),
({'i': 2, 'j': 3}),
({'i': 1, 'j': 2}),
({'i': 2, 'j': 2}),
({'i': NULL, 'j': NULL}),
(NULL),
({'i': 2, 'j': 3});
SELECT * FROM test10 ORDER BY s;
SELECT * FROM test10 ORDER BY s DESC;
CREATE TABLE test11 (s STRUCT(s1 STRUCT(i integer, j integer)));
INSERT INTO test11 VALUES ({'s1': NULL}), (NULL), ({'s1': {'i': NULL, 'j': 1}}), ({'s1': {'i': 0, 'j': NULL}}), ({'s1': {'i': NULL, 'j': NULL}}), ({'s1': {'i': 0, 'j': 1}});
SELECT * FROM test11 ORDER BY s;
SELECT * FROM test11 ORDER BY s DESC;
CREATE TABLE test13 (s STRUCT(a integer, b integer, c integer, d integer, e integer, f integer, g integer, h integer, i integer, j integer));
INSERT INTO test13 VALUES
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': 7, 'i': 8, 'j': 8}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': 7, 'i': 8, 'j': 9}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': NULL, 'f': NULL, 'g': NULL, 'h': NULL, 'i': 8, 'j': 8}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': NULL, 'f': NULL, 'g': NULL, 'h': NULL, 'i': 8, 'j': 9}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': NULL, 'i': NULL, 'j': 8}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': NULL, 'i': NULL, 'j': 9});
SELECT * FROM test13 ORDER BY s;
SELECT * FROM test13 ORDER BY s DESC;
CREATE TABLE test20 (l STRUCT(i integer)[]);
INSERT INTO test20 VALUES
([{'i': NULL}, {'i': NULL}, {'i': 0}, {'i': NULL}, {'i': NULL}, {'i': 0}]),
([{'i': NULL}, {'i': NULL}, {'i': 0}, {'i': NULL}, {'i': NULL}, {'i': 1}]),
([{'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': 1}]),
([{'i': NULL}, {'i': NULL}, {'i': 0}, {'i': NULL}, {'i': NULL}, {'i': NULL}]),
([{'i': NULL}, {'i': NULL}, {'i': 1}, {'i': NULL}, {'i': NULL}, {'i': 0}]),
([{'i': NULL}, {'i': NULL}, {'i': 1}, {'i': NULL}, {'i': NULL}, {'i': 1}]),
([{'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': 0}]),
([{'i': NULL}, {'i': NULL}, {'i': 1}, {'i': NULL}, {'i': NULL}, {'i': NULL}]);
SELECT * FROM test20 ORDER BY l;
SELECT * FROM test20 ORDER BY l DESC;
CREATE TABLE test22 (s STRUCT(i integer[], j integer[]));
INSERT INTO test22 VALUES
({'i': [0, NULL], 'j': [NULL, 0]}),
({'i': [0, NULL], 'j': [NULL, 1]}),
({'i': [0, NULL], 'j': [1, 2]}),
({'i': [1, NULL], 'j': [2, NULL]}),
({'i': [0, 2], 'j': [2, NULL]}),
({'i': NULL, 'j': [2, NULL]}),
({'i': [0, 2], 'j': NULL}),
({'i': NULL, 'j': [2, 3]});
SELECT * FROM test22 ORDER BY s;
SELECT * FROM test22 ORDER BY s DESC;
CREATE TABLE test24 (l STRUCT(l1 STRUCT(i integer)[])[]);
INSERT INTO test24 VALUES
([{'l1': [{'i': 0}]}, {'l1': [{'i': 0}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': 1}, {'i': 2}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': 1}, {'i': 1}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': 0}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': NULL}]}, {'l1': [{'i': 0}]}]),
([{'l1': [{'i': NULL}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': NULL}]}, {'l1': [{'i': NULL}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': NULL}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': NULL}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': NULL}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': NULL}]}, {'l1': [{'i': NULL}]}]);
SELECT * FROM test24 ORDER BY l;
SELECT * FROM test24 ORDER BY l DESC;
DROP TABLE test0;
DROP TABLE test2;
DROP TABLE test3;
DROP TABLE test4;
DROP TABLE test10;
DROP TABLE test11;
DROP TABLE test13;
DROP TABLE test20;
DROP TABLE test22;
DROP TABLE test24;
PRAGMA debug_force_external=false;
CREATE TABLE test0 (i bigint[]);
INSERT INTO test0 VALUES ([2]), ([1]), ([1, 2]), ([]), ([2, 2]), ([NULL]), ([2, 3]);
SELECT * FROM test0 ORDER BY i;
SELECT * FROM test0 ORDER BY i DESC;
INSERT INTO test0 VALUES (NULL);
SELECT * FROM test0 ORDER BY i;
SELECT * FROM test0 ORDER BY i NULLS LAST;
SELECT * FROM test0 ORDER BY i DESC;
SELECT * FROM test0 ORDER BY i DESC NULLS LAST;
CREATE TABLE test2 (i bigint[][]);
INSERT INTO test2 VALUES ([[2]]), ([[1]]), ([NULL, []]), ([[1], [2]]), ([]), ([[]]), ([[2], [2]]), ([NULL]), (NULL), ([[2], [3]]);
SELECT * FROM test2 ORDER BY i;
SELECT * FROM test2 ORDER BY i DESC;
CREATE TABLE test3 (i bigint[][]);
INSERT INTO test3 VALUES ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], []]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [5, 5, 5, 5, 1]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [5, 5, 5, 5, NULL]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [5, 5, 5, 5, 2]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [NULL]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], NULL]);
SELECT * FROM test3 ORDER BY i;
SELECT * FROM test3 ORDER BY i DESC;
CREATE TABLE test4 (i bigint[][]);
INSERT INTO test4 VALUES ([[NULL, NULL, 0], [1, NULL, 1]]), ([[NULL, NULL, 1]]), ([[NULL, NULL, 0], [1, NULL, 0]]), ([[0, NULL, NULL, 1]]), ([[0, NULL, NULL, 0]]);
SELECT * FROM test4 ORDER BY i;
SELECT * FROM test4 ORDER BY i DESC;
CREATE TABLE test10 (s STRUCT(i bigint, j bigint));
INSERT INTO test10 values
({'i': 2, 'j': NULL}),
({'i': 1, 'j': NULL}),
({'i': 2, 'j': 3}),
({'i': 1, 'j': 2}),
({'i': 2, 'j': 2}),
({'i': NULL, 'j': NULL}),
(NULL),
({'i': 2, 'j': 3});
SELECT * FROM test10 ORDER BY s;
SELECT * FROM test10 ORDER BY s DESC;
CREATE TABLE test11 (s STRUCT(s1 STRUCT(i bigint, j bigint)));
INSERT INTO test11 VALUES ({'s1': NULL}), (NULL), ({'s1': {'i': NULL, 'j': 1}}), ({'s1': {'i': 0, 'j': NULL}}), ({'s1': {'i': NULL, 'j': NULL}}), ({'s1': {'i': 0, 'j': 1}});
SELECT * FROM test11 ORDER BY s;
SELECT * FROM test11 ORDER BY s DESC;
CREATE TABLE test13 (s STRUCT(a bigint, b bigint, c bigint, d bigint, e bigint, f bigint, g bigint, h bigint, i bigint, j bigint));
INSERT INTO test13 VALUES
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': 7, 'i': 8, 'j': 8}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': 7, 'i': 8, 'j': 9}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': NULL, 'f': NULL, 'g': NULL, 'h': NULL, 'i': 8, 'j': 8}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': NULL, 'f': NULL, 'g': NULL, 'h': NULL, 'i': 8, 'j': 9}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': NULL, 'i': NULL, 'j': 8}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': NULL, 'i': NULL, 'j': 9});
SELECT * FROM test13 ORDER BY s;
SELECT * FROM test13 ORDER BY s DESC;
CREATE TABLE test20 (l STRUCT(i bigint)[]);
INSERT INTO test20 VALUES
([{'i': NULL}, {'i': NULL}, {'i': 0}, {'i': NULL}, {'i': NULL}, {'i': 0}]),
([{'i': NULL}, {'i': NULL}, {'i': 0}, {'i': NULL}, {'i': NULL}, {'i': 1}]),
([{'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': 1}]),
([{'i': NULL}, {'i': NULL}, {'i': 0}, {'i': NULL}, {'i': NULL}, {'i': NULL}]),
([{'i': NULL}, {'i': NULL}, {'i': 1}, {'i': NULL}, {'i': NULL}, {'i': 0}]),
([{'i': NULL}, {'i': NULL}, {'i': 1}, {'i': NULL}, {'i': NULL}, {'i': 1}]),
([{'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': 0}]),
([{'i': NULL}, {'i': NULL}, {'i': 1}, {'i': NULL}, {'i': NULL}, {'i': NULL}]);
SELECT * FROM test20 ORDER BY l;
SELECT * FROM test20 ORDER BY l DESC;
CREATE TABLE test22 (s STRUCT(i bigint[], j bigint[]));
INSERT INTO test22 VALUES
({'i': [0, NULL], 'j': [NULL, 0]}),
({'i': [0, NULL], 'j': [NULL, 1]}),
({'i': [0, NULL], 'j': [1, 2]}),
({'i': [1, NULL], 'j': [2, NULL]}),
({'i': [0, 2], 'j': [2, NULL]}),
({'i': NULL, 'j': [2, NULL]}),
({'i': [0, 2], 'j': NULL}),
({'i': NULL, 'j': [2, 3]});
SELECT * FROM test22 ORDER BY s;
SELECT * FROM test22 ORDER BY s DESC;
CREATE TABLE test24 (l STRUCT(l1 STRUCT(i bigint)[])[]);
INSERT INTO test24 VALUES
([{'l1': [{'i': 0}]}, {'l1': [{'i': 0}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': 1}, {'i': 2}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': 1}, {'i': 1}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': 0}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': NULL}]}, {'l1': [{'i': 0}]}]),
([{'l1': [{'i': NULL}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': NULL}]}, {'l1': [{'i': NULL}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': NULL}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': NULL}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': NULL}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': NULL}]}, {'l1': [{'i': NULL}]}]);
SELECT * FROM test24 ORDER BY l;
SELECT * FROM test24 ORDER BY l DESC;
DROP TABLE test0;
DROP TABLE test2;
DROP TABLE test3;
DROP TABLE test4;
DROP TABLE test10;
DROP TABLE test11;
DROP TABLE test13;
DROP TABLE test20;
DROP TABLE test22;
DROP TABLE test24;
PRAGMA debug_force_external=false;
CREATE TABLE test0 (i hugeint[]);
INSERT INTO test0 VALUES ([2]), ([1]), ([1, 2]), ([]), ([2, 2]), ([NULL]), ([2, 3]);
SELECT * FROM test0 ORDER BY i;
SELECT * FROM test0 ORDER BY i DESC;
INSERT INTO test0 VALUES (NULL);
SELECT * FROM test0 ORDER BY i;
SELECT * FROM test0 ORDER BY i NULLS LAST;
SELECT * FROM test0 ORDER BY i DESC;
SELECT * FROM test0 ORDER BY i DESC NULLS LAST;
CREATE TABLE test2 (i hugeint[][]);
INSERT INTO test2 VALUES ([[2]]), ([[1]]), ([NULL, []]), ([[1], [2]]), ([]), ([[]]), ([[2], [2]]), ([NULL]), (NULL), ([[2], [3]]);
SELECT * FROM test2 ORDER BY i;
SELECT * FROM test2 ORDER BY i DESC;
CREATE TABLE test3 (i hugeint[][]);
INSERT INTO test3 VALUES ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], []]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [5, 5, 5, 5, 1]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [5, 5, 5, 5, NULL]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [5, 5, 5, 5, 2]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [NULL]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], NULL]);
SELECT * FROM test3 ORDER BY i;
SELECT * FROM test3 ORDER BY i DESC;
CREATE TABLE test4 (i hugeint[][]);
INSERT INTO test4 VALUES ([[NULL, NULL, 0], [1, NULL, 1]]), ([[NULL, NULL, 1]]), ([[NULL, NULL, 0], [1, NULL, 0]]), ([[0, NULL, NULL, 1]]), ([[0, NULL, NULL, 0]]);
SELECT * FROM test4 ORDER BY i;
SELECT * FROM test4 ORDER BY i DESC;
CREATE TABLE test10 (s STRUCT(i hugeint, j hugeint));
INSERT INTO test10 values
({'i': 2, 'j': NULL}),
({'i': 1, 'j': NULL}),
({'i': 2, 'j': 3}),
({'i': 1, 'j': 2}),
({'i': 2, 'j': 2}),
({'i': NULL, 'j': NULL}),
(NULL),
({'i': 2, 'j': 3});
SELECT * FROM test10 ORDER BY s;
SELECT * FROM test10 ORDER BY s DESC;
CREATE TABLE test11 (s STRUCT(s1 STRUCT(i hugeint, j hugeint)));
INSERT INTO test11 VALUES ({'s1': NULL}), (NULL), ({'s1': {'i': NULL, 'j': 1}}), ({'s1': {'i': 0, 'j': NULL}}), ({'s1': {'i': NULL, 'j': NULL}}), ({'s1': {'i': 0, 'j': 1}});
SELECT * FROM test11 ORDER BY s;
SELECT * FROM test11 ORDER BY s DESC;
CREATE TABLE test13 (s STRUCT(a hugeint, b hugeint, c hugeint, d hugeint, e hugeint, f hugeint, g hugeint, h hugeint, i hugeint, j hugeint));
INSERT INTO test13 VALUES
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': 7, 'i': 8, 'j': 8}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': 7, 'i': 8, 'j': 9}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': NULL, 'f': NULL, 'g': NULL, 'h': NULL, 'i': 8, 'j': 8}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': NULL, 'f': NULL, 'g': NULL, 'h': NULL, 'i': 8, 'j': 9}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': NULL, 'i': NULL, 'j': 8}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': NULL, 'i': NULL, 'j': 9});
SELECT * FROM test13 ORDER BY s;
SELECT * FROM test13 ORDER BY s DESC;
CREATE TABLE test20 (l STRUCT(i hugeint)[]);
INSERT INTO test20 VALUES
([{'i': NULL}, {'i': NULL}, {'i': 0}, {'i': NULL}, {'i': NULL}, {'i': 0}]),
([{'i': NULL}, {'i': NULL}, {'i': 0}, {'i': NULL}, {'i': NULL}, {'i': 1}]),
([{'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': 1}]),
([{'i': NULL}, {'i': NULL}, {'i': 0}, {'i': NULL}, {'i': NULL}, {'i': NULL}]),
([{'i': NULL}, {'i': NULL}, {'i': 1}, {'i': NULL}, {'i': NULL}, {'i': 0}]),
([{'i': NULL}, {'i': NULL}, {'i': 1}, {'i': NULL}, {'i': NULL}, {'i': 1}]),
([{'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': 0}]),
([{'i': NULL}, {'i': NULL}, {'i': 1}, {'i': NULL}, {'i': NULL}, {'i': NULL}]);
SELECT * FROM test20 ORDER BY l;
SELECT * FROM test20 ORDER BY l DESC;
CREATE TABLE test22 (s STRUCT(i hugeint[], j hugeint[]));
INSERT INTO test22 VALUES
({'i': [0, NULL], 'j': [NULL, 0]}),
({'i': [0, NULL], 'j': [NULL, 1]}),
({'i': [0, NULL], 'j': [1, 2]}),
({'i': [1, NULL], 'j': [2, NULL]}),
({'i': [0, 2], 'j': [2, NULL]}),
({'i': NULL, 'j': [2, NULL]}),
({'i': [0, 2], 'j': NULL}),
({'i': NULL, 'j': [2, 3]});
SELECT * FROM test22 ORDER BY s;
SELECT * FROM test22 ORDER BY s DESC;
CREATE TABLE test24 (l STRUCT(l1 STRUCT(i hugeint)[])[]);
INSERT INTO test24 VALUES
([{'l1': [{'i': 0}]}, {'l1': [{'i': 0}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': 1}, {'i': 2}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': 1}, {'i': 1}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': 0}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': NULL}]}, {'l1': [{'i': 0}]}]),
([{'l1': [{'i': NULL}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': NULL}]}, {'l1': [{'i': NULL}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': NULL}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': NULL}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': NULL}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': NULL}]}, {'l1': [{'i': NULL}]}]);
SELECT * FROM test24 ORDER BY l;
SELECT * FROM test24 ORDER BY l DESC;
DROP TABLE test0;
DROP TABLE test2;
DROP TABLE test3;
DROP TABLE test4;
DROP TABLE test10;
DROP TABLE test11;
DROP TABLE test13;
DROP TABLE test20;
DROP TABLE test22;
DROP TABLE test24;
PRAGMA debug_force_external=false;
CREATE TABLE test0 (i utinyint[]);
INSERT INTO test0 VALUES ([2]), ([1]), ([1, 2]), ([]), ([2, 2]), ([NULL]), ([2, 3]);
SELECT * FROM test0 ORDER BY i;
SELECT * FROM test0 ORDER BY i DESC;
INSERT INTO test0 VALUES (NULL);
SELECT * FROM test0 ORDER BY i;
SELECT * FROM test0 ORDER BY i NULLS LAST;
SELECT * FROM test0 ORDER BY i DESC;
SELECT * FROM test0 ORDER BY i DESC NULLS LAST;
CREATE TABLE test2 (i utinyint[][]);
INSERT INTO test2 VALUES ([[2]]), ([[1]]), ([NULL, []]), ([[1], [2]]), ([]), ([[]]), ([[2], [2]]), ([NULL]), (NULL), ([[2], [3]]);
SELECT * FROM test2 ORDER BY i;
SELECT * FROM test2 ORDER BY i DESC;
CREATE TABLE test3 (i utinyint[][]);
INSERT INTO test3 VALUES ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], []]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [5, 5, 5, 5, 1]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [5, 5, 5, 5, NULL]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [5, 5, 5, 5, 2]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [NULL]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], NULL]);
SELECT * FROM test3 ORDER BY i;
SELECT * FROM test3 ORDER BY i DESC;
CREATE TABLE test4 (i utinyint[][]);
INSERT INTO test4 VALUES ([[NULL, NULL, 0], [1, NULL, 1]]), ([[NULL, NULL, 1]]), ([[NULL, NULL, 0], [1, NULL, 0]]), ([[0, NULL, NULL, 1]]), ([[0, NULL, NULL, 0]]);
SELECT * FROM test4 ORDER BY i;
SELECT * FROM test4 ORDER BY i DESC;
CREATE TABLE test10 (s STRUCT(i utinyint, j utinyint));
INSERT INTO test10 values
({'i': 2, 'j': NULL}),
({'i': 1, 'j': NULL}),
({'i': 2, 'j': 3}),
({'i': 1, 'j': 2}),
({'i': 2, 'j': 2}),
({'i': NULL, 'j': NULL}),
(NULL),
({'i': 2, 'j': 3});
SELECT * FROM test10 ORDER BY s;
SELECT * FROM test10 ORDER BY s DESC;
CREATE TABLE test11 (s STRUCT(s1 STRUCT(i utinyint, j utinyint)));
INSERT INTO test11 VALUES ({'s1': NULL}), (NULL), ({'s1': {'i': NULL, 'j': 1}}), ({'s1': {'i': 0, 'j': NULL}}), ({'s1': {'i': NULL, 'j': NULL}}), ({'s1': {'i': 0, 'j': 1}});
SELECT * FROM test11 ORDER BY s;
SELECT * FROM test11 ORDER BY s DESC;
CREATE TABLE test13 (s STRUCT(a utinyint, b utinyint, c utinyint, d utinyint, e utinyint, f utinyint, g utinyint, h utinyint, i utinyint, j utinyint));
INSERT INTO test13 VALUES
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': 7, 'i': 8, 'j': 8}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': 7, 'i': 8, 'j': 9}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': NULL, 'f': NULL, 'g': NULL, 'h': NULL, 'i': 8, 'j': 8}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': NULL, 'f': NULL, 'g': NULL, 'h': NULL, 'i': 8, 'j': 9}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': NULL, 'i': NULL, 'j': 8}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': NULL, 'i': NULL, 'j': 9});
SELECT * FROM test13 ORDER BY s;
SELECT * FROM test13 ORDER BY s DESC;
CREATE TABLE test20 (l STRUCT(i utinyint)[]);
INSERT INTO test20 VALUES
([{'i': NULL}, {'i': NULL}, {'i': 0}, {'i': NULL}, {'i': NULL}, {'i': 0}]),
([{'i': NULL}, {'i': NULL}, {'i': 0}, {'i': NULL}, {'i': NULL}, {'i': 1}]),
([{'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': 1}]),
([{'i': NULL}, {'i': NULL}, {'i': 0}, {'i': NULL}, {'i': NULL}, {'i': NULL}]),
([{'i': NULL}, {'i': NULL}, {'i': 1}, {'i': NULL}, {'i': NULL}, {'i': 0}]),
([{'i': NULL}, {'i': NULL}, {'i': 1}, {'i': NULL}, {'i': NULL}, {'i': 1}]),
([{'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': 0}]),
([{'i': NULL}, {'i': NULL}, {'i': 1}, {'i': NULL}, {'i': NULL}, {'i': NULL}]);
SELECT * FROM test20 ORDER BY l;
SELECT * FROM test20 ORDER BY l DESC;
CREATE TABLE test22 (s STRUCT(i utinyint[], j utinyint[]));
INSERT INTO test22 VALUES
({'i': [0, NULL], 'j': [NULL, 0]}),
({'i': [0, NULL], 'j': [NULL, 1]}),
({'i': [0, NULL], 'j': [1, 2]}),
({'i': [1, NULL], 'j': [2, NULL]}),
({'i': [0, 2], 'j': [2, NULL]}),
({'i': NULL, 'j': [2, NULL]}),
({'i': [0, 2], 'j': NULL}),
({'i': NULL, 'j': [2, 3]});
SELECT * FROM test22 ORDER BY s;
SELECT * FROM test22 ORDER BY s DESC;
CREATE TABLE test24 (l STRUCT(l1 STRUCT(i utinyint)[])[]);
INSERT INTO test24 VALUES
([{'l1': [{'i': 0}]}, {'l1': [{'i': 0}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': 1}, {'i': 2}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': 1}, {'i': 1}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': 0}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': NULL}]}, {'l1': [{'i': 0}]}]),
([{'l1': [{'i': NULL}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': NULL}]}, {'l1': [{'i': NULL}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': NULL}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': NULL}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': NULL}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': NULL}]}, {'l1': [{'i': NULL}]}]);
SELECT * FROM test24 ORDER BY l;
SELECT * FROM test24 ORDER BY l DESC;
DROP TABLE test0;
DROP TABLE test2;
DROP TABLE test3;
DROP TABLE test4;
DROP TABLE test10;
DROP TABLE test11;
DROP TABLE test13;
DROP TABLE test20;
DROP TABLE test22;
DROP TABLE test24;
PRAGMA debug_force_external=false;
CREATE TABLE test0 (i usmallint[]);
INSERT INTO test0 VALUES ([2]), ([1]), ([1, 2]), ([]), ([2, 2]), ([NULL]), ([2, 3]);
SELECT * FROM test0 ORDER BY i;
SELECT * FROM test0 ORDER BY i DESC;
INSERT INTO test0 VALUES (NULL);
SELECT * FROM test0 ORDER BY i;
SELECT * FROM test0 ORDER BY i NULLS LAST;
SELECT * FROM test0 ORDER BY i DESC;
SELECT * FROM test0 ORDER BY i DESC NULLS LAST;
CREATE TABLE test2 (i usmallint[][]);
INSERT INTO test2 VALUES ([[2]]), ([[1]]), ([NULL, []]), ([[1], [2]]), ([]), ([[]]), ([[2], [2]]), ([NULL]), (NULL), ([[2], [3]]);
SELECT * FROM test2 ORDER BY i;
SELECT * FROM test2 ORDER BY i DESC;
CREATE TABLE test3 (i usmallint[][]);
INSERT INTO test3 VALUES ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], []]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [5, 5, 5, 5, 1]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [5, 5, 5, 5, NULL]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [5, 5, 5, 5, 2]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [NULL]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], NULL]);
SELECT * FROM test3 ORDER BY i;
SELECT * FROM test3 ORDER BY i DESC;
CREATE TABLE test4 (i usmallint[][]);
INSERT INTO test4 VALUES ([[NULL, NULL, 0], [1, NULL, 1]]), ([[NULL, NULL, 1]]), ([[NULL, NULL, 0], [1, NULL, 0]]), ([[0, NULL, NULL, 1]]), ([[0, NULL, NULL, 0]]);
SELECT * FROM test4 ORDER BY i;
SELECT * FROM test4 ORDER BY i DESC;
CREATE TABLE test10 (s STRUCT(i usmallint, j usmallint));
INSERT INTO test10 values
({'i': 2, 'j': NULL}),
({'i': 1, 'j': NULL}),
({'i': 2, 'j': 3}),
({'i': 1, 'j': 2}),
({'i': 2, 'j': 2}),
({'i': NULL, 'j': NULL}),
(NULL),
({'i': 2, 'j': 3});
SELECT * FROM test10 ORDER BY s;
SELECT * FROM test10 ORDER BY s DESC;
CREATE TABLE test11 (s STRUCT(s1 STRUCT(i usmallint, j usmallint)));
INSERT INTO test11 VALUES ({'s1': NULL}), (NULL), ({'s1': {'i': NULL, 'j': 1}}), ({'s1': {'i': 0, 'j': NULL}}), ({'s1': {'i': NULL, 'j': NULL}}), ({'s1': {'i': 0, 'j': 1}});
SELECT * FROM test11 ORDER BY s;
SELECT * FROM test11 ORDER BY s DESC;
CREATE TABLE test13 (s STRUCT(a usmallint, b usmallint, c usmallint, d usmallint, e usmallint, f usmallint, g usmallint, h usmallint, i usmallint, j usmallint));
INSERT INTO test13 VALUES
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': 7, 'i': 8, 'j': 8}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': 7, 'i': 8, 'j': 9}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': NULL, 'f': NULL, 'g': NULL, 'h': NULL, 'i': 8, 'j': 8}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': NULL, 'f': NULL, 'g': NULL, 'h': NULL, 'i': 8, 'j': 9}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': NULL, 'i': NULL, 'j': 8}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': NULL, 'i': NULL, 'j': 9});
SELECT * FROM test13 ORDER BY s;
SELECT * FROM test13 ORDER BY s DESC;
CREATE TABLE test20 (l STRUCT(i usmallint)[]);
INSERT INTO test20 VALUES
([{'i': NULL}, {'i': NULL}, {'i': 0}, {'i': NULL}, {'i': NULL}, {'i': 0}]),
([{'i': NULL}, {'i': NULL}, {'i': 0}, {'i': NULL}, {'i': NULL}, {'i': 1}]),
([{'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': 1}]),
([{'i': NULL}, {'i': NULL}, {'i': 0}, {'i': NULL}, {'i': NULL}, {'i': NULL}]),
([{'i': NULL}, {'i': NULL}, {'i': 1}, {'i': NULL}, {'i': NULL}, {'i': 0}]),
([{'i': NULL}, {'i': NULL}, {'i': 1}, {'i': NULL}, {'i': NULL}, {'i': 1}]),
([{'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': 0}]),
([{'i': NULL}, {'i': NULL}, {'i': 1}, {'i': NULL}, {'i': NULL}, {'i': NULL}]);
SELECT * FROM test20 ORDER BY l;
SELECT * FROM test20 ORDER BY l DESC;
CREATE TABLE test22 (s STRUCT(i usmallint[], j usmallint[]));
INSERT INTO test22 VALUES
({'i': [0, NULL], 'j': [NULL, 0]}),
({'i': [0, NULL], 'j': [NULL, 1]}),
({'i': [0, NULL], 'j': [1, 2]}),
({'i': [1, NULL], 'j': [2, NULL]}),
({'i': [0, 2], 'j': [2, NULL]}),
({'i': NULL, 'j': [2, NULL]}),
({'i': [0, 2], 'j': NULL}),
({'i': NULL, 'j': [2, 3]});
SELECT * FROM test22 ORDER BY s;
SELECT * FROM test22 ORDER BY s DESC;
CREATE TABLE test24 (l STRUCT(l1 STRUCT(i usmallint)[])[]);
INSERT INTO test24 VALUES
([{'l1': [{'i': 0}]}, {'l1': [{'i': 0}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': 1}, {'i': 2}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': 1}, {'i': 1}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': 0}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': NULL}]}, {'l1': [{'i': 0}]}]),
([{'l1': [{'i': NULL}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': NULL}]}, {'l1': [{'i': NULL}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': NULL}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': NULL}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': NULL}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': NULL}]}, {'l1': [{'i': NULL}]}]);
SELECT * FROM test24 ORDER BY l;
SELECT * FROM test24 ORDER BY l DESC;
DROP TABLE test0;
DROP TABLE test2;
DROP TABLE test3;
DROP TABLE test4;
DROP TABLE test10;
DROP TABLE test11;
DROP TABLE test13;
DROP TABLE test20;
DROP TABLE test22;
DROP TABLE test24;
PRAGMA debug_force_external=false;
CREATE TABLE test0 (i uinteger[]);
INSERT INTO test0 VALUES ([2]), ([1]), ([1, 2]), ([]), ([2, 2]), ([NULL]), ([2, 3]);
SELECT * FROM test0 ORDER BY i;
SELECT * FROM test0 ORDER BY i DESC;
INSERT INTO test0 VALUES (NULL);
SELECT * FROM test0 ORDER BY i;
SELECT * FROM test0 ORDER BY i NULLS LAST;
SELECT * FROM test0 ORDER BY i DESC;
SELECT * FROM test0 ORDER BY i DESC NULLS LAST;
CREATE TABLE test2 (i uinteger[][]);
INSERT INTO test2 VALUES ([[2]]), ([[1]]), ([NULL, []]), ([[1], [2]]), ([]), ([[]]), ([[2], [2]]), ([NULL]), (NULL), ([[2], [3]]);
SELECT * FROM test2 ORDER BY i;
SELECT * FROM test2 ORDER BY i DESC;
CREATE TABLE test3 (i uinteger[][]);
INSERT INTO test3 VALUES ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], []]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [5, 5, 5, 5, 1]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [5, 5, 5, 5, NULL]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [5, 5, 5, 5, 2]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [NULL]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], NULL]);
SELECT * FROM test3 ORDER BY i;
SELECT * FROM test3 ORDER BY i DESC;
CREATE TABLE test4 (i uinteger[][]);
INSERT INTO test4 VALUES ([[NULL, NULL, 0], [1, NULL, 1]]), ([[NULL, NULL, 1]]), ([[NULL, NULL, 0], [1, NULL, 0]]), ([[0, NULL, NULL, 1]]), ([[0, NULL, NULL, 0]]);
SELECT * FROM test4 ORDER BY i;
SELECT * FROM test4 ORDER BY i DESC;
CREATE TABLE test10 (s STRUCT(i uinteger, j uinteger));
INSERT INTO test10 values
({'i': 2, 'j': NULL}),
({'i': 1, 'j': NULL}),
({'i': 2, 'j': 3}),
({'i': 1, 'j': 2}),
({'i': 2, 'j': 2}),
({'i': NULL, 'j': NULL}),
(NULL),
({'i': 2, 'j': 3});
SELECT * FROM test10 ORDER BY s;
SELECT * FROM test10 ORDER BY s DESC;
CREATE TABLE test11 (s STRUCT(s1 STRUCT(i uinteger, j uinteger)));
INSERT INTO test11 VALUES ({'s1': NULL}), (NULL), ({'s1': {'i': NULL, 'j': 1}}), ({'s1': {'i': 0, 'j': NULL}}), ({'s1': {'i': NULL, 'j': NULL}}), ({'s1': {'i': 0, 'j': 1}});
SELECT * FROM test11 ORDER BY s;
SELECT * FROM test11 ORDER BY s DESC;
CREATE TABLE test13 (s STRUCT(a uinteger, b uinteger, c uinteger, d uinteger, e uinteger, f uinteger, g uinteger, h uinteger, i uinteger, j uinteger));
INSERT INTO test13 VALUES
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': 7, 'i': 8, 'j': 8}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': 7, 'i': 8, 'j': 9}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': NULL, 'f': NULL, 'g': NULL, 'h': NULL, 'i': 8, 'j': 8}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': NULL, 'f': NULL, 'g': NULL, 'h': NULL, 'i': 8, 'j': 9}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': NULL, 'i': NULL, 'j': 8}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': NULL, 'i': NULL, 'j': 9});
SELECT * FROM test13 ORDER BY s;
SELECT * FROM test13 ORDER BY s DESC;
CREATE TABLE test20 (l STRUCT(i uinteger)[]);
INSERT INTO test20 VALUES
([{'i': NULL}, {'i': NULL}, {'i': 0}, {'i': NULL}, {'i': NULL}, {'i': 0}]),
([{'i': NULL}, {'i': NULL}, {'i': 0}, {'i': NULL}, {'i': NULL}, {'i': 1}]),
([{'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': 1}]),
([{'i': NULL}, {'i': NULL}, {'i': 0}, {'i': NULL}, {'i': NULL}, {'i': NULL}]),
([{'i': NULL}, {'i': NULL}, {'i': 1}, {'i': NULL}, {'i': NULL}, {'i': 0}]),
([{'i': NULL}, {'i': NULL}, {'i': 1}, {'i': NULL}, {'i': NULL}, {'i': 1}]),
([{'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': 0}]),
([{'i': NULL}, {'i': NULL}, {'i': 1}, {'i': NULL}, {'i': NULL}, {'i': NULL}]);
SELECT * FROM test20 ORDER BY l;
SELECT * FROM test20 ORDER BY l DESC;
CREATE TABLE test22 (s STRUCT(i uinteger[], j uinteger[]));
INSERT INTO test22 VALUES
({'i': [0, NULL], 'j': [NULL, 0]}),
({'i': [0, NULL], 'j': [NULL, 1]}),
({'i': [0, NULL], 'j': [1, 2]}),
({'i': [1, NULL], 'j': [2, NULL]}),
({'i': [0, 2], 'j': [2, NULL]}),
({'i': NULL, 'j': [2, NULL]}),
({'i': [0, 2], 'j': NULL}),
({'i': NULL, 'j': [2, 3]});
SELECT * FROM test22 ORDER BY s;
SELECT * FROM test22 ORDER BY s DESC;
CREATE TABLE test24 (l STRUCT(l1 STRUCT(i uinteger)[])[]);
INSERT INTO test24 VALUES
([{'l1': [{'i': 0}]}, {'l1': [{'i': 0}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': 1}, {'i': 2}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': 1}, {'i': 1}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': 0}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': NULL}]}, {'l1': [{'i': 0}]}]),
([{'l1': [{'i': NULL}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': NULL}]}, {'l1': [{'i': NULL}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': NULL}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': NULL}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': NULL}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': NULL}]}, {'l1': [{'i': NULL}]}]);
SELECT * FROM test24 ORDER BY l;
SELECT * FROM test24 ORDER BY l DESC;
DROP TABLE test0;
DROP TABLE test2;
DROP TABLE test3;
DROP TABLE test4;
DROP TABLE test10;
DROP TABLE test11;
DROP TABLE test13;
DROP TABLE test20;
DROP TABLE test22;
DROP TABLE test24;
PRAGMA debug_force_external=false;
CREATE TABLE test0 (i ubigint[]);
INSERT INTO test0 VALUES ([2]), ([1]), ([1, 2]), ([]), ([2, 2]), ([NULL]), ([2, 3]);
SELECT * FROM test0 ORDER BY i;
SELECT * FROM test0 ORDER BY i DESC;
INSERT INTO test0 VALUES (NULL);
SELECT * FROM test0 ORDER BY i;
SELECT * FROM test0 ORDER BY i NULLS LAST;
SELECT * FROM test0 ORDER BY i DESC;
SELECT * FROM test0 ORDER BY i DESC NULLS LAST;
CREATE TABLE test2 (i ubigint[][]);
INSERT INTO test2 VALUES ([[2]]), ([[1]]), ([NULL, []]), ([[1], [2]]), ([]), ([[]]), ([[2], [2]]), ([NULL]), (NULL), ([[2], [3]]);
SELECT * FROM test2 ORDER BY i;
SELECT * FROM test2 ORDER BY i DESC;
CREATE TABLE test3 (i ubigint[][]);
INSERT INTO test3 VALUES ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], []]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [5, 5, 5, 5, 1]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [5, 5, 5, 5, NULL]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [5, 5, 5, 5, 2]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [NULL]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], NULL]);
SELECT * FROM test3 ORDER BY i;
SELECT * FROM test3 ORDER BY i DESC;
CREATE TABLE test4 (i ubigint[][]);
INSERT INTO test4 VALUES ([[NULL, NULL, 0], [1, NULL, 1]]), ([[NULL, NULL, 1]]), ([[NULL, NULL, 0], [1, NULL, 0]]), ([[0, NULL, NULL, 1]]), ([[0, NULL, NULL, 0]]);
SELECT * FROM test4 ORDER BY i;
SELECT * FROM test4 ORDER BY i DESC;
CREATE TABLE test10 (s STRUCT(i ubigint, j ubigint));
INSERT INTO test10 values
({'i': 2, 'j': NULL}),
({'i': 1, 'j': NULL}),
({'i': 2, 'j': 3}),
({'i': 1, 'j': 2}),
({'i': 2, 'j': 2}),
({'i': NULL, 'j': NULL}),
(NULL),
({'i': 2, 'j': 3});
SELECT * FROM test10 ORDER BY s;
SELECT * FROM test10 ORDER BY s DESC;
CREATE TABLE test11 (s STRUCT(s1 STRUCT(i ubigint, j ubigint)));
INSERT INTO test11 VALUES ({'s1': NULL}), (NULL), ({'s1': {'i': NULL, 'j': 1}}), ({'s1': {'i': 0, 'j': NULL}}), ({'s1': {'i': NULL, 'j': NULL}}), ({'s1': {'i': 0, 'j': 1}});
SELECT * FROM test11 ORDER BY s;
SELECT * FROM test11 ORDER BY s DESC;
CREATE TABLE test13 (s STRUCT(a ubigint, b ubigint, c ubigint, d ubigint, e ubigint, f ubigint, g ubigint, h ubigint, i ubigint, j ubigint));
INSERT INTO test13 VALUES
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': 7, 'i': 8, 'j': 8}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': 7, 'i': 8, 'j': 9}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': NULL, 'f': NULL, 'g': NULL, 'h': NULL, 'i': 8, 'j': 8}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': NULL, 'f': NULL, 'g': NULL, 'h': NULL, 'i': 8, 'j': 9}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': NULL, 'i': NULL, 'j': 8}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': NULL, 'i': NULL, 'j': 9});
SELECT * FROM test13 ORDER BY s;
SELECT * FROM test13 ORDER BY s DESC;
CREATE TABLE test20 (l STRUCT(i ubigint)[]);
INSERT INTO test20 VALUES
([{'i': NULL}, {'i': NULL}, {'i': 0}, {'i': NULL}, {'i': NULL}, {'i': 0}]),
([{'i': NULL}, {'i': NULL}, {'i': 0}, {'i': NULL}, {'i': NULL}, {'i': 1}]),
([{'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': 1}]),
([{'i': NULL}, {'i': NULL}, {'i': 0}, {'i': NULL}, {'i': NULL}, {'i': NULL}]),
([{'i': NULL}, {'i': NULL}, {'i': 1}, {'i': NULL}, {'i': NULL}, {'i': 0}]),
([{'i': NULL}, {'i': NULL}, {'i': 1}, {'i': NULL}, {'i': NULL}, {'i': 1}]),
([{'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': 0}]),
([{'i': NULL}, {'i': NULL}, {'i': 1}, {'i': NULL}, {'i': NULL}, {'i': NULL}]);
SELECT * FROM test20 ORDER BY l;
SELECT * FROM test20 ORDER BY l DESC;
CREATE TABLE test22 (s STRUCT(i ubigint[], j ubigint[]));
INSERT INTO test22 VALUES
({'i': [0, NULL], 'j': [NULL, 0]}),
({'i': [0, NULL], 'j': [NULL, 1]}),
({'i': [0, NULL], 'j': [1, 2]}),
({'i': [1, NULL], 'j': [2, NULL]}),
({'i': [0, 2], 'j': [2, NULL]}),
({'i': NULL, 'j': [2, NULL]}),
({'i': [0, 2], 'j': NULL}),
({'i': NULL, 'j': [2, 3]});
SELECT * FROM test22 ORDER BY s;
SELECT * FROM test22 ORDER BY s DESC;
CREATE TABLE test24 (l STRUCT(l1 STRUCT(i ubigint)[])[]);
INSERT INTO test24 VALUES
([{'l1': [{'i': 0}]}, {'l1': [{'i': 0}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': 1}, {'i': 2}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': 1}, {'i': 1}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': 0}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': NULL}]}, {'l1': [{'i': 0}]}]),
([{'l1': [{'i': NULL}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': NULL}]}, {'l1': [{'i': NULL}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': NULL}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': NULL}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': NULL}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': NULL}]}, {'l1': [{'i': NULL}]}]);
SELECT * FROM test24 ORDER BY l;
SELECT * FROM test24 ORDER BY l DESC;
DROP TABLE test0;
DROP TABLE test2;
DROP TABLE test3;
DROP TABLE test4;
DROP TABLE test10;
DROP TABLE test11;
DROP TABLE test13;
DROP TABLE test20;
DROP TABLE test22;
DROP TABLE test24;
PRAGMA debug_force_external=false;
CREATE TABLE test0 (i uhugeint[]);
INSERT INTO test0 VALUES ([2]), ([1]), ([1, 2]), ([]), ([2, 2]), ([NULL]), ([2, 3]);
SELECT * FROM test0 ORDER BY i;
SELECT * FROM test0 ORDER BY i DESC;
INSERT INTO test0 VALUES (NULL);
SELECT * FROM test0 ORDER BY i;
SELECT * FROM test0 ORDER BY i NULLS LAST;
SELECT * FROM test0 ORDER BY i DESC;
SELECT * FROM test0 ORDER BY i DESC NULLS LAST;
CREATE TABLE test2 (i uhugeint[][]);
INSERT INTO test2 VALUES ([[2]]), ([[1]]), ([NULL, []]), ([[1], [2]]), ([]), ([[]]), ([[2], [2]]), ([NULL]), (NULL), ([[2], [3]]);
SELECT * FROM test2 ORDER BY i;
SELECT * FROM test2 ORDER BY i DESC;
CREATE TABLE test3 (i uhugeint[][]);
INSERT INTO test3 VALUES ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], []]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [5, 5, 5, 5, 1]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [5, 5, 5, 5, NULL]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [5, 5, 5, 5, 2]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [NULL]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], NULL]);
SELECT * FROM test3 ORDER BY i;
SELECT * FROM test3 ORDER BY i DESC;
CREATE TABLE test4 (i uhugeint[][]);
INSERT INTO test4 VALUES ([[NULL, NULL, 0], [1, NULL, 1]]), ([[NULL, NULL, 1]]), ([[NULL, NULL, 0], [1, NULL, 0]]), ([[0, NULL, NULL, 1]]), ([[0, NULL, NULL, 0]]);
SELECT * FROM test4 ORDER BY i;
SELECT * FROM test4 ORDER BY i DESC;
CREATE TABLE test10 (s STRUCT(i uhugeint, j uhugeint));
INSERT INTO test10 values
({'i': 2, 'j': NULL}),
({'i': 1, 'j': NULL}),
({'i': 2, 'j': 3}),
({'i': 1, 'j': 2}),
({'i': 2, 'j': 2}),
({'i': NULL, 'j': NULL}),
(NULL),
({'i': 2, 'j': 3});
SELECT * FROM test10 ORDER BY s;
SELECT * FROM test10 ORDER BY s DESC;
CREATE TABLE test11 (s STRUCT(s1 STRUCT(i uhugeint, j uhugeint)));
INSERT INTO test11 VALUES ({'s1': NULL}), (NULL), ({'s1': {'i': NULL, 'j': 1}}), ({'s1': {'i': 0, 'j': NULL}}), ({'s1': {'i': NULL, 'j': NULL}}), ({'s1': {'i': 0, 'j': 1}});
SELECT * FROM test11 ORDER BY s;
SELECT * FROM test11 ORDER BY s DESC;
CREATE TABLE test13 (s STRUCT(a uhugeint, b uhugeint, c uhugeint, d uhugeint, e uhugeint, f uhugeint, g uhugeint, h uhugeint, i uhugeint, j uhugeint));
INSERT INTO test13 VALUES
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': 7, 'i': 8, 'j': 8}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': 7, 'i': 8, 'j': 9}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': NULL, 'f': NULL, 'g': NULL, 'h': NULL, 'i': 8, 'j': 8}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': NULL, 'f': NULL, 'g': NULL, 'h': NULL, 'i': 8, 'j': 9}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': NULL, 'i': NULL, 'j': 8}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': NULL, 'i': NULL, 'j': 9});
SELECT * FROM test13 ORDER BY s;
SELECT * FROM test13 ORDER BY s DESC;
CREATE TABLE test20 (l STRUCT(i uhugeint)[]);
INSERT INTO test20 VALUES
([{'i': NULL}, {'i': NULL}, {'i': 0}, {'i': NULL}, {'i': NULL}, {'i': 0}]),
([{'i': NULL}, {'i': NULL}, {'i': 0}, {'i': NULL}, {'i': NULL}, {'i': 1}]),
([{'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': 1}]),
([{'i': NULL}, {'i': NULL}, {'i': 0}, {'i': NULL}, {'i': NULL}, {'i': NULL}]),
([{'i': NULL}, {'i': NULL}, {'i': 1}, {'i': NULL}, {'i': NULL}, {'i': 0}]),
([{'i': NULL}, {'i': NULL}, {'i': 1}, {'i': NULL}, {'i': NULL}, {'i': 1}]),
([{'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': 0}]),
([{'i': NULL}, {'i': NULL}, {'i': 1}, {'i': NULL}, {'i': NULL}, {'i': NULL}]);
SELECT * FROM test20 ORDER BY l;
SELECT * FROM test20 ORDER BY l DESC;
CREATE TABLE test22 (s STRUCT(i uhugeint[], j uhugeint[]));
INSERT INTO test22 VALUES
({'i': [0, NULL], 'j': [NULL, 0]}),
({'i': [0, NULL], 'j': [NULL, 1]}),
({'i': [0, NULL], 'j': [1, 2]}),
({'i': [1, NULL], 'j': [2, NULL]}),
({'i': [0, 2], 'j': [2, NULL]}),
({'i': NULL, 'j': [2, NULL]}),
({'i': [0, 2], 'j': NULL}),
({'i': NULL, 'j': [2, 3]});
SELECT * FROM test22 ORDER BY s;
SELECT * FROM test22 ORDER BY s DESC;
CREATE TABLE test24 (l STRUCT(l1 STRUCT(i uhugeint)[])[]);
INSERT INTO test24 VALUES
([{'l1': [{'i': 0}]}, {'l1': [{'i': 0}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': 1}, {'i': 2}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': 1}, {'i': 1}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': 0}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': NULL}]}, {'l1': [{'i': 0}]}]),
([{'l1': [{'i': NULL}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': NULL}]}, {'l1': [{'i': NULL}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': NULL}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': NULL}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': NULL}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': NULL}]}, {'l1': [{'i': NULL}]}]);
SELECT * FROM test24 ORDER BY l;
SELECT * FROM test24 ORDER BY l DESC;
DROP TABLE test0;
DROP TABLE test2;
DROP TABLE test3;
DROP TABLE test4;
DROP TABLE test10;
DROP TABLE test11;
DROP TABLE test13;
DROP TABLE test20;
DROP TABLE test22;
DROP TABLE test24;
PRAGMA debug_force_external=false;
CREATE TABLE test0 (i varchar[]);
INSERT INTO test0 VALUES ([2]), ([1]), ([1, 2]), ([]), ([2, 2]), ([NULL]), ([2, 3]);
SELECT * FROM test0 ORDER BY i;
SELECT * FROM test0 ORDER BY i DESC;
INSERT INTO test0 VALUES (NULL);
SELECT * FROM test0 ORDER BY i;
SELECT * FROM test0 ORDER BY i NULLS LAST;
SELECT * FROM test0 ORDER BY i DESC;
SELECT * FROM test0 ORDER BY i DESC NULLS LAST;
CREATE TABLE test2 (i varchar[][]);
INSERT INTO test2 VALUES ([[2]]), ([[1]]), ([NULL, []]), ([[1], [2]]), ([]), ([[]]), ([[2], [2]]), ([NULL]), (NULL), ([[2], [3]]);
SELECT * FROM test2 ORDER BY i;
SELECT * FROM test2 ORDER BY i DESC;
CREATE TABLE test3 (i varchar[][]);
INSERT INTO test3 VALUES ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], []]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [5, 5, 5, 5, 1]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [5, 5, 5, 5, NULL]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [5, 5, 5, 5, 2]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], [NULL]]), ([[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], NULL]);
SELECT * FROM test3 ORDER BY i;
SELECT * FROM test3 ORDER BY i DESC;
CREATE TABLE test4 (i varchar[][]);
INSERT INTO test4 VALUES ([[NULL, NULL, 0], [1, NULL, 1]]), ([[NULL, NULL, 1]]), ([[NULL, NULL, 0], [1, NULL, 0]]), ([[0, NULL, NULL, 1]]), ([[0, NULL, NULL, 0]]);
SELECT * FROM test4 ORDER BY i;
SELECT * FROM test4 ORDER BY i DESC;
CREATE TABLE test10 (s STRUCT(i varchar, j varchar));
INSERT INTO test10 values
({'i': 2, 'j': NULL}),
({'i': 1, 'j': NULL}),
({'i': 2, 'j': 3}),
({'i': 1, 'j': 2}),
({'i': 2, 'j': 2}),
({'i': NULL, 'j': NULL}),
(NULL),
({'i': 2, 'j': 3});
SELECT * FROM test10 ORDER BY s;
SELECT * FROM test10 ORDER BY s DESC;
CREATE TABLE test11 (s STRUCT(s1 STRUCT(i varchar, j varchar)));
INSERT INTO test11 VALUES ({'s1': NULL}), (NULL), ({'s1': {'i': NULL, 'j': 1}}), ({'s1': {'i': 0, 'j': NULL}}), ({'s1': {'i': NULL, 'j': NULL}}), ({'s1': {'i': 0, 'j': 1}});
SELECT * FROM test11 ORDER BY s;
SELECT * FROM test11 ORDER BY s DESC;
CREATE TABLE test13 (s STRUCT(a varchar, b varchar, c varchar, d varchar, e varchar, f varchar, g varchar, h varchar, i varchar, j varchar));
INSERT INTO test13 VALUES
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': 7, 'i': 8, 'j': 8}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': 7, 'i': 8, 'j': 9}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': NULL, 'f': NULL, 'g': NULL, 'h': NULL, 'i': 8, 'j': 8}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': NULL, 'f': NULL, 'g': NULL, 'h': NULL, 'i': 8, 'j': 9}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': NULL, 'i': NULL, 'j': 8}),
({'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': NULL, 'i': NULL, 'j': 9});
SELECT * FROM test13 ORDER BY s;
SELECT * FROM test13 ORDER BY s DESC;
CREATE TABLE test20 (l STRUCT(i varchar)[]);
INSERT INTO test20 VALUES
([{'i': NULL}, {'i': NULL}, {'i': 0}, {'i': NULL}, {'i': NULL}, {'i': 0}]),
([{'i': NULL}, {'i': NULL}, {'i': 0}, {'i': NULL}, {'i': NULL}, {'i': 1}]),
([{'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': 1}]),
([{'i': NULL}, {'i': NULL}, {'i': 0}, {'i': NULL}, {'i': NULL}, {'i': NULL}]),
([{'i': NULL}, {'i': NULL}, {'i': 1}, {'i': NULL}, {'i': NULL}, {'i': 0}]),
([{'i': NULL}, {'i': NULL}, {'i': 1}, {'i': NULL}, {'i': NULL}, {'i': 1}]),
([{'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': NULL}, {'i': 0}]),
([{'i': NULL}, {'i': NULL}, {'i': 1}, {'i': NULL}, {'i': NULL}, {'i': NULL}]);
SELECT * FROM test20 ORDER BY l;
SELECT * FROM test20 ORDER BY l DESC;
CREATE TABLE test22 (s STRUCT(i varchar[], j varchar[]));
INSERT INTO test22 VALUES
({'i': [0, NULL], 'j': [NULL, 0]}),
({'i': [0, NULL], 'j': [NULL, 1]}),
({'i': [0, NULL], 'j': [1, 2]}),
({'i': [1, NULL], 'j': [2, NULL]}),
({'i': [0, 2], 'j': [2, NULL]}),
({'i': NULL, 'j': [2, NULL]}),
({'i': [0, 2], 'j': NULL}),
({'i': NULL, 'j': [2, 3]});
SELECT * FROM test22 ORDER BY s;
SELECT * FROM test22 ORDER BY s DESC;
CREATE TABLE test24 (l STRUCT(l1 STRUCT(i varchar)[])[]);
INSERT INTO test24 VALUES
([{'l1': [{'i': 0}]}, {'l1': [{'i': 0}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': 1}, {'i': 2}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': 1}, {'i': 1}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': 0}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': NULL}]}, {'l1': [{'i': 0}]}]),
([{'l1': [{'i': NULL}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': NULL}]}, {'l1': [{'i': NULL}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': NULL}]}, {'l1': [{'i': 1}]}]),
([{'l1': [{'i': 0}]}, {'l1': [{'i': NULL}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': NULL}]}]),
([{'l1': [{'i': 1}]}, {'l1': [{'i': NULL}]}, {'l1': [{'i': NULL}]}]);
SELECT * FROM test24 ORDER BY l;
SELECT * FROM test24 ORDER BY l DESC;
DROP TABLE test0;
DROP TABLE test2;
DROP TABLE test3;
DROP TABLE test4;
DROP TABLE test10;
DROP TABLE test11;
DROP TABLE test13;
DROP TABLE test20;
DROP TABLE test22;
DROP TABLE test24;
PRAGMA debug_force_external=false;
PRAGMA debug_force_external=true;
CREATE TABLE test2 (i float[][]);
INSERT INTO test2 VALUES ([[1.2]]), ([[1.1]]), ([NULL, []]), ([[1.1], [1.2]]), ([]), ([[]]), ([[1.2], [1.2]]), ([NULL]), (NULL), ([[1.2], [1.3]]);
SELECT * FROM test2 ORDER BY i;
SELECT * FROM test2 ORDER BY i DESC;
CREATE TABLE test10 (s STRUCT(i float, j float));
INSERT INTO test10 values
({'i': 1.2, 'j': NULL}),
({'i': 1.1, 'j': NULL}),
({'i': 1.2, 'j': 1.3}),
({'i': 1.1, 'j': 1.2}),
({'i': 1.2, 'j': 1.2}),
({'i': NULL, 'j': NULL}),
(NULL),
({'i': 1.2, 'j': 1.3});
SELECT * FROM test10 ORDER BY s;
SELECT * FROM test10 ORDER BY s DESC;
CREATE TABLE test24 (l STRUCT(l1 STRUCT(i float)[])[]);
INSERT INTO test24 VALUES
([{'l1': [{'i': 1.1}]}, {'l1': [{'i': 1.1}]}]),
([{'l1': [{'i': 1.1}]}, {'l1': [{'i': 1.2}]}]),
([{'l1': [{'i': 1.1}]}, {'l1': [{'i': 1.2}, {'i': 1.3}]}]),
([{'l1': [{'i': 1.1}]}, {'l1': [{'i': 1.2}, {'i': 1.2}]}]),
([{'l1': [{'i': 1.2}]}, {'l1': [{'i': 1.1}]}]),
([{'l1': [{'i': 1.2}]}, {'l1': [{'i': 1.2}]}]),
([{'l1': [{'i': NULL}]}, {'l1': [{'i': 1.1}]}]),
([{'l1': [{'i': NULL}]}, {'l1': [{'i': 1.2}]}]),
([{'l1': [{'i': 1.1}]}, {'l1': [{'i': NULL}]}, {'l1': [{'i': NULL}]}]),
([{'l1': [{'i': 1.2}]}, {'l1': [{'i': NULL}]}, {'l1': [{'i': 1.2}]}]),
([{'l1': [{'i': 1.1}]}, {'l1': [{'i': NULL}]}]),
([{'l1': [{'i': 1.2}]}, {'l1': [{'i': NULL}]}]),
([{'l1': [{'i': 1.2}]}, {'l1': [{'i': NULL}]}, {'l1': [{'i': NULL}]}]);
SELECT * FROM test24 ORDER BY l;
SELECT * FROM test24 ORDER BY l DESC;
DROP TABLE test2;
DROP TABLE test10;
DROP TABLE test24;
PRAGMA debug_force_external=false;
CREATE TABLE test2 (i double[][]);
INSERT INTO test2 VALUES ([[1.2]]), ([[1.1]]), ([NULL, []]), ([[1.1], [1.2]]), ([]), ([[]]), ([[1.2], [1.2]]), ([NULL]), (NULL), ([[1.2], [1.3]]);
SELECT * FROM test2 ORDER BY i;
SELECT * FROM test2 ORDER BY i DESC;
CREATE TABLE test10 (s STRUCT(i double, j double));
INSERT INTO test10 values
({'i': 1.2, 'j': NULL}),
({'i': 1.1, 'j': NULL}),
({'i': 1.2, 'j': 1.3}),
({'i': 1.1, 'j': 1.2}),
({'i': 1.2, 'j': 1.2}),
({'i': NULL, 'j': NULL}),
(NULL),
({'i': 1.2, 'j': 1.3});
SELECT * FROM test10 ORDER BY s;
SELECT * FROM test10 ORDER BY s DESC;
CREATE TABLE test24 (l STRUCT(l1 STRUCT(i double)[])[]);
INSERT INTO test24 VALUES
([{'l1': [{'i': 1.1}]}, {'l1': [{'i': 1.1}]}]),
([{'l1': [{'i': 1.1}]}, {'l1': [{'i': 1.2}]}]),
([{'l1': [{'i': 1.1}]}, {'l1': [{'i': 1.2}, {'i': 1.3}]}]),
([{'l1': [{'i': 1.1}]}, {'l1': [{'i': 1.2}, {'i': 1.2}]}]),
([{'l1': [{'i': 1.2}]}, {'l1': [{'i': 1.1}]}]),
([{'l1': [{'i': 1.2}]}, {'l1': [{'i': 1.2}]}]),
([{'l1': [{'i': NULL}]}, {'l1': [{'i': 1.1}]}]),
([{'l1': [{'i': NULL}]}, {'l1': [{'i': 1.2}]}]),
([{'l1': [{'i': 1.1}]}, {'l1': [{'i': NULL}]}, {'l1': [{'i': NULL}]}]),
([{'l1': [{'i': 1.2}]}, {'l1': [{'i': NULL}]}, {'l1': [{'i': 1.2}]}]),
([{'l1': [{'i': 1.1}]}, {'l1': [{'i': NULL}]}]),
([{'l1': [{'i': 1.2}]}, {'l1': [{'i': NULL}]}]),
([{'l1': [{'i': 1.2}]}, {'l1': [{'i': NULL}]}, {'l1': [{'i': NULL}]}]);
SELECT * FROM test24 ORDER BY l;
SELECT * FROM test24 ORDER BY l DESC;
DROP TABLE test2;
DROP TABLE test10;
DROP TABLE test24;
PRAGMA debug_force_external=false;
CREATE TABLE test2 (i float[][]);
INSERT INTO test2 VALUES ([[1.2]]), ([[1.1]]), ([NULL, []]), ([[1.1], [1.2]]), ([]), ([[]]), ([[1.2], [1.2]]), ([NULL]), (NULL), ([[1.2], [1.3]]);
SELECT * FROM test2 ORDER BY i;
SELECT * FROM test2 ORDER BY i DESC;
CREATE TABLE test10 (s STRUCT(i float, j float));
INSERT INTO test10 values
({'i': 1.2, 'j': NULL}),
({'i': 1.1, 'j': NULL}),
({'i': 1.2, 'j': 1.3}),
({'i': 1.1, 'j': 1.2}),
({'i': 1.2, 'j': 1.2}),
({'i': NULL, 'j': NULL}),
(NULL),
({'i': 1.2, 'j': 1.3});
SELECT * FROM test10 ORDER BY s;
SELECT * FROM test10 ORDER BY s DESC;
CREATE TABLE test24 (l STRUCT(l1 STRUCT(i float)[])[]);
INSERT INTO test24 VALUES
([{'l1': [{'i': 1.1}]}, {'l1': [{'i': 1.1}]}]),
([{'l1': [{'i': 1.1}]}, {'l1': [{'i': 1.2}]}]),
([{'l1': [{'i': 1.1}]}, {'l1': [{'i': 1.2}, {'i': 1.3}]}]),
([{'l1': [{'i': 1.1}]}, {'l1': [{'i': 1.2}, {'i': 1.2}]}]),
([{'l1': [{'i': 1.2}]}, {'l1': [{'i': 1.1}]}]),
([{'l1': [{'i': 1.2}]}, {'l1': [{'i': 1.2}]}]),
([{'l1': [{'i': NULL}]}, {'l1': [{'i': 1.1}]}]),
([{'l1': [{'i': NULL}]}, {'l1': [{'i': 1.2}]}]),
([{'l1': [{'i': 1.1}]}, {'l1': [{'i': NULL}]}, {'l1': [{'i': NULL}]}]),
([{'l1': [{'i': 1.2}]}, {'l1': [{'i': NULL}]}, {'l1': [{'i': 1.2}]}]),
([{'l1': [{'i': 1.1}]}, {'l1': [{'i': NULL}]}]),
([{'l1': [{'i': 1.2}]}, {'l1': [{'i': NULL}]}]),
([{'l1': [{'i': 1.2}]}, {'l1': [{'i': NULL}]}, {'l1': [{'i': NULL}]}]);
SELECT * FROM test24 ORDER BY l;
SELECT * FROM test24 ORDER BY l DESC;
DROP TABLE test2;
DROP TABLE test10;
DROP TABLE test24;
PRAGMA debug_force_external=false;
CREATE TABLE test2 (i double[][]);
INSERT INTO test2 VALUES ([[1.2]]), ([[1.1]]), ([NULL, []]), ([[1.1], [1.2]]), ([]), ([[]]), ([[1.2], [1.2]]), ([NULL]), (NULL), ([[1.2], [1.3]]);
SELECT * FROM test2 ORDER BY i;
SELECT * FROM test2 ORDER BY i DESC;
CREATE TABLE test10 (s STRUCT(i double, j double));
INSERT INTO test10 values
({'i': 1.2, 'j': NULL}),
({'i': 1.1, 'j': NULL}),
({'i': 1.2, 'j': 1.3}),
({'i': 1.1, 'j': 1.2}),
({'i': 1.2, 'j': 1.2}),
({'i': NULL, 'j': NULL}),
(NULL),
({'i': 1.2, 'j': 1.3});
SELECT * FROM test10 ORDER BY s;
SELECT * FROM test10 ORDER BY s DESC;
CREATE TABLE test24 (l STRUCT(l1 STRUCT(i double)[])[]);
INSERT INTO test24 VALUES
([{'l1': [{'i': 1.1}]}, {'l1': [{'i': 1.1}]}]),
([{'l1': [{'i': 1.1}]}, {'l1': [{'i': 1.2}]}]),
([{'l1': [{'i': 1.1}]}, {'l1': [{'i': 1.2}, {'i': 1.3}]}]),
([{'l1': [{'i': 1.1}]}, {'l1': [{'i': 1.2}, {'i': 1.2}]}]),
([{'l1': [{'i': 1.2}]}, {'l1': [{'i': 1.1}]}]),
([{'l1': [{'i': 1.2}]}, {'l1': [{'i': 1.2}]}]),
([{'l1': [{'i': NULL}]}, {'l1': [{'i': 1.1}]}]),
([{'l1': [{'i': NULL}]}, {'l1': [{'i': 1.2}]}]),
([{'l1': [{'i': 1.1}]}, {'l1': [{'i': NULL}]}, {'l1': [{'i': NULL}]}]),
([{'l1': [{'i': 1.2}]}, {'l1': [{'i': NULL}]}, {'l1': [{'i': 1.2}]}]),
([{'l1': [{'i': 1.1}]}, {'l1': [{'i': NULL}]}]),
([{'l1': [{'i': 1.2}]}, {'l1': [{'i': NULL}]}]),
([{'l1': [{'i': 1.2}]}, {'l1': [{'i': NULL}]}, {'l1': [{'i': NULL}]}]);
SELECT * FROM test24 ORDER BY l;
SELECT * FROM test24 ORDER BY l DESC;
DROP TABLE test2;
DROP TABLE test10;
DROP TABLE test24;
PRAGMA debug_force_external=false;
CREATE TABLE test0 (i BOOL[]);
INSERT INTO test0 VALUES ([true]), ([false]), ([false, true]), ([]), ([true, true]), ([NULL]), (NULL), ([false, false]);
SELECT * FROM test0 ORDER BY i;
SELECT * FROM test0 ORDER BY i DESC;
CREATE TABLE test10 (s STRUCT(i BOOL, j BOOL));
INSERT INTO test10 values
({'i': true, 'j': NULL}),
({'i': false, 'j': NULL}),
({'i': true, 'j': true}),
({'i': false, 'j': true}),
({'i': NULL, 'j': false}),
({'i': NULL, 'j': true}),
({'i': NULL, 'j': NULL}),
(NULL),
({'i': false, 'j': false});
SELECT * FROM test10 ORDER BY s;
SELECT * FROM test10 ORDER BY s DESC;
DROP TABLE test0;
DROP TABLE test10;
CREATE TABLE test0 (i INTERVAL[]);
INSERT INTO test0 VALUES (['2 years']), (['1 year']), (['1 year', '2 years']), ([]), (['2 years', '2 years']), ([NULL]), (NULL), (['1 year', '1 year']);
SELECT * FROM test0 ORDER BY i;
SELECT * FROM test0 ORDER BY i DESC;
CREATE TABLE test10 (s STRUCT(i INTERVAL, j INTERVAL));
INSERT INTO test10 values
({'i': '2 years', 'j': NULL}),
({'i': '1 year', 'j': NULL}),
({'i': '2 years', 'j': '2 years'}),
({'i': '1 year', 'j': '2 years'}),
({'i': '2 years', 'j': '1 year'}),
({'i': NULL, 'j': '1 year'}),
({'i': NULL, 'j': '2 years'}),
({'i': NULL, 'j': NULL}),
(NULL),
({'i': '1 year', 'j': '1 year'});
SELECT * FROM test10 ORDER BY s;
SELECT * FROM test10 ORDER BY s DESC;
CREATE TABLE test25(hits STRUCT(znGQGrPPR BIGINT,
    oPTw BIGINT,
    faFP BIGINT,
    uEdoxN BIGINT,
    Swjmryop BOOLEAN,
    VIXNrOiClIevZ BOOLEAN,
    HcaUpnMJFZ BOOLEAN,
    ykHcZY BOOLEAN,
    DvxSpZK VARCHAR,
    YVGP STRUCT(IgDBxUoG VARCHAR,
    gNbYDDIw VARCHAR,
    yzKNPwwcg VARCHAR,
    DibXeeoeQSGYu VARCHAR,
    hrWWrsiIiUofLy VARCHAR,
    ASfMkqmeOqQuoB VARCHAR,
    uVprLfTzUvDvkP VARCHAR,
    VkUqzkNMWJgigg VARCHAR,
    rvWZXRcwRHxyBe VARCHAR),
    jadhjuVProR STRUCT(jPNTLUlLWDVzv VARCHAR,
    nAvhKBDCqvoqrnOocS BIGINT,
    xDBVUYlwAIswxy BIGINT,
    xqQhrLZoGdTMHuHWdYa BIGINT,
    HwCKcHtSqPK VARCHAR,
    kpJOlzKWnOqh VARCHAR,
    FWSJWhYpedcRQKrZhDCnVeB BIGINT,
    CPlooJwmNBreMCdWUna BIGINT,
    LqhwzdzEIiryXAhMTxkXdOJJ BIGINT,
    qqMzZNLkIpokwdLUU VARCHAR),
    QyNS STRUCT(jPNTLUlLWDVzv VARCHAR,
    TayswObIQWI VARCHAR,
    PbvWmZCBFaFstiI VARCHAR,
    abOCIKAItE VARCHAR,
    cytRvqHxcNMO BIGINT,
    tDrBPbtKtyb BIGINT,
    kpJOlzKWnOqh VARCHAR,
    WQtAsJPqBUnUMEaU BIGINT),
    mASndgwqPuJ STRUCT(gfObFmWyCOjcKeIHoT VARCHAR),
    jKlgxqk STRUCT(loas VARCHAR,
    eQBbpMd VARCHAR,
    Mq VARCHAR,
    IZOSPuHhhxj VARCHAR,
    CXcvMVHHwromQE VARCHAR,
    JtSEjNk VARCHAR,
    xQfpnypFfh VARCHAR,
    tnMGA VARCHAR,
    AnwyxMGchr VARCHAR,
    wPmfaFxhPPKzwfPCb VARCHAR,
    vsoBnKzcUwrNkp VARCHAR,
    XCMbItPFANv VARCHAR),
    PtAAZqHJoNJFr STRUCT(XZitsWIdUVj VARCHAR,
    YuakMMl BOOLEAN,
    zwLMFgPAar BIGINT,
    ZZYrqGPvyHqCxmz BIGINT),
    PBaBpTrgf STRUCT(EgANwCBEnprKw VARCHAR,
    wIOvbrWCLyJ VARCHAR,
    hKOGMlSamD VARCHAR,
    EPfWsjecqG BIGINT),
    okorLUP STRUCT(GIsgSGBmzK VARCHAR,
    MqnNnVixFjvXF VARCHAR,
    pWVjrJXMpemUIfzCW VARCHAR,
    noTGJwpPnvQiHm VARCHAR,
    DMbdkCaXbPqs VARCHAR,
    IycrFLnjgvRNut BIGINT,
    bpfoIotUEOGbLunbIol BIGINT,
    TjoylJjMJoiD BIGINT,
    aLgLncUnnGlNBduUI BIGINT,
    NKWyfYnlwjUnjZL BIGINT,
    FFpmzMxIokQSSfbXdzW BIGINT,
    vqZpxHuoxlbsNrdtuymeQgHY BIGINT,
    emdolqTMHfXc BOOLEAN,
    oJRmvMi BOOLEAN,
    qLqUHjvwVEVAcnbs STRUCT(iJwqw BIGINT,
    HUvFz VARCHAR)[],
    sNHhdeCoAZxDL STRUCT(iJwqw BIGINT,
    HUvFz BIGINT)[],
    SnajIRdGepAgJgh VARCHAR,
    koWzRJyBqvmiqivzlEM BIGINT,
    reyVgABDLNFilPVvD VARCHAR)[],
    SVGhSmWDI STRUCT(GtgKMpV VARCHAR,
    yjXiRwzVE VARCHAR,
    qgYlOUPRtAnYw VARCHAR,
    fTgoSMpOgpNJQ VARCHAR)[],
    FPKSWtghhQOVEnFBOkD STRUCT(uAubCghuPjB BOOLEAN,
    pfFOVEOCperm BOOLEAN),
    OTrWwS STRUCT(NapvwzseNIGz BIGINT,
    LtOAwRiqDQjfDckMm BIGINT),
    AcXbgyymirKTQZx STRUCT(yUwSxZiZSSr VARCHAR,
    lDTC BIGINT,
    UhjBpZ VARCHAR),
    bBhpQAMDWl STRUCT(RfphILWpsPYd VARCHAR,
    jEyACWwvLTaqFDfJW VARCHAR)[],
    JmBMoMkzD STRUCT(tsFDpOynl BIGINT,
    jBEsPfpGRXMOLE BIGINT,
    ZbRXIhWtIKLYujVvm BIGINT,
    NDcVjtQYYmiNKIJYVsSfKopA BIGINT,
    uSOqEmVyjD BIGINT,
    VPXBBGRbywnJY BIGINT,
    AUwjuuzTSKEXh BIGINT,
    uELKFfPuERKGwvQjPbcEti BIGINT,
    TeXtUcBFcnqrAL BIGINT,
    yLBcRcbcRfWivpsjmBffCfUO BIGINT,
    otFzPBKplrWzttldrcwMcpCPAgWQv BIGINT,
    IgEbHurDtzoXObIewuZnEHiMYIKuYnCV BIGINT,
    CTpLqGEIvocTwMVwEeRzoONDgZovhNPoRwSvnng BIGINT,
    TQWiiumCqxqGndAyhkVBxOcfo BIGINT,
    rpncrVHBmLjzcfanmjDAUZUAKczw BIGINT,
    aEzMpiQuuETAdZwEYvHIlJDxtGKW BIGINT,
    rHUiHuoBmYbRkayocVebIIIjZLRHRWSAzuilF BIGINT,
    uYsFSGNaxzsuXAeniZaYrhAqwcfXg BIGINT,
    KUyXJcDqWHQZgDHqloaD BIGINT,
    dpJiXgrlyHJIfEvXMahZJCffU BIGINT,
    xohgzXNCOTJFMmkyeCKYdWCLiXXa BIGINT,
    gfcZKKxRlEUJzMUXgBBSUxSzdMlldSXwtVx BIGINT,
    UzgmNbcAmjElKBwRPuFum BIGINT,
    TzlEnhCSQSvoImjUUHsaxsis BIGINT,
    BUsfzMIYSSUuMDiolbXuOlTj BIGINT,
    YfiCTxNPfBvchDaDcMEsOMeOONmxgeagA BIGINT,
    pxcpkGReepBqRZKMRzzQQXKdT BIGINT,
    IOtfUjWOT BIGINT,
    dUIQVUzKnzskJs BIGINT,
    LLPsdqyabsOKWKNFd BIGINT,
    ClmlNfsvRoXZlhTWSCkRodqF BIGINT,
    ipOEKzEGfG BIGINT,
    yfelArbMCP BIGINT,
    EKUWzPngAEAJAnOeWNIWmq BIGINT,
    GScdZElahOtfZj BIGINT,
    WPFdULdNS BIGINT,
    EJcZYyMpAIUcog BIGINT,
    eIpbtmcjgLLVFht BIGINT,
    mcUwKVRVbXjwhbOjS BIGINT,
    DgvkXnDHuKutxUsRfvj BIGINT,
    dxguUbIdzjzrdS BIGINT,
    WlXYtYZmUl BIGINT,
    umNLTdfGzr BIGINT,
    YdimQHsARK VARCHAR,
    zDokzjSEen VARCHAR,
    fsOUigHdkvGK VARCHAR),
    ykADKYbguMZVJlm STRUCT(iJwqw BIGINT,
    ZAvYeMTYlHUDL VARCHAR,
    THpzyEirnnGWFB VARCHAR)[],
    qLqUHjvwVEVAcnbs STRUCT(iJwqw BIGINT,
    HUvFz VARCHAR)[],
    sNHhdeCoAZxDL STRUCT(iJwqw BIGINT,
    HUvFz BIGINT)[],
    gfhz VARCHAR,
    TLCZOP STRUCT(HcPewmZRqcghwBjHzRkzkfkE VARCHAR,
    CjpMZoCThqMoBvimtzvxlrt VARCHAR,
    lgpkLyrQluGzHkNKTx BIGINT,
    RLKYfEkkNdlrvlJPovBKJuQ VARCHAR,
    nqFKVVNDCaNIl VARCHAR,
    scVtCBQcYwyNnrmgIpYpbWdQ BIGINT,
    ZZiHFmKGKDvmRmwmfctstfV VARCHAR,
    EDIJHetonPOYCgULGYrSkNkIwpxche VARCHAR),
    NPNDFGbRcPrfwzX STRUCT(rtBuZDmFWFmHnY BIGINT,
    RTibIJgjJCkQ BIGINT,
    GQlWYsoIaMIPTEuJ BIGINT,
    SYibbnqRnmYxaNt BIGINT,
    NsAFWTEXcfDOLESXWv BIGINT,
    plPdCaKdtCUzeVXj BIGINT,
    ZZNqWUqyRyAOvoTDvaos BIGINT,
    FNfoNoaWgwOqCYXWFS BIGINT,
    XtuDUcHXCXVTFPovlMtXdQA BIGINT,
    DdoFfFvEkjndgaBZoU BIGINT,
    fUskQHoNqzLeLFFgaSHt BIGINT,
    jntGEjUlojDyKFN BIGINT,
    YFaVhOMmHFMZxgQF BIGINT,
    bdogaquNxDhqVZbJeP VARCHAR,
    HjxVQylJhDzgrvuDok VARCHAR,
    MMOoWhxOKtbFYka VARCHAR),
    QoPuTOMwkHrWlOQfXP STRUCT(BWuxKiTgmIKfhQchATayvQQNK VARCHAR,
    zJHYVBvayYgYuuTKoQNBUdzU VARCHAR),
    AMEuaLMkYkWD STRUCT(uPPvDVnmYBYzy VARCHAR,
    jBMprvFduhOZV VARCHAR,
    jfYSlkuRisuBn VARCHAR,
    oVzrSeaBARUqj VARCHAR,
    fohkQzphRKBcf VARCHAR,
    wBGLxmqEjBKvzBJbjMTFG VARCHAR,
    SPxYBpYweqbLnQMSICdhZ VARCHAR,
    ZEAxzLIwQFaXXKSgbmhvK VARCHAR,
    PJfgUIDgnaitTmCtKdMQr VARCHAR,
    yqijinxAFkJMXODcQDKdN VARCHAR,
    mjLsWAhqLXRDzgvRmkinTAYD BIGINT,
    PVICapLQHaXgaKygxlflolcY BIGINT,
    NspSTjSzPPqKlIPLZAtpEDJF BIGINT,
    ZqqFfWfQDHysYpyVvOuObrwY BIGINT,
    AqCRjeBJfWwVjdwEEsqsZisL BIGINT),
    uRabSyccPe VARCHAR,
    XvkQOurJWuaDiZK STRUCT(tsFDpOynl BIGINT,
    jBEsPfpGRXMOLE BIGINT,
    ZbRXIhWtIKLYujVvm BIGINT,
    NDcVjtQYYmiNKIJYVsSfKopA BIGINT,
    uSOqEmVyjD BIGINT,
    VPXBBGRbywnJY BIGINT,
    AUwjuuzTSKEXh BIGINT,
    uELKFfPuERKGwvQjPbcEti BIGINT,
    TeXtUcBFcnqrAL BIGINT,
    yLBcRcbcRfWivpsjmBffCfUO BIGINT,
    otFzPBKplrWzttldrcwMcpCPAgWQv BIGINT,
    IgEbHurDtzoXObIewuZnEHiMYIKuYnCV BIGINT,
    CTpLqGEIvocTwMVwEeRzoONDgZovhNPoRwSvnng BIGINT,
    TQWiiumCqxqGndAyhkVBxOcfo BIGINT,
    rpncrVHBmLjzcfanmjDAUZUAKczw BIGINT,
    aEzMpiQuuETAdZwEYvHIlJDxtGKW BIGINT,
    rHUiHuoBmYbRkayocVebIIIjZLRHRWSAzuilF BIGINT,
    uYsFSGNaxzsuXAeniZaYrhAqwcfXg BIGINT,
    KUyXJcDqWHQZgDHqloaD BIGINT,
    dpJiXgrlyHJIfEvXMahZJCffU BIGINT,
    xohgzXNCOTJFMmkyeCKYdWCLiXXa BIGINT,
    gfcZKKxRlEUJzMUXgBBSUxSzdMlldSXwtVx BIGINT,
    UzgmNbcAmjElKBwRPuFum BIGINT,
    TzlEnhCSQSvoImjUUHsaxsis BIGINT,
    BUsfzMIYSSUuMDiolbXuOlTj BIGINT,
    YfiCTxNPfBvchDaDcMEsOMeOONmxgeagA BIGINT,
    pxcpkGReepBqRZKMRzzQQXKdT BIGINT,
    IOtfUjWOT BIGINT,
    dUIQVUzKnzskJs BIGINT,
    LLPsdqyabsOKWKNFd BIGINT,
    ClmlNfsvRoXZlhTWSCkRodqF BIGINT,
    ipOEKzEGfG BIGINT,
    yfelArbMCP BIGINT,
    EKUWzPngAEAJAnOeWNIWmq BIGINT,
    GScdZElahOtfZj BIGINT,
    WPFdULdNS BIGINT,
    EJcZYyMpAIUcog BIGINT,
    eIpbtmcjgLLVFht BIGINT,
    mcUwKVRVbXjwhbOjS BIGINT,
    DgvkXnDHuKutxUsRfvj BIGINT,
    dxguUbIdzjzrdS BIGINT,
    WlXYtYZmUl BIGINT,
    umNLTdfGzr BIGINT,
    YdimQHsARK VARCHAR,
    zDokzjSEen VARCHAR,
    fsOUigHdkvGK VARCHAR)[])[]);
INSERT INTO test25 VALUES([{'znGQGrPPR': 1,
    'oPTw': 0,
    'faFP': 2,
    'uEdoxN': 59,
    'Swjmryop': NULL,
    'VIXNrOiClIevZ': true,
    'HcaUpnMJFZ': true,
    'ykHcZY': true,
    'DvxSpZK': 'tGfxQbvUCWehgmxGyGgBeJhdIWntfkLtonLnpveSTCqepaZwKETAAtIPIqEppznCDDpdPQonXQXKjeIbqOgTIpivdxPviZxkKMtleUUwvqEDOvqjTHuvskrdXeeoNMGpXkrSdYOhDGNkFcgCFChKavCflzRJoXrnjLgFGogROuusCbjbCaYyUZIVdBUpOFjpoeSpbpzSHofDcPuDZSbtpjDtaOmzJreITcsXPVqXnqvEzuzpGIXvefuMeQEdxKCsFWbTNl',
    'YVGP': {'IgDBxUoG': 'XyQOqOyAnyZ',
    'gNbYDDIw': 'cfsRwAfwmrVimfTykGVKuWypjKNHXcm',
    'yzKNPwwcg': 'RYfl',
    'DibXeeoeQSGYu': NULL,
    'hrWWrsiIiUofLy': NULL,
    'ASfMkqmeOqQuoB': 'XyQOqOyAnyZ',
    'uVprLfTzUvDvkP': '',
    'VkUqzkNMWJgigg': '',
    'rvWZXRcwRHxyBe': ''},
    'jadhjuVProR': NULL,
    'QyNS': NULL,
    'mASndgwqPuJ': NULL,
    'jKlgxqk': {'loas': NULL,
    'eQBbpMd': NULL,
    'Mq': NULL,
    'IZOSPuHhhxj': NULL,
    'CXcvMVHHwromQE': NULL,
    'JtSEjNk': NULL,
    'xQfpnypFfh': NULL,
    'tnMGA': NULL,
    'AnwyxMGchr': 'afUPRYRCSQmdcdtQYydnKGvviGtorsdOovCYjwCSlY',
    'wPmfaFxhPPKzwfPCb': 'afUPRYRCSQmdcdtQYydnKGvviGtorsdOovCYjwCSlY',
    'vsoBnKzcUwrNkp': 'afUPRYRCSQmdcdtQYydnKGvviGtorsdOovCYjwCSlY',
    'XCMbItPFANv': 0},
    'PtAAZqHJoNJFr': {'XZitsWIdUVj': NULL,
    'YuakMMl': true,
    'zwLMFgPAar': NULL,
    'ZZYrqGPvyHqCxmz': NULL},
    'PBaBpTrgf': NULL,
    'okorLUP': [],
    'SVGhSmWDI': [{'GtgKMpV': 'MVFWmJlKBMxAB',
    'yjXiRwzVE': 'kYhtvFo',
    'qgYlOUPRtAnYw': 'ijQKnKaopVcYGXaXsdNtLmOIZi',
    'fTgoSMpOgpNJQ': 'AJVzA'},
    {'GtgKMpV': 'MBBosQekfLHmBgESESLTW',
    'yjXiRwzVE': 'zmOeIaLIr',
    'qgYlOUPRtAnYw': 'ccqPBhTzhudkeFfHImrrei',
    'fTgoSMpOgpNJQ': 'bSyEAmJjsLO'},
    {'GtgKMpV': 'gHkbLJZKCzjMtfUmfTShD',
    'yjXiRwzVE': 'XCNrflSANYjQW',
    'qgYlOUPRtAnYw': 'bnVwblyKiYrmBOnj',
    'fTgoSMpOgpNJQ': 'aSfdNGF'},
    {'GtgKMpV': 'eEgScdEsdRGrkTODjpkBAxd',
    'yjXiRwzVE': 'aZXHENozGtPolSS',
    'qgYlOUPRtAnYw': 'mttKSWiRQhrlAguHXh',
    'fTgoSMpOgpNJQ': 'nLdkePN'},
    {'GtgKMpV': 'NkpxeWPzMqyIraIlvitxdysD',
    'yjXiRwzVE': 'euIYxc',
    'qgYlOUPRtAnYw': 'oixhzagMYgrRGdjApvUrQNAhCMlr',
    'fTgoSMpOgpNJQ': 'pfVmSTagxMbjAvZFh'},
    {'GtgKMpV': 'tEuwOvdvbaxENlzBxGudMyjFRAJ',
    'yjXiRwzVE': 'lJahfprsh',
    'qgYlOUPRtAnYw': 'qLcMIslAgmqMfnFoAXf',
    'fTgoSMpOgpNJQ': 'RJZSKwlsBVOMMIHyI'},
    {'GtgKMpV': 'QvAZuwsYVFwNLZSGImMk',
    'yjXiRwzVE': 'vBcsuLVMptMc',
    'qgYlOUPRtAnYw': 'tniBRScobiyWeNjFDeolXCaWY',
    'fTgoSMpOgpNJQ': 'fSKVZpAlpXiUB'},
    {'GtgKMpV': 'wsvEVmWnzdMOZEeMRfrVu',
    'yjXiRwzVE': 'UumrECUGNgUhW',
    'qgYlOUPRtAnYw': 'ftMupCdtrKzxkJlLCFINQkVHaE',
    'fTgoSMpOgpNJQ': 'KNpaXiOejRPdc'},
    {'GtgKMpV': 'jdnWYFIRdcfrhUeCKNXhv',
    'yjXiRwzVE': 'vNrytvSkVtNxg',
    'qgYlOUPRtAnYw': 'gmIacFmQlTTUtMqbemzHXXylMt',
    'fTgoSMpOgpNJQ': 'aSDjzDdZLMZvn'}],
    'FPKSWtghhQOVEnFBOkD': {'uAubCghuPjB': true,
    'pfFOVEOCperm': NULL},
    'OTrWwS': NULL,
    'AcXbgyymirKTQZx': {'yUwSxZiZSSr': 0,
    'lDTC': 1,
    'UhjBpZ': NULL},
    'bBhpQAMDWl': [],
    'JmBMoMkzD': NULL,
    'ykADKYbguMZVJlm': [],
    'qLqUHjvwVEVAcnbs': [],
    'sNHhdeCoAZxDL': [],
    'gfhz': 'waJz',
    'TLCZOP': {'HcPewmZRqcghwBjHzRkzkfkE': NULL,
    'CjpMZoCThqMoBvimtzvxlrt': NULL,
    'lgpkLyrQluGzHkNKTx': NULL,
    'RLKYfEkkNdlrvlJPovBKJuQ': NULL,
    'nqFKVVNDCaNIl': 'dQTrPlzsz',
    'scVtCBQcYwyNnrmgIpYpbWdQ': NULL,
    'ZZiHFmKGKDvmRmwmfctstfV': 'GS',
    'EDIJHetonPOYCgULGYrSkNkIwpxche': 'waA'},
    'NPNDFGbRcPrfwzX': NULL,
    'QoPuTOMwkHrWlOQfXP': NULL,
    'AMEuaLMkYkWD': {'uPPvDVnmYBYzy': 'dQTrPlzsz',
    'jBMprvFduhOZV': 'dQTrPlzsz',
    'jfYSlkuRisuBn': 'dQTrPlzsz',
    'oVzrSeaBARUqj': 'dQTrPlzsz',
    'fohkQzphRKBcf': 'dQTrPlzsz',
    'wBGLxmqEjBKvzBJbjMTFG': 'osmgoJpKYP',
    'SPxYBpYweqbLnQMSICdhZ': 'osmgoJpKYP',
    'ZEAxzLIwQFaXXKSgbmhvK': 'osmgoJpKYP',
    'PJfgUIDgnaitTmCtKdMQr': 'osmgoJpKYP',
    'yqijinxAFkJMXODcQDKdN': 'osmgoJpKYP',
    'mjLsWAhqLXRDzgvRmkinTAYD': NULL,
    'PVICapLQHaXgaKygxlflolcY': NULL,
    'NspSTjSzPPqKlIPLZAtpEDJF': NULL,
    'ZqqFfWfQDHysYpyVvOuObrwY': NULL,
    'AqCRjeBJfWwVjdwEEsqsZisL': NULL},
    'uRabSyccPe': 'oeL',
    'XvkQOurJWuaDiZK': []},
    {'znGQGrPPR': 2,
    'oPTw': 21483,
    'faFP': 3,
    'uEdoxN': 0,
    'Swjmryop': NULL,
    'VIXNrOiClIevZ': true,
    'HcaUpnMJFZ': NULL,
    'ykHcZY': NULL,
    'DvxSpZK': 'tGfxQbvUCWehgmxGyGgBeJhdIWntfkLtonLnpveSTCqepaZwKETAAtIPIqEppznCDDpdPQonXQXKjeIbqOgTIpivdxPviZxkKMtleUUwvqEDOvqjTHuvskrdXeeoNMGpXkrSdYOhDGNkFcgCFChKavCflzRJoXrnjLgFGogROuusCbjbCaYyUZIVdBUpOFjpoeSpbpzSHofDcPuDZSbtpjDtaOmzJreITcsXPVqXnqvEzuzpGIXvefuMeQEdxKCsFWbTNl',
    'YVGP': {'IgDBxUoG': 'XyQOqOyAnyZ',
    'gNbYDDIw': 'cfsRwAfwmrVimfTykGVKuWypjKNHXcm',
    'yzKNPwwcg': 'RYfl',
    'DibXeeoeQSGYu': NULL,
    'hrWWrsiIiUofLy': NULL,
    'ASfMkqmeOqQuoB': 'XyQOqOyAnyZ',
    'uVprLfTzUvDvkP': '',
    'VkUqzkNMWJgigg': '',
    'rvWZXRcwRHxyBe': ''},
    'jadhjuVProR': NULL,
    'QyNS': NULL,
    'mASndgwqPuJ': NULL,
    'jKlgxqk': {'loas': NULL,
    'eQBbpMd': NULL,
    'Mq': NULL,
    'IZOSPuHhhxj': NULL,
    'CXcvMVHHwromQE': NULL,
    'JtSEjNk': NULL,
    'xQfpnypFfh': NULL,
    'tnMGA': NULL,
    'AnwyxMGchr': 'afUPRYRCSQmdcdtQYydnKGvviGtorsdOovCYjwCSlY',
    'wPmfaFxhPPKzwfPCb': 'afUPRYRCSQmdcdtQYydnKGvviGtorsdOovCYjwCSlY',
    'vsoBnKzcUwrNkp': 'afUPRYRCSQmdcdtQYydnKGvviGtorsdOovCYjwCSlY',
    'XCMbItPFANv': 0},
    'PtAAZqHJoNJFr': {'XZitsWIdUVj': NULL,
    'YuakMMl': true,
    'zwLMFgPAar': NULL,
    'ZZYrqGPvyHqCxmz': NULL},
    'PBaBpTrgf': {'EgANwCBEnprKw': 'TXHLvtCPAAYjJexsMT',
    'wIOvbrWCLyJ': 'XFreEKOqocIVsnw',
    'hKOGMlSamD': NULL,
    'EPfWsjecqG': NULL},
    'okorLUP': [],
    'SVGhSmWDI': [{'GtgKMpV': 'wsvEVmWnzdMOZEeMRfrVu',
    'yjXiRwzVE': 'UumrECUGNgUhW',
    'qgYlOUPRtAnYw': 'ftMupCdtrKzxkJlLCFINQkVHaE',
    'fTgoSMpOgpNJQ': 'KNpaXiOejRPdc'}],
    'FPKSWtghhQOVEnFBOkD': {'uAubCghuPjB': NULL,
    'pfFOVEOCperm': true},
    'OTrWwS': NULL,
    'AcXbgyymirKTQZx': {'yUwSxZiZSSr': 0,
    'lDTC': 1,
    'UhjBpZ': NULL},
    'bBhpQAMDWl': [],
    'JmBMoMkzD': NULL,
    'ykADKYbguMZVJlm': [],
    'qLqUHjvwVEVAcnbs': [],
    'sNHhdeCoAZxDL': [],
    'gfhz': 'XYItl',
    'TLCZOP': {'HcPewmZRqcghwBjHzRkzkfkE': NULL,
    'CjpMZoCThqMoBvimtzvxlrt': NULL,
    'lgpkLyrQluGzHkNKTx': NULL,
    'RLKYfEkkNdlrvlJPovBKJuQ': NULL,
    'nqFKVVNDCaNIl': 'dQTrPlzsz',
    'scVtCBQcYwyNnrmgIpYpbWdQ': NULL,
    'ZZiHFmKGKDvmRmwmfctstfV': 'GS',
    'EDIJHetonPOYCgULGYrSkNkIwpxche': 'waA'},
    'NPNDFGbRcPrfwzX': NULL,
    'QoPuTOMwkHrWlOQfXP': NULL,
    'AMEuaLMkYkWD': {'uPPvDVnmYBYzy': 'dQTrPlzsz',
    'jBMprvFduhOZV': 'dQTrPlzsz',
    'jfYSlkuRisuBn': 'dQTrPlzsz',
    'oVzrSeaBARUqj': 'dQTrPlzsz',
    'fohkQzphRKBcf': 'dQTrPlzsz',
    'wBGLxmqEjBKvzBJbjMTFG': 'dQTrPlzsz',
    'SPxYBpYweqbLnQMSICdhZ': 'dQTrPlzsz',
    'ZEAxzLIwQFaXXKSgbmhvK': 'dQTrPlzsz',
    'PJfgUIDgnaitTmCtKdMQr': 'dQTrPlzsz',
    'yqijinxAFkJMXODcQDKdN': 'dQTrPlzsz',
    'mjLsWAhqLXRDzgvRmkinTAYD': NULL,
    'PVICapLQHaXgaKygxlflolcY': NULL,
    'NspSTjSzPPqKlIPLZAtpEDJF': NULL,
    'ZqqFfWfQDHysYpyVvOuObrwY': NULL,
    'AqCRjeBJfWwVjdwEEsqsZisL': NULL},
    'uRabSyccPe': 'oeL',
    'XvkQOurJWuaDiZK': []}]);
SELECT * FROM test25
UNION ALL 
SELECT * FROM test25
ORDER BY hits;
PRAGMA verify_parallelism;
PRAGMA threads=3;
PRAGMA debug_force_external=true;
PRAGMA memory_limit='50MB';
create table test as (select range i from range(100000));
select i from test order by cast(i as varchar) desc;
select i from test order by list_value(i) desc;
select i from test order by list_value(0, i) desc;
select i from test order by struct_pack(i) desc;
select i from test order by struct_pack(a:=0, i) desc;
select i from test order by cast(i + 1000000000000 as varchar) desc;
drop table test;
PRAGMA debug_force_external=true;
PRAGMA memory_limit='500MB';
create table test as (select range i from range(100000));
select i from test order by cast(i as varchar) desc;
select i from test order by list_value(i) desc;
select i from test order by list_value(0, i) desc;
select i from test order by struct_pack(i) desc;
select i from test order by struct_pack(a:=0, i) desc;
select i from test order by cast(i + 1000000000000 as varchar) desc;
drop table test;
PRAGMA debug_force_external=false;
PRAGMA memory_limit='50MB';
create table test as (select range i from range(100000));
select i from test order by cast(i as varchar) desc;
select i from test order by list_value(i) desc;
select i from test order by list_value(0, i) desc;
select i from test order by struct_pack(i) desc;
select i from test order by struct_pack(a:=0, i) desc;
select i from test order by cast(i + 1000000000000 as varchar) desc;
drop table test;
PRAGMA debug_force_external=false;
PRAGMA memory_limit='500MB';
create table test as (select range i from range(100000));
select i from test order by cast(i as varchar) desc;
select i from test order by list_value(i) desc;
select i from test order by list_value(0, i) desc;
select i from test order by struct_pack(i) desc;
select i from test order by struct_pack(a:=0, i) desc;
select i from test order by cast(i + 1000000000000 as varchar) desc;
drop table test;
PRAGMA enable_verification;
SELECT 'Test' LIMIT ?;
PREPARE v1 AS SELECT 'Test' LIMIT ?;
EXECUTE v1(1);
EXECUTE v1(0);
PREPARE v2 AS SELECT * FROM RANGE(1000000000) LIMIT ? OFFSET ?;
EXECUTE v2(3, 0);
EXECUTE v2(3, 17);
PREPARE v3 AS SELECT * FROM RANGE(1000000000) LIMIT 2 OFFSET ?;
EXECUTE v3(0);
EXECUTE v3(17);
PREPARE v4 AS SELECT * FROM RANGE(1000000000) LIMIT ? OFFSET 17;
EXECUTE v4(3);
EXECUTE v4(6);
PREPARE v5 AS SELECT * FROM RANGE(1000000000) LIMIT (SELECT ?::INT) OFFSET (SELECT ?::INT);
EXECUTE v5(3, 0);
EXECUTE v5(3, 17);
PREPARE v6 AS SELECT * FROM RANGE(1000000000) LIMIT 3+? OFFSET ?+2*?;
EXECUTE v6(1, 0, 0);
EXECUTE v6(3, 1, 2);
PREPARE v7 AS SELECT * FROM GENERATE_SERIES(0,4,1) LIMIT ? OFFSET ?;
EXECUTE v7(NULL, 2);
EXECUTE v7(2, NULL);
EXECUTE v7(NULL, 9223372036854775807);
EXECUTE v7(9223372036854775807, NULL);
EXECUTE v7(NULL, 922337203685477580700);
EXECUTE v7(NULL, 4611686018427387904);
EXECUTE v7(4611686018427387904, NULL);
PRAGMA enable_verification;
SELECT COUNT(*) FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM range(1000000) LIMIT 10%) LIMIT 10%) LIMIT 10%);
SELECT * FROM range(10) UNION ALL SELECT * FROM range(10, 20) LIMIT 10%;
SELECT * FROM range(1000000) LIMIT 0.0001%;
PRAGMA enable_verification;
SELECT * FROM range(5) UNION ALL SELECT * FROM range(5) LIMIT 7;
SELECT COUNT(*) FROM (SELECT * FROM range(5) UNION ALL SELECT * FROM range(5) LIMIT 7) tbl;
PRAGMA enable_verification;
CREATE TABLE orders_small AS SELECT * FROM parquet_scan('data/parquet-testing/orders_small_parquet.test');
select o_orderkey, o_clerk, o_orderstatus, o_totalprice from orders_small
                    order by o_orderkey NULLS FIRST,
                    o_clerk NULLS FIRST, o_orderstatus NULLS FIRST,
                    o_totalprice DESC NULLS LAST limit 360;
select o_orderkey, o_clerk, o_orderstatus, o_totalprice from orders_small
                    order by o_orderkey NULLS FIRST,
                    o_clerk NULLS FIRST, o_orderstatus NULLS FIRST,
                    o_totalprice DESC NULLS LAST limit 10 offset 440;
PRAGMA enable_verification;
SELECT * FROM generate_series(0,10,1) LIMIT 3 OFFSET -1;
SELECT * FROM generate_series(0,10,1) LIMIT -3;
SELECT * FROM generate_series(0,10,1) LIMIT -1%;
CREATE TABLE integers AS SELECT -1 k;
SELECT * FROM generate_series(0,10,1) LIMIT (SELECT k FROM integers);
SELECT * FROM generate_series(0,10,1) LIMIT 1 OFFSET (SELECT k FROM integers);
SET default_null_order='nulls_first';
PRAGMA enable_verification;
CREATE TABLE test (a INTEGER, b INTEGER);
INSERT INTO test VALUES (11, 22), (12, 21), (13, 22), (14, 32), (15, 52);
SELECT a FROM test LIMIT 20 %;
SELECT a FROM test LIMIT 40 PERCENT;
SELECT a FROM test LIMIT 35%;
SELECT a FROM test LIMIT 79.9%;
SELECT a FROM test LIMIT 80.1%;
SELECT a FROM test LIMIT 100 PERCENT;
SELECT a FROM test LIMIT (30-10) %;
SELECT a FROM test LIMIT a %;
SELECT a FROM test LIMIT (a+1) %;
SELECT a FROM test LIMIT (a+b*c) %;
SELECT a FROM test LIMIT (a+b*c) %;
SELECT a FROM test LIMIT SUM(42) %;
SELECT * FROM test LIMIT RANDOM() %;
SELECT a FROM test LIMIT 50% OFFSET 2;
SELECT * FROM range(10) LIMIT 50% OFFSET 2;
SELECT * FROM range(10000) LIMIT 0.1% OFFSET 8000;
SELECT * FROM range(10000) LIMIT 0.1% OFFSET 9999;
SELECT a FROM test LIMIT (SELECT COUNT(*) FROM test) % OFFSET 1;
SELECT a FROM test LIMIT 50% OFFSET (((SELECT MIN(b) FROM test)-1)/10);
SELECT b FROM test LIMIT 70% OFFSET (((SELECT MIN(test.a) FROM test)-1)/10);
SELECT * FROM test LIMIT 30% OFFSET RANDOM() / 10.0;
SELECT b FROM test LIMIT 0%;
SELECT * FROM range(100) LIMIT -10 %;
SELECT * FROM test LIMIT (SELECT 'ab') %;
select 1 limit date '2021-11-25' %;
select * from test limit "Hello World" %;
CREATE TABLE test2 (a STRING);
INSERT INTO test2 VALUES ('first'), ('second'), ('third'), ('4th'), ('5th');
PREPARE v1 AS SELECT * FROM test2 LIMIT 40%;
EXECUTE v1;
CREATE VIEW v3 AS SELECT i % 5 g, LIST(CASE WHEN i=6 or i=8 then null else i end) l FROM RANGE(20) tbl(i) group by g;
SELECT g, 5=ANY(l) FROM v3 ORDER BY g LIMIT 80%;
SELECT g, 3>ANY(l) FROM v3 ORDER BY g LIMIT 50%;
CREATE TABLE struct_data (g INTEGER, e INTEGER);
INSERT INTO struct_data VALUES (1, 1), (1, 2), (2, 3), (2, 4), (2, 5), (3, 6), (5, NULL);
SELECT STRUCT_PACK(a := 42, b := 43);
SELECT e, STRUCT_PACK(e) FROM struct_data ORDER BY e LIMIT 60%;
CREATE TABLE integers(i INTEGER);
INSERT INTO integers VALUES (1), (2), (3), (4), (5);
SELECT * FROM integers as int LIMIT (SELECT max(integers.i) FROM integers where i > 5) %;
select 1 union all select 2 union all select 3 union all select 4 limit 50%;
select 1 union all select 2 union all select 3 union all select 4 limit 50%;
select 1 union all select 2 union all select 3 union all select 4 limit 50%;
select 1 union all select 2 union all select 3 union all select 4 limit 50%;
select 1 union all select 2 union all select 3 union all select 4 limit 50%;
select 1 union all select 2 union all select 3 union all select 4 limit 50%;
select 1 union all select 2 union all select 3 union all select 4 limit 50%;
select 1 union all select 2 union all select 3 union all select 4 limit 50%;
select 1 union all select 2 union all select 3 union all select 4 limit 50%;
select 1 union all select 2 union all select 3 union all select 4 limit 50%;
PRAGMA verify_parallelism;
PRAGMA threads=3;
create table test as (select range i from range(100000) order by i desc);
select * from test order by i asc;
drop table test;
PRAGMA debug_force_external=true;
PRAGMA memory_limit='50MB';
create table test as (select range i from range(100000));
select * from test order by i desc;
select cast(i as varchar) from test order by i desc;
select cast(i + 1000000000000 as varchar) from test order by i desc;
drop table test;
PRAGMA debug_force_external=true;
PRAGMA memory_limit='500MB';
create table test as (select range i from range(100000));
select * from test order by i desc;
select cast(i as varchar) from test order by i desc;
select cast(i + 1000000000000 as varchar) from test order by i desc;
drop table test;
PRAGMA debug_force_external=false;
PRAGMA memory_limit='50MB';
create table test as (select range i from range(100000));
select * from test order by i desc;
select cast(i as varchar) from test order by i desc;
select cast(i + 1000000000000 as varchar) from test order by i desc;
drop table test;
PRAGMA debug_force_external=false;
PRAGMA memory_limit='500MB';
create table test as (select range i from range(100000));
select * from test order by i desc;
select cast(i as varchar) from test order by i desc;
select cast(i + 1000000000000 as varchar) from test order by i desc;
drop table test;
PRAGMA enable_verification;
CREATE TABLE test (a INTEGER, b INTEGER);
INSERT INTO test VALUES (11, 22), (12, 21), (13, 22);
select b from test where a = 12;
SELECT b FROM test ORDER BY a DESC;
SELECT a, b FROM test ORDER BY a;
SELECT a, b FROM test ORDER BY a DESC;
SELECT a, b FROM test ORDER BY b, a;
SELECT a, b FROM test ORDER BY 2, 1;
SELECT a, b FROM test ORDER BY b DESC, a;
SELECT a, b FROM test ORDER BY b, a DESC;
SELECT a, b FROM test ORDER BY b, a DESC LIMIT 1;
SELECT a, b FROM test ORDER BY b, a DESC LIMIT 1 OFFSET 1;
SELECT a, b FROM test ORDER BY b, a DESC OFFSET 1;
SELECT a, b FROM test WHERE a < 13 ORDER BY b;
SELECT a, b FROM test WHERE a < 13 ORDER BY 2;
SELECT a, b FROM test WHERE a < 13 ORDER BY b DESC;
SELECT b, a FROM test WHERE a < 13 ORDER BY b DESC;
SELECT b % 2 AS f, SUM(a) FROM test GROUP BY f ORDER BY b % 2;
SELECT b % 2 AS f, a FROM test ORDER BY b % 2, a;
SELECT b % 2 AS f, SUM(a) FROM test GROUP BY f ORDER BY f;
SELECT b % 2 AS f, SUM(a) FROM test GROUP BY f ORDER BY 1;
SELECT a-10 AS k FROM test UNION SELECT a-10 AS l FROM test ORDER BY k;
SELECT a-10 AS k FROM test UNION SELECT a-10 AS l FROM test ORDER BY l;
SELECT a-10 AS k FROM test UNION SELECT a-10 AS l FROM test ORDER BY 1-k;
SELECT a-10 AS k FROM test UNION SELECT a-10 AS l FROM test ORDER BY a-10;
SELECT a-10 AS k FROM test UNION SELECT a-11 AS l FROM test ORDER BY a-11;
PRAGMA enable_verification;
CREATE TABLE candidate AS SELECT * FROM 'data/parquet-testing/candidate.parquet';
select * from candidate order by name;
select * from candidate where jaccard(name, 'BATMAN') >= 0.4 order by jaccard(name, 'BATMAN');
select * from candidate where jaro_winkler_similarity(name, 'BATMAN') >= 0.4 order by jaro_winkler_similarity(name, 'BATMAN');
PRAGMA enable_verification;
WITH cte AS (SELECT 3) SELECT * FROM range(10000000) LIMIT (SELECT * FROM cte);
WITH cte AS (SELECT 3) SELECT * FROM range(10000000) LIMIT (SELECT * FROM cte) OFFSET (SELECT * FROM cte);
SET default_null_order='nulls_first';
PRAGMA verify_parallelism;
PRAGMA threads=3;
PRAGMA debug_force_external=true;
PRAGMA memory_limit='50MB';
create table test as (select range i from range(100000));
insert into test values (NULL);
select * from test order by cast(i + 1000000000000 as varchar) nulls first;
select * from test order by i % 10, cast(i + 1000000000000 as varchar);
select * from test order by cast(i % 10 + 1000000000000 as varchar), i;
select * from test order by cast(i % 100 + 1000000000000 as varchar), i % 10, cast(i + 1000000000000 as varchar) nulls first;
select * from test order by cast(i % 1000 + 1000000000000 as varchar), i % 100, cast(i % 10 + 1000000000000 as varchar), i;
select * from test order by i % 100, cast(i % 10 + 1000000000000 as varchar), cast(i + 1000000000000 as varchar);
select * from test order by cast(i % 1000 + 1000000000000 as varchar), i % 100, i % 10, cast(i + 1000000000000 as varchar);
drop table test;
PRAGMA debug_force_external=true;
PRAGMA memory_limit='500MB';
create table test as (select range i from range(100000));
insert into test values (NULL);
select * from test order by cast(i + 1000000000000 as varchar) nulls first;
select * from test order by i % 10, cast(i + 1000000000000 as varchar);
select * from test order by cast(i % 10 + 1000000000000 as varchar), i;
select * from test order by cast(i % 100 + 1000000000000 as varchar), i % 10, cast(i + 1000000000000 as varchar) nulls first;
select * from test order by cast(i % 1000 + 1000000000000 as varchar), i % 100, cast(i % 10 + 1000000000000 as varchar), i;
select * from test order by i % 100, cast(i % 10 + 1000000000000 as varchar), cast(i + 1000000000000 as varchar);
select * from test order by cast(i % 1000 + 1000000000000 as varchar), i % 100, i % 10, cast(i + 1000000000000 as varchar);
drop table test;
PRAGMA debug_force_external=false;
PRAGMA memory_limit='50MB';
create table test as (select range i from range(100000));
insert into test values (NULL);
select * from test order by cast(i + 1000000000000 as varchar) nulls first;
select * from test order by i % 10, cast(i + 1000000000000 as varchar);
select * from test order by cast(i % 10 + 1000000000000 as varchar), i;
select * from test order by cast(i % 100 + 1000000000000 as varchar), i % 10, cast(i + 1000000000000 as varchar) nulls first;
select * from test order by cast(i % 1000 + 1000000000000 as varchar), i % 100, cast(i % 10 + 1000000000000 as varchar), i;
select * from test order by i % 100, cast(i % 10 + 1000000000000 as varchar), cast(i + 1000000000000 as varchar);
select * from test order by cast(i % 1000 + 1000000000000 as varchar), i % 100, i % 10, cast(i + 1000000000000 as varchar);
drop table test;
PRAGMA debug_force_external=false;
PRAGMA memory_limit='500MB';
create table test as (select range i from range(100000));
insert into test values (NULL);
select * from test order by cast(i + 1000000000000 as varchar) nulls first;
select * from test order by i % 10, cast(i + 1000000000000 as varchar);
select * from test order by cast(i % 10 + 1000000000000 as varchar), i;
select * from test order by cast(i % 100 + 1000000000000 as varchar), i % 10, cast(i + 1000000000000 as varchar) nulls first;
select * from test order by cast(i % 1000 + 1000000000000 as varchar), i % 100, cast(i % 10 + 1000000000000 as varchar), i;
select * from test order by i % 100, cast(i % 10 + 1000000000000 as varchar), cast(i + 1000000000000 as varchar);
select * from test order by cast(i % 1000 + 1000000000000 as varchar), i % 100, i % 10, cast(i + 1000000000000 as varchar);
drop table test;
SET default_null_order='nulls_first';
PRAGMA verify_parallelism;
PRAGMA threads=3;
SET default_null_order='nulls_first';
PRAGMA debug_force_external=true;
PRAGMA memory_limit='50MB';
create table test as (select range i from range(100000));
insert into test values (NULL);
select * from test order by cast(i as varchar) nulls first;
select * from test order by i % 10, cast(i as varchar);
select * from test order by cast(i % 10 as varchar), i;
select * from test order by cast(i % 100 as varchar), i % 10, cast(i as varchar) nulls first;
select * from test order by cast(i % 1000 as varchar), i % 100, cast(i % 10 as varchar), i;
select * from test order by i % 100, cast(i % 10 as varchar), cast(i as varchar);
select * from test order by cast(i % 1000 as varchar), i % 100, i % 10, cast(i as varchar);
drop table test;
PRAGMA debug_force_external=true;
PRAGMA memory_limit='500MB';
create table test as (select range i from range(100000));
insert into test values (NULL);
select * from test order by cast(i as varchar) nulls first;
select * from test order by i % 10, cast(i as varchar);
select * from test order by cast(i % 10 as varchar), i;
select * from test order by cast(i % 100 as varchar), i % 10, cast(i as varchar) nulls first;
select * from test order by cast(i % 1000 as varchar), i % 100, cast(i % 10 as varchar), i;
select * from test order by i % 100, cast(i % 10 as varchar), cast(i as varchar);
select * from test order by cast(i % 1000 as varchar), i % 100, i % 10, cast(i as varchar);
drop table test;
PRAGMA debug_force_external=false;
PRAGMA memory_limit='50MB';
create table test as (select range i from range(100000));
insert into test values (NULL);
select * from test order by cast(i as varchar) nulls first;
select * from test order by i % 10, cast(i as varchar);
select * from test order by cast(i % 10 as varchar), i;
select * from test order by cast(i % 100 as varchar), i % 10, cast(i as varchar) nulls first;
select * from test order by cast(i % 1000 as varchar), i % 100, cast(i % 10 as varchar), i;
select * from test order by i % 100, cast(i % 10 as varchar), cast(i as varchar);
select * from test order by cast(i % 1000 as varchar), i % 100, i % 10, cast(i as varchar);
drop table test;
PRAGMA debug_force_external=false;
PRAGMA memory_limit='500MB';
create table test as (select range i from range(100000));
insert into test values (NULL);
select * from test order by cast(i as varchar) nulls first;
select * from test order by i % 10, cast(i as varchar);
select * from test order by cast(i % 10 as varchar), i;
select * from test order by cast(i % 100 as varchar), i % 10, cast(i as varchar) nulls first;
select * from test order by cast(i % 1000 as varchar), i % 100, cast(i % 10 as varchar), i;
select * from test order by i % 100, cast(i % 10 as varchar), cast(i as varchar);
select * from test order by cast(i % 1000 as varchar), i % 100, i % 10, cast(i as varchar);
drop table test;
PRAGMA enable_verification;
CREATE TABLE test (a INTEGER, b INTEGER);
INSERT INTO test VALUES (11, 22), (12, 21), (13, 22);
SELECT a FROM test ORDER BY a;
PRAGMA default_order='DESCENDING';
SELECT a FROM test ORDER BY a;
PRAGMA default_order='ASC';
PRAGMA default_order());
PRAGMA default_order='UNKNOWN';
PRAGMA default_order=UNKNOWN);
PRAGMA default_order=3);
SET default_null_order='nulls_first';
PRAGMA enable_verification;
CREATE TABLE integers(g integer, i integer);
INSERT INTO integers values (0, 1), (0, 2), (1, 3), (1, NULL);
SELECT * FROM integers ORDER BY ALL;
SELECT * FROM integers ORDER BY * DESC;
SELECT * FROM integers ORDER BY * DESC NULLS LAST;
SELECT * FROM integers UNION ALL SELECT * FROM integers ORDER BY ALL;
SELECT * FROM integers UNION SELECT * FROM integers ORDER BY ALL;
PRAGMA enable_verification;
CREATE TABLE test (a hugeint);
INSERT INTO test values ((-170141183460469231731687303715884105728)::hugeint), (-1111::hugeint), (-1::hugeint), (0::hugeint), (1::hugeint), (1111::hugeint);
SELECT * FROM test order by a;
SELECT * FROM test order by a DESC;
PRAGMA verify_parallelism;
CREATE TABLE test AS SELECT a FROM range(10000, 0, -1) t1(a);
SELECT * FROM test ORDER BY a;
SET default_null_order='nulls_first';
PRAGMA enable_verification;
CREATE TABLE integers(i INTEGER);
INSERT INTO integers VALUES (1), (NULL);
SELECT * FROM integers ORDER BY i;
SELECT * FROM integers ORDER BY i NULLS FIRST;
SELECT * FROM integers ORDER BY i NULLS LAST;
SELECT 10 AS j, i FROM integers ORDER BY j, i NULLS LAST;
CREATE TABLE test(i INTEGER, j INTEGER);
INSERT INTO test VALUES (1, 1), (NULL, 1), (1, NULL);
SELECT * FROM test ORDER BY i NULLS FIRST, j NULLS LAST;
SELECT * FROM test ORDER BY i NULLS FIRST, j NULLS FIRST;
SELECT * FROM test ORDER BY i NULLS LAST, j NULLS FIRST;
SELECT i, j, row_number() OVER (PARTITION BY i ORDER BY j NULLS FIRST) FROM test ORDER BY i NULLS FIRST, j NULLS FIRST;
SELECT i, j, row_number() OVER (PARTITION BY i ORDER BY j NULLS LAST) FROM test ORDER BY i NULLS FIRST, j NULLS FIRST;
SELECT * FROM test ORDER BY i NULLS FIRST, j NULLS LAST LIMIT 2;
SELECT * FROM test ORDER BY i NULLS LAST, j NULLS LAST LIMIT 2;
SELECT * FROM integers ORDER BY i;
PRAGMA default_null_order='NULLS LAST';
SELECT * FROM integers ORDER BY i;
PRAGMA default_null_order='NULLS FIRST';
PRAGMA default_null_order());
PRAGMA default_null_order='UNKNOWN';
PRAGMA default_null_order=UNKNOWN);
PRAGMA default_null_order=3);
PRAGMA enable_verification;
CREATE TABLE integers(i INTEGER);
INSERT INTO integers VALUES (0), (0), (0), (0);
INSERT INTO integers SELECT * FROM integers;
INSERT INTO integers SELECT * FROM integers;
INSERT INTO integers SELECT * FROM integers;
INSERT INTO integers SELECT * FROM integers;
INSERT INTO integers SELECT * FROM integers;
INSERT INTO integers SELECT * FROM integers;
INSERT INTO integers SELECT * FROM integers;
INSERT INTO integers SELECT * FROM integers;
INSERT INTO integers SELECT * FROM integers;
INSERT INTO integers SELECT * FROM integers;
INSERT INTO integers SELECT * FROM integers;
INSERT INTO integers SELECT * FROM integers;
INSERT INTO integers SELECT * FROM integers;
INSERT INTO integers SELECT * FROM integers;
INSERT INTO integers SELECT * FROM integers;
SELECT SUM(i) FROM (SELECT i FROM integers ORDER BY i) t1;
PRAGMA enable_verification;
SELECT * FROM generate_series(0, 10000, 1) tbl(i) ORDER BY i DESC LIMIT 5;
CREATE TABLE integers AS SELECT 5 k;
SELECT * FROM generate_series(0, 10000, 1) tbl(i) ORDER BY i DESC LIMIT (SELECT k FROM integers);
CREATE TABLE strings AS SELECT '5'::VARCHAR k;
SELECT * FROM generate_series(0, 10000, 1) tbl(i) ORDER BY i DESC LIMIT (SELECT k FROM strings);
PREPARE v1 AS SELECT * FROM generate_series(0, 10000, 1) tbl(i) ORDER BY i DESC LIMIT ?::VARCHAR;
EXECUTE v1(5);
PREPARE v1 AS SELECT * FROM generate_series(0, 10000, 1) tbl(i) ORDER BY i DESC LIMIT ?::VARCHAR %;
EXECUTE v1('0.05');
CREATE TABLE doubles AS SELECT 0.05 d;
SELECT * FROM generate_series(0, 10000, 1) tbl(i) ORDER BY i DESC LIMIT (SELECT d FROM doubles) %;
