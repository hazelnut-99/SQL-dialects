PRAGMA enable_verification;
select [x for x in c if x IS NOT NULL] FROM test_vector_types(NULL::INT[]) t(c);;
select [x for x in c if x IS NOT NULL] FROM test_vector_types(NULL::INT[]) t(c);;
;
select [x for x in c if x IS NOT NULL] FROM test_vector_types(NULL::INT[]) t(c);;
SELECT main.list_apply(main.list_filter(c, (x -> (x IS NOT NULL))), (x -> x)) FROM test_vector_types(CAST(NULL AS INTEGER[])) AS t(c);
;
;
;
;
select [x for x in c if x IS NOT NULL] FROM test_vector_types(NULL::INT[]) t(c);;
select [x for x in c if x IS NULL] FROM test_vector_types(NULL::INT[]) t(c);;
select [x for x in c if x IS NULL] FROM test_vector_types(NULL::INT[]) t(c);;
;
select [x for x in c if x IS NULL] FROM test_vector_types(NULL::INT[]) t(c);;
SELECT main.list_apply(main.list_filter(c, (x -> (x IS NULL))), (x -> x)) FROM test_vector_types(CAST(NULL AS INTEGER[])) AS t(c);
;
;
;
;
select [x for x in c if x IS NULL] FROM test_vector_types(NULL::INT[]) t(c);;
select list_reduce(c, (x, y) -> x + y) FROM test_vector_types(NULL::INT[]) t(c) WHERE len(c) > 0;;
select list_reduce(c, (x, y) -> x + y) FROM test_vector_types(NULL::INT[]) t(c) WHERE len(c) > 0;;
;
select list_reduce(c, (x, y) -> x + y) FROM test_vector_types(NULL::INT[]) t(c) WHERE len(c) > 0;;
SELECT list_reduce(c, (main.row(x, y) -> (x + y))) FROM test_vector_types(CAST(NULL AS INTEGER[])) AS t(c) WHERE (len(c) > 0);
;
;
;
;
select list_reduce(c, (x, y) -> x + y) FROM test_vector_types(NULL::INT[]) t(c) WHERE len(c) > 0;;
