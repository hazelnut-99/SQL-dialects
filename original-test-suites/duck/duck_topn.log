CREATE TABLE integers(i INTEGER, j INTEGER);
PRAGMA explain_output = OPTIMIZED_ONLY;
EXPLAIN SELECT i FROM integers LIMIT 4;
EXPLAIN SELECT i FROM integers ORDER BY i;
EXPLAIN SELECT i FROM integers ORDER BY i LIMIT 4;
EXPLAIN SELECT i FROM integers ORDER BY i LIMIT 4 OFFSET 3;
EXPLAIN SELECT i FROM integers ORDER BY i OFFSET 3;
SELECT SETSEED(0.42);
create table CUSTOMERVIEW as select range customer_id, range*random()::INT % 3 as customer_priority from range(1000, 4000); ;
create table OrderView as select range order_id, ((random()*2::INT)%2)::BOOL order_isExpeditedShipped, range + (random() * 3)::INT order_customerId from range(1000, 4000);
create table OrderItemView as select random()*25 orderItem_quantity, range orderItem_orderId from range(1000, 4000);
create table CREDITCARDVIEW as select range CREDITCARD_CUSTOMERID from range(1000, 4000); ;
WITH CTE AS (
  SELECT J1P, CUSTOMER_PRIORITY, CUSTOMER_ID FROM CUSTOMERVIEW
  LEFT JOIN (
    SELECT ORDER_CUSTOMERID, SUM(ORDERITEMVIEW.ORDERITEM_QUANTITY) AS J1P FROM ORDERVIEW
    LEFT JOIN ORDERITEMVIEW ON (ORDERVIEW.ORDER_ID = ORDERITEMVIEW.ORDERITEM_ORDERID)
    WHERE (ORDERVIEW.ORDER_ISEXPEDITEDSHIPPED IS TRUE)
    GROUP BY ORDERVIEW.ORDER_CUSTOMERID
  ) AS J1J ON (J1J.ORDER_CUSTOMERID = CUSTOMERVIEW.CUSTOMER_ID)
  ORDER BY CUSTOMER_PRIORITY ASC
  LIMIT 50 OFFSET 50
) SELECT J1P, Q2P, Q3P FROM CTE
LEFT JOIN (
  SELECT ORDER_CUSTOMERID FROM ORDERVIEW
) AS Q1J ON (Q1J.ORDER_CUSTOMERID = CTE.CUSTOMER_ID)
LEFT JOIN (
  SELECT CREDITCARD_CUSTOMERID AS Q2P FROM CREDITCARDVIEW
) AS Q2J ON (Q2J.Q2P = CTE.CUSTOMER_ID)
LEFT JOIN (
  SELECT ORDER_CUSTOMERID Q3P FROM ORDERVIEW
  LEFT JOIN ORDERITEMVIEW ON ORDERVIEW.ORDER_ID = ORDERITEM_ORDERID
) AS Q3J ON (Q3J.Q3P = CTE.CUSTOMER_ID);
explain WITH CTE AS (
  SELECT J1P, CUSTOMER_PRIORITY, CUSTOMER_ID FROM CUSTOMERVIEW
  LEFT JOIN (
    SELECT ORDER_CUSTOMERID, SUM(ORDERITEMVIEW.ORDERITEM_QUANTITY) AS J1P FROM ORDERVIEW
    LEFT JOIN ORDERITEMVIEW ON (ORDERVIEW.ORDER_ID = ORDERITEMVIEW.ORDERITEM_ORDERID)
    WHERE (ORDERVIEW.ORDER_ISEXPEDITEDSHIPPED IS TRUE)
    GROUP BY ORDERVIEW.ORDER_CUSTOMERID
  ) AS J1J ON (J1J.ORDER_CUSTOMERID = CUSTOMERVIEW.CUSTOMER_ID)
  ORDER BY CUSTOMER_PRIORITY ASC
  LIMIT 50 OFFSET 50
) SELECT J1P, Q2P, Q3P FROM CTE
LEFT JOIN (
  SELECT ORDER_CUSTOMERID FROM ORDERVIEW
) AS Q1J ON (Q1J.ORDER_CUSTOMERID = CTE.CUSTOMER_ID)
LEFT JOIN (
  SELECT CREDITCARD_CUSTOMERID AS Q2P FROM CREDITCARDVIEW
) AS Q2J ON (Q2J.Q2P = CTE.CUSTOMER_ID)
LEFT JOIN (
  SELECT ORDER_CUSTOMERID Q3P FROM ORDERVIEW
  LEFT JOIN ORDERITEMVIEW ON ORDERVIEW.ORDER_ID = ORDERITEM_ORDERID
) AS Q3J ON (Q3J.Q3P = CTE.CUSTOMER_ID);
PRAGMA enable_verification;
CREATE TABLE integers(i INTEGER);
INSERT INTO integers VALUES (1), (NULL);
SELECT * FROM integers ORDER BY i NULLS FIRST LIMIT 2;
SELECT * FROM integers ORDER BY i NULLS LAST LIMIT 2;
SELECT * FROM integers ORDER BY i DESC NULLS FIRST LIMIT 2;
SELECT * FROM integers ORDER BY i DESC NULLS LAST LIMIT 2;
PRAGMA enable_verification;
PRAGMA threads=4;
CREATE TABLE integers AS SELECT i, i j FROM range(1000000) tbl(i) UNION ALL SELECT NULL i, range j FROM range(1000000);
SELECT i FROM integers ORDER BY i ASC NULLS FIRST LIMIT 5;
SELECT i FROM integers ORDER BY i ASC NULLS LAST LIMIT 5;
SELECT i FROM integers ORDER BY i DESC NULLS FIRST LIMIT 5;
SELECT i FROM integers ORDER BY i DESC NULLS LAST LIMIT 5;
SELECT i FROM integers ORDER BY i NULLS FIRST LIMIT 5 OFFSET 1000000;
SELECT i FROM integers ORDER BY i DESC NULLS FIRST LIMIT 5 OFFSET 1000000;
SELECT i FROM integers ORDER BY i NULLS LAST LIMIT 5 OFFSET 1000000;
SELECT j, i FROM integers ORDER BY j, i NULLS FIRST LIMIT 5;
SELECT j, i FROM integers ORDER BY j, i NULLS LAST LIMIT 5;
SELECT j, i FROM integers ORDER BY j DESC, i DESC NULLS FIRST LIMIT 5;
SELECT j, i FROM integers ORDER BY j DESC, i DESC NULLS LAST LIMIT 5;
SELECT i, j FROM integers ORDER BY i DESC NULLS FIRST, j DESC LIMIT 5;
SELECT i, j FROM integers ORDER BY i DESC NULLS LAST, j ASC LIMIT 5;
DROP TABLE integers;
CREATE TABLE integers AS SELECT NULL i, i j FROM range(1000000) tbl(i) UNION ALL SELECT range i, range j FROM range(1000000);
SELECT i FROM integers ORDER BY i ASC NULLS FIRST LIMIT 5;
SELECT i FROM integers ORDER BY i ASC NULLS LAST LIMIT 5;
SELECT i FROM integers ORDER BY i DESC NULLS FIRST LIMIT 5;
SELECT i FROM integers ORDER BY i DESC NULLS LAST LIMIT 5;
SELECT i FROM integers ORDER BY i NULLS FIRST LIMIT 5 OFFSET 1000000;
SELECT i FROM integers ORDER BY i DESC NULLS FIRST LIMIT 5 OFFSET 1000000;
SELECT i FROM integers ORDER BY i NULLS LAST LIMIT 5 OFFSET 1000000;
SELECT j, i FROM integers ORDER BY j, i NULLS FIRST LIMIT 5;
SELECT j, i FROM integers ORDER BY j, i NULLS LAST LIMIT 5;
SELECT j, i FROM integers ORDER BY j DESC, i DESC NULLS FIRST LIMIT 5;
SELECT j, i FROM integers ORDER BY j DESC, i DESC NULLS LAST LIMIT 5;
SELECT i, j FROM integers ORDER BY i DESC NULLS FIRST, j DESC LIMIT 5;
SELECT i, j FROM integers ORDER BY i DESC NULLS LAST, j ASC LIMIT 5;
DROP TABLE integers;
CREATE TABLE integers AS SELECT NULL i, i j FROM range(1000000) tbl(i) UNION ALL SELECT range i, range j FROM range(1000000);
PRAGMA enable_verification;
CREATE TABLE integers AS SELECT i, i j FROM range(100000) tbl(i) UNION ALL SELECT NULL i, range j FROM range(100000);
SELECT i FROM integers ORDER BY i ASC NULLS FIRST LIMIT 5;
SELECT i FROM integers ORDER BY i ASC NULLS LAST LIMIT 5;
SELECT i FROM integers ORDER BY i DESC NULLS FIRST LIMIT 5;
SELECT i FROM integers ORDER BY i DESC NULLS LAST LIMIT 5;
SELECT i FROM integers ORDER BY i NULLS FIRST LIMIT 5 OFFSET 100000;
SELECT i FROM integers ORDER BY i DESC NULLS FIRST LIMIT 5 OFFSET 100000;
SELECT i FROM integers ORDER BY i NULLS LAST LIMIT 5 OFFSET 100000;
SELECT j, i FROM integers ORDER BY j, i NULLS FIRST LIMIT 5;
SELECT j, i FROM integers ORDER BY j, i NULLS LAST LIMIT 5;
SELECT j, i FROM integers ORDER BY j DESC, i DESC NULLS FIRST LIMIT 5;
SELECT j, i FROM integers ORDER BY j DESC, i DESC NULLS LAST LIMIT 5;
SELECT i, j FROM integers ORDER BY i DESC NULLS FIRST, j DESC LIMIT 5;
SELECT i, j FROM integers ORDER BY i DESC NULLS LAST, j ASC LIMIT 5;
DROP TABLE integers;
CREATE TABLE integers AS SELECT NULL i, i j FROM range(100000) tbl(i) UNION ALL SELECT range i, range j FROM range(100000);
SELECT i FROM integers ORDER BY i ASC NULLS FIRST LIMIT 5;
SELECT i FROM integers ORDER BY i ASC NULLS LAST LIMIT 5;
SELECT i FROM integers ORDER BY i DESC NULLS FIRST LIMIT 5;
SELECT i FROM integers ORDER BY i DESC NULLS LAST LIMIT 5;
SELECT i FROM integers ORDER BY i NULLS FIRST LIMIT 5 OFFSET 100000;
SELECT i FROM integers ORDER BY i DESC NULLS FIRST LIMIT 5 OFFSET 100000;
SELECT i FROM integers ORDER BY i NULLS LAST LIMIT 5 OFFSET 100000;
SELECT j, i FROM integers ORDER BY j, i NULLS FIRST LIMIT 5;
SELECT j, i FROM integers ORDER BY j, i NULLS LAST LIMIT 5;
SELECT j, i FROM integers ORDER BY j DESC, i DESC NULLS FIRST LIMIT 5;
SELECT j, i FROM integers ORDER BY j DESC, i DESC NULLS LAST LIMIT 5;
SELECT i, j FROM integers ORDER BY i DESC NULLS FIRST, j DESC LIMIT 5;
SELECT i, j FROM integers ORDER BY i DESC NULLS LAST, j ASC LIMIT 5;
DROP TABLE integers;
CREATE TABLE integers AS SELECT NULL i, i j FROM range(100000) tbl(i) UNION ALL SELECT range i, range j FROM range(100000);
PRAGMA enable_verification;
CREATE TABLE integers AS SELECT i, i j FROM range(1000) tbl(i) UNION ALL SELECT NULL i, range j FROM range(1000);
SELECT i FROM integers ORDER BY i ASC NULLS FIRST LIMIT 5;
SELECT i FROM integers ORDER BY i ASC NULLS LAST LIMIT 5;
SELECT i FROM integers ORDER BY i DESC NULLS FIRST LIMIT 5;
SELECT i FROM integers ORDER BY i DESC NULLS LAST LIMIT 5;
SELECT i FROM integers ORDER BY i NULLS FIRST LIMIT 5 OFFSET 1000;
SELECT i FROM integers ORDER BY i DESC NULLS FIRST LIMIT 5 OFFSET 1000;
SELECT i FROM integers ORDER BY i NULLS LAST LIMIT 5 OFFSET 1000;
SELECT j, i FROM integers ORDER BY j, i NULLS FIRST LIMIT 5;
SELECT j, i FROM integers ORDER BY j, i NULLS LAST LIMIT 5;
SELECT j, i FROM integers ORDER BY j DESC, i DESC NULLS FIRST LIMIT 5;
SELECT j, i FROM integers ORDER BY j DESC, i DESC NULLS LAST LIMIT 5;
SELECT i, j FROM integers ORDER BY i DESC NULLS FIRST, j DESC LIMIT 5;
SELECT i, j FROM integers ORDER BY i DESC NULLS LAST, j ASC LIMIT 5;
DROP TABLE integers;
CREATE TABLE integers AS SELECT NULL i, i j FROM range(1000) tbl(i) UNION ALL SELECT range i, range j FROM range(1000);
SELECT i FROM integers ORDER BY i ASC NULLS FIRST LIMIT 5;
SELECT i FROM integers ORDER BY i ASC NULLS LAST LIMIT 5;
SELECT i FROM integers ORDER BY i DESC NULLS FIRST LIMIT 5;
SELECT i FROM integers ORDER BY i DESC NULLS LAST LIMIT 5;
SELECT i FROM integers ORDER BY i NULLS FIRST LIMIT 5 OFFSET 1000;
SELECT i FROM integers ORDER BY i DESC NULLS FIRST LIMIT 5 OFFSET 1000;
SELECT i FROM integers ORDER BY i NULLS LAST LIMIT 5 OFFSET 1000;
SELECT j, i FROM integers ORDER BY j, i NULLS FIRST LIMIT 5;
SELECT j, i FROM integers ORDER BY j, i NULLS LAST LIMIT 5;
SELECT j, i FROM integers ORDER BY j DESC, i DESC NULLS FIRST LIMIT 5;
SELECT j, i FROM integers ORDER BY j DESC, i DESC NULLS LAST LIMIT 5;
SELECT i, j FROM integers ORDER BY i DESC NULLS FIRST, j DESC LIMIT 5;
SELECT i, j FROM integers ORDER BY i DESC NULLS LAST, j ASC LIMIT 5;
DROP TABLE integers;
CREATE TABLE integers AS SELECT NULL i, i j FROM range(1000) tbl(i) UNION ALL SELECT range i, range j FROM range(1000);
PRAGMA enable_verification;
CREATE TABLE tbl AS SELECT i, i % 1000 j FROM range(1000000) tbl(i);
SELECT * FROM tbl ORDER BY j, i LIMIT 5;
SELECT * FROM tbl ORDER BY j DESC, i DESC LIMIT 5;
PRAGMA enable_verification;
CREATE TABLE test (b INTEGER);
INSERT INTO test VALUES (22), (2), (7);
SELECT b FROM test ORDER BY b DESC LIMIT 2;
SELECT b FROM test ORDER BY b LIMIT 1 OFFSET 1;
SELECT b FROM test ORDER BY b LIMIT 10 OFFSET 1;
SELECT b FROM test ORDER BY b LIMIT 10 OFFSET 10;
SELECT b FROM test ORDER BY b OFFSET 10;
PRAGMA enable_verification;
CREATE TABLE final(channel VARCHAR, i_brand_id INTEGER, i_class_id INTEGER, i_category_id INTEGER, sum_sales DECIMAL(38,2), number_sales HUGEINT);
COPY final FROM 'data/csv/tpcds_14.csv' (FORMAT CSV, DELIMITER '|', HEADER);
SELECT * FROM final
ORDER BY channel NULLS FIRST,
         i_brand_id NULLS FIRST,
         i_class_id NULLS FIRST,
         i_category_id NULLS FIRST
LIMIT 100;
SELECT * FROM final
ORDER BY channel DESC NULLS FIRST,
         i_brand_id DESC NULLS FIRST,
         i_class_id DESC NULLS FIRST,
         i_category_id DESC NULLS FIRST
LIMIT 100;
SELECT * FROM final
ORDER BY channel NULLS LAST,
         i_brand_id NULLS LAST,
         i_class_id NULLS LAST,
         i_category_id NULLS LAST
LIMIT 100;
SELECT * FROM final
ORDER BY channel DESC NULLS LAST,
         i_brand_id DESC NULLS LAST,
         i_class_id DESC NULLS LAST,
         i_category_id DESC NULLS LAST
LIMIT 100;
PRAGMA enable_verification;
CREATE TABLE tbl AS SELECT [i] l FROM range(1000) tbl(i) UNION ALL SELECT NULL l FROM range(3);
SELECT l FROM tbl ORDER BY l NULLS FIRST LIMIT 5;
SELECT l FROM tbl ORDER BY l NULLS LAST LIMIT 5;
SELECT l FROM tbl ORDER BY l DESC NULLS FIRST LIMIT 5;
SELECT l FROM tbl ORDER BY l DESC NULLS LAST LIMIT 5;
DROP TABLE tbl;
CREATE TABLE tbl AS SELECT NULL l FROM range(3) UNION ALL SELECT [i] l FROM range(1000) tbl(i);
SELECT l FROM tbl ORDER BY l NULLS FIRST LIMIT 5;
SELECT l FROM tbl ORDER BY l NULLS LAST LIMIT 5;
SELECT l FROM tbl ORDER BY l DESC NULLS FIRST LIMIT 5;
SELECT l FROM tbl ORDER BY l DESC NULLS LAST LIMIT 5;
DROP TABLE tbl;
CREATE TABLE tbl AS SELECT NULL l FROM range(3) UNION ALL SELECT [i] l FROM range(1000) tbl(i);
DROP TABLE tbl;
CREATE TABLE tbl AS SELECT [i] l FROM range(1000) tbl(i) UNION ALL SELECT [NULL] l FROM range(3);
SELECT l FROM tbl ORDER BY l NULLS FIRST LIMIT 5;
SELECT l FROM tbl ORDER BY l NULLS LAST LIMIT 5;
SELECT l FROM tbl ORDER BY l DESC NULLS FIRST LIMIT 5;
SELECT l FROM tbl ORDER BY l DESC NULLS LAST LIMIT 5;
DROP TABLE tbl;
CREATE TABLE tbl AS SELECT [NULL] l FROM range(3) UNION ALL SELECT [i] l FROM range(1000) tbl(i);
SELECT l FROM tbl ORDER BY l NULLS FIRST LIMIT 5;
SELECT l FROM tbl ORDER BY l NULLS LAST LIMIT 5;
SELECT l FROM tbl ORDER BY l DESC NULLS FIRST LIMIT 5;
SELECT l FROM tbl ORDER BY l DESC NULLS LAST LIMIT 5;
DROP TABLE tbl;
CREATE TABLE tbl AS SELECT [NULL] l FROM range(3) UNION ALL SELECT [i] l FROM range(1000) tbl(i);
SELECT range(i) l FROM range(10) tbl(i) ORDER BY l DESC LIMIT 3;
SELECT range(i) l FROM range(10) tbl(i) ORDER BY l ASC LIMIT 3;
PRAGMA enable_verification;
CREATE TABLE tbl AS SELECT {'i': i} l FROM range(1000) tbl(i) UNION ALL SELECT NULL l FROM range(3);
SELECT l FROM tbl ORDER BY l NULLS FIRST LIMIT 5;
SELECT l FROM tbl ORDER BY l NULLS LAST LIMIT 5;
SELECT l FROM tbl ORDER BY l DESC NULLS FIRST LIMIT 5;
SELECT l FROM tbl ORDER BY l DESC NULLS LAST LIMIT 5;
DROP TABLE tbl;
CREATE TABLE tbl AS SELECT NULL l FROM range(3) UNION ALL SELECT {'i': i} l FROM range(1000) tbl(i);
SELECT l FROM tbl ORDER BY l NULLS FIRST LIMIT 5;
SELECT l FROM tbl ORDER BY l NULLS LAST LIMIT 5;
SELECT l FROM tbl ORDER BY l DESC NULLS FIRST LIMIT 5;
SELECT l FROM tbl ORDER BY l DESC NULLS LAST LIMIT 5;
DROP TABLE tbl;
CREATE TABLE tbl AS SELECT NULL l FROM range(3) UNION ALL SELECT {'i': i} l FROM range(1000) tbl(i);
CREATE TABLE final(s_store_name1 VARCHAR, s_store_id1 VARCHAR, d_week_seq1 INTEGER, "sun_sales1 / sun_sales2" DOUBLE, "mon_sales1 / mon_sales2" DOUBLE, "tue_sales1 / tue_sales2" DOUBLE, "wed_sales1 / wed_sales2" DOUBLE, "thu_sales1 / thu_sales2" DOUBLE, "fri_sales1 / fri_sales2" DOUBLE, "sat_sales1 / sat_sales2" DOUBLE);
COPY final FROM 'data/csv/tpcds_59.csv' (FORMAT CSV, DELIMITER '|', HEADER);
SELECT *
FROM final
ORDER BY s_store_name1 NULLS FIRST,
         s_store_id1 NULLS FIRST,
         d_week_seq1 NULLS FIRST
LIMIT 100;
