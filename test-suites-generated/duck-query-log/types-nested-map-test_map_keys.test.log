PRAGMA enable_verification;;
select map_keys(MAP([],[]));;
select map_keys(MAP([],[]));;
;
select map_keys(MAP([],[]));;
SELECT map_keys(map(main.list_value(), main.list_value()));
;
;
;
;
select map_keys(MAP([],[]));;
select map_keys(MAP(['a'],[5]));;
select map_keys(MAP(['a'],[5]));;
;
select map_keys(MAP(['a'],[5]));;
SELECT map_keys(map(main.list_value('a'), main.list_value(5)));
;
;
;
;
select map_keys(MAP(['a'],[5]));;
select map_keys(MAP(['a', 'b', 'c', 'd'], [5,1,8,3]));
select map_keys(MAP(['a', 'b', 'c', 'd'], [5,1,8,3]));
;
select map_keys(MAP(['a', 'b', 'c', 'd'], [5,1,8,3]));
SELECT map_keys(map(main.list_value('a', 'b', 'c', 'd'), main.list_value(5, 1, 8, 3)));
;
;
;
;
select map_keys(MAP(['a', 'b', 'c', 'd'], [5,1,8,3]));
select map_keys(NULL);
select map_keys(NULL);
;
select map_keys(NULL);
SELECT map_keys(NULL);
;
;
;
;
select map_keys(NULL);
CREATE TABLE t1 (list STRUCT(a INT, b VARCHAR)[]);;
INSERT INTO t1 VALUES (ARRAY[(1, 'x'), (2, 'y'), (4, 's')]);;
SELECT map_keys(MAP_FROM_ENTRIES(list)) FROM t1;;
SELECT map_keys(MAP_FROM_ENTRIES(list)) FROM t1;;
;
SELECT map_keys(MAP_FROM_ENTRIES(list)) FROM t1;;
SELECT map_keys(map_from_entries(list)) FROM t1;
;
;
;
;
SELECT map_keys(MAP_FROM_ENTRIES(list)) FROM t1;;
INSERT INTO t1 VALUES (ARRAY[(2, 'a'), (3,'b')]);
INSERT INTO t1 VALUES (ARRAY[(6, 'h'), (7,'g')]);
SELECT map_keys(MAP_FROM_ENTRIES(list)) FROM t1;;
SELECT map_keys(MAP_FROM_ENTRIES(list)) FROM t1;;
;
SELECT map_keys(MAP_FROM_ENTRIES(list)) FROM t1;;
SELECT map_keys(map_from_entries(list)) FROM t1;
;
;
;
;
SELECT map_keys(MAP_FROM_ENTRIES(list)) FROM t1;;
INSERT INTO t1 VALUES (NULL);
SELECT map_keys(MAP_FROM_ENTRIES(list)) FROM t1;;
SELECT map_keys(MAP_FROM_ENTRIES(list)) FROM t1;;
;
SELECT map_keys(MAP_FROM_ENTRIES(list)) FROM t1;;
SELECT map_keys(map_from_entries(list)) FROM t1;
;
;
;
;
SELECT map_keys(MAP_FROM_ENTRIES(list)) FROM t1;;
create table tbl (
	maps MAP(integer, text)[]
);;
insert into tbl VALUES (
	[
		MAP([5,3,2],['a','c','b']),
		MAP([1], [NULL]),
		MAP([7,9,1,3,5,6], ['ab','c','d','ef','ba','he'])
	]
);;
select list_apply(maps, x -> map_keys(x)) from tbl;;
select list_apply(maps, x -> map_keys(x)) from tbl;;
;
select list_apply(maps, x -> map_keys(x)) from tbl;;
SELECT list_apply(maps, (x -> map_keys(x))) FROM tbl;
;
;
;
;
select list_apply(maps, x -> map_keys(x)) from tbl;;
CREATE MACRO map_keys_macro(x) AS (map_keys(x));
select map_keys_macro(map_from_entries(list)) from t1;;
select map_keys_macro(map_from_entries(list)) from t1;;
;
select map_keys_macro(map_from_entries(list)) from t1;;
SELECT map_keys_macro(map_from_entries(list)) FROM t1;
;
;
;
;
select map_keys_macro(map_from_entries(list)) from t1;;
select maps, list_apply(maps, x -> list_sort(map_keys(x))) from tbl;;
select maps, list_apply(maps, x -> list_sort(map_keys(x))) from tbl;;
;
select maps, list_apply(maps, x -> list_sort(map_keys(x))) from tbl;;
SELECT maps, list_apply(maps, (x -> list_sort(map_keys(x)))) FROM tbl;
;
;
;
;
select maps, list_apply(maps, x -> list_sort(map_keys(x))) from tbl;;
select maps, list_apply(maps, x -> map(list_sort(map_keys(x)), list_sort(map_values(x)))) from tbl;;
select maps, list_apply(maps, x -> map(list_sort(map_keys(x)), list_sort(map_values(x)))) from tbl;;
;
select maps, list_apply(maps, x -> map(list_sort(map_keys(x)), list_sort(map_values(x)))) from tbl;;
SELECT maps, list_apply(maps, (x -> map(list_sort(map_keys(x)), list_sort(map_values(x))))) FROM tbl;
;
;
;
;
select maps, list_apply(maps, x -> map(list_sort(map_keys(x)), list_sort(map_values(x)))) from tbl;;
create table filtered (
	col map(integer, integer),
	idx integer
);;
insert into filtered VALUES (
	map([7,4,9,1],[NULL,4,7,5]),
	0
), (
	map([6,3,87,2],[0,NULL,5,NULL]),
	1
), (
	map([7,4,9],[8,3,4]),
	2
), (
	map([9,2,7,5,8,1],[NULL,NULL,4,5,6,7]),
	3
);;
select map_keys(col) from filtered where idx % 2 != 0;;
select map_keys(col) from filtered where idx % 2 != 0;;
;
select map_keys(col) from filtered where idx % 2 != 0;;
SELECT map_keys(col) FROM filtered WHERE ((idx % 2) != 0);
;
;
;
;
select map_keys(col) from filtered where idx % 2 != 0;;
