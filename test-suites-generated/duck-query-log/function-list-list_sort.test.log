PRAGMA enable_verification;;
PRAGMA default_order='ASC';;
PRAGMA default_null_order='NULLS FIRST';;
SELECT list_sort(NULL);
SELECT list_sort(NULL);
;
SELECT list_sort(NULL);
SELECT list_sort(NULL);
;
;
;
;
SELECT list_sort(NULL);
SELECT list_sort([NULL]);
SELECT list_sort([NULL]);
;
SELECT list_sort([NULL]);
SELECT list_sort(main.list_value(NULL));
;
;
;
;
SELECT list_sort([NULL]);
SELECT list_sort([]);
SELECT list_sort([]);
;
SELECT list_sort([]);
SELECT list_sort(main.list_value());
;
;
;
;
SELECT list_sort([]);
SELECT list_sort([]) WHERE 1 = 0;
SELECT list_sort([]) WHERE 1 = 0;
;
SELECT list_sort([]) WHERE 1 = 0;
SELECT list_sort(main.list_value()) WHERE (1 = 0);
;
;
;
;
SELECT list_sort([]) WHERE 1 = 0;
SELECT list_reverse_sort(NULL);
SELECT list_reverse_sort(NULL);
;
SELECT list_reverse_sort(NULL);
SELECT list_reverse_sort(NULL);
;
;
;
;
SELECT list_reverse_sort(NULL);
SELECT list_reverse_sort([NULL]);
SELECT list_reverse_sort([NULL]);
;
SELECT list_reverse_sort([NULL]);
SELECT list_reverse_sort(main.list_value(NULL));
;
;
;
;
SELECT list_reverse_sort([NULL]);
SELECT list_reverse_sort([]);
SELECT list_reverse_sort([]);
;
SELECT list_reverse_sort([]);
SELECT list_reverse_sort(main.list_value());
;
;
;
;
SELECT list_reverse_sort([]);
SELECT list_reverse_sort([]) WHERE 1 = 0;
SELECT list_reverse_sort([]) WHERE 1 = 0;
;
SELECT list_reverse_sort([]) WHERE 1 = 0;
SELECT list_reverse_sort(main.list_value()) WHERE (1 = 0);
;
;
;
;
SELECT list_reverse_sort([]) WHERE 1 = 0;
SELECT list_sort();
SELECT list_sort();
;
SELECT list_sort();
SELECT list_sort();
SELECT list_sort(*);
SELECT list_sort(*);
;
SELECT list_sort(*);
SELECT list_sort(*);
SELECT list_sort([1, 2], 2);
SELECT list_sort([1, 2], 2);
;
SELECT list_sort([1, 2], 2);
SELECT list_sort([1, 2], 2);
SELECT list_sort([1, 2], 'DESC', 2);
SELECT list_sort([1, 2], 'DESC', 2);
;
SELECT list_sort([1, 2], 'DESC', 2);
SELECT list_sort([1, 2], 'DESC', 2);
SELECT list_sort([1, 2], 2, 2);
SELECT list_sort([1, 2], 2, 2);
;
SELECT list_sort([1, 2], 2, 2);
SELECT list_sort([1, 2], 2, 2);
SELECT list_reverse_sort();
SELECT list_reverse_sort();
;
SELECT list_reverse_sort();
SELECT list_reverse_sort();
SELECT list_reverse_sort(*);
SELECT list_reverse_sort(*);
;
SELECT list_reverse_sort(*);
SELECT list_reverse_sort(*);
SELECT list_reverse_sort([1, 2], 2);
SELECT list_reverse_sort([1, 2], 2);
;
SELECT list_reverse_sort([1, 2], 2);
SELECT list_reverse_sort([1, 2], 2);
SELECT list_reverse_sort([1, 2], 'DESC', 2);
SELECT list_reverse_sort([1, 2], 'DESC', 2);
;
SELECT list_reverse_sort([1, 2], 'DESC', 2);
SELECT list_reverse_sort([1, 2], 'DESC', 2);
SELECT list_reverse_sort([1, 2], 2, 2);
SELECT list_reverse_sort([1, 2], 2, 2);
;
SELECT list_reverse_sort([1, 2], 2, 2);
SELECT list_reverse_sort([1, 2], 2, 2);
SELECT list_sort([1, 2], 'NULLS FIRST');
SELECT list_sort([1, 2], 'NULLS FIRST');
;
SELECT list_sort([1, 2], 'NULLS FIRST');
SELECT list_sort([1, 2], 'NULLS FIRST');
SELECT list_sort(NULL::boolean);
SELECT list_sort(NULL::boolean);
;
SELECT list_sort(NULL::boolean);
SELECT list_sort(NULL::boolean);
SELECT list_sort(NULL::varchar);
SELECT list_sort(NULL::varchar);
;
SELECT list_sort(NULL::varchar);
SELECT list_sort(NULL::varchar);
SELECT list_sort(NULL::tinyint);
SELECT list_sort(NULL::tinyint);
;
SELECT list_sort(NULL::tinyint);
SELECT list_sort(NULL::tinyint);
SELECT list_sort(NULL::smallint);
SELECT list_sort(NULL::smallint);
;
SELECT list_sort(NULL::smallint);
SELECT list_sort(NULL::smallint);
SELECT list_sort(NULL::integer);
SELECT list_sort(NULL::integer);
;
SELECT list_sort(NULL::integer);
SELECT list_sort(NULL::integer);
SELECT list_sort(NULL::bigint);
SELECT list_sort(NULL::bigint);
;
SELECT list_sort(NULL::bigint);
SELECT list_sort(NULL::bigint);
SELECT list_sort(NULL::hugeint);
SELECT list_sort(NULL::hugeint);
;
SELECT list_sort(NULL::hugeint);
SELECT list_sort(NULL::hugeint);
SELECT list_sort(NULL::utinyint);
SELECT list_sort(NULL::utinyint);
;
SELECT list_sort(NULL::utinyint);
SELECT list_sort(NULL::utinyint);
SELECT list_sort(NULL::usmallint);
SELECT list_sort(NULL::usmallint);
;
SELECT list_sort(NULL::usmallint);
SELECT list_sort(NULL::usmallint);
SELECT list_sort(NULL::uinteger);
SELECT list_sort(NULL::uinteger);
;
SELECT list_sort(NULL::uinteger);
SELECT list_sort(NULL::uinteger);
SELECT list_sort(NULL::ubigint);
SELECT list_sort(NULL::ubigint);
;
SELECT list_sort(NULL::ubigint);
SELECT list_sort(NULL::ubigint);
SELECT list_sort(NULL::uhugeint);
SELECT list_sort(NULL::uhugeint);
;
SELECT list_sort(NULL::uhugeint);
SELECT list_sort(NULL::uhugeint);
SELECT list_sort(NULL::float);
SELECT list_sort(NULL::float);
;
SELECT list_sort(NULL::float);
SELECT list_sort(NULL::float);
SELECT list_sort(NULL::double);
SELECT list_sort(NULL::double);
;
SELECT list_sort(NULL::double);
SELECT list_sort(NULL::double);
SELECT list_sort(NULL::decimal(4,1));
SELECT list_sort(NULL::decimal(4,1));
;
SELECT list_sort(NULL::decimal(4,1));
SELECT list_sort(NULL::decimal(4,1));
SELECT list_sort(NULL::decimal(9,4));
SELECT list_sort(NULL::decimal(9,4));
;
SELECT list_sort(NULL::decimal(9,4));
SELECT list_sort(NULL::decimal(9,4));
SELECT list_sort(NULL::decimal(18,6));
SELECT list_sort(NULL::decimal(18,6));
;
SELECT list_sort(NULL::decimal(18,6));
SELECT list_sort(NULL::decimal(18,6));
SELECT list_sort(NULL::decimal(38,10));
SELECT list_sort(NULL::decimal(38,10));
;
SELECT list_sort(NULL::decimal(38,10));
SELECT list_sort(NULL::decimal(38,10));
SELECT list_sort(NULL::date);
SELECT list_sort(NULL::date);
;
SELECT list_sort(NULL::date);
SELECT list_sort(NULL::date);
SELECT list_sort(NULL::time);
SELECT list_sort(NULL::time);
;
SELECT list_sort(NULL::time);
SELECT list_sort(NULL::time);
SELECT list_sort(NULL::timestamp);
SELECT list_sort(NULL::timestamp);
;
SELECT list_sort(NULL::timestamp);
SELECT list_sort(NULL::timestamp);
SELECT list_sort(NULL::timestamp_s);
SELECT list_sort(NULL::timestamp_s);
;
SELECT list_sort(NULL::timestamp_s);
SELECT list_sort(NULL::timestamp_s);
SELECT list_sort(NULL::timestamp_ms);
SELECT list_sort(NULL::timestamp_ms);
;
SELECT list_sort(NULL::timestamp_ms);
SELECT list_sort(NULL::timestamp_ms);
SELECT list_sort(NULL::timestamp_ns);
SELECT list_sort(NULL::timestamp_ns);
;
SELECT list_sort(NULL::timestamp_ns);
SELECT list_sort(NULL::timestamp_ns);
SELECT list_sort(NULL::timetz);
SELECT list_sort(NULL::timetz);
;
SELECT list_sort(NULL::timetz);
SELECT list_sort(NULL::timetz);
SELECT list_sort(NULL::timestamptz);
SELECT list_sort(NULL::timestamptz);
;
SELECT list_sort(NULL::timestamptz);
SELECT list_sort(NULL::timestamptz);
SELECT list_sort(NULL::interval);
SELECT list_sort(NULL::interval);
;
SELECT list_sort(NULL::interval);
SELECT list_sort(NULL::interval);
SELECT list_sort(NULL::blob);
SELECT list_sort(NULL::blob);
;
SELECT list_sort(NULL::blob);
SELECT list_sort(NULL::blob);
SELECT list_reverse_sort(NULL::boolean);
SELECT list_reverse_sort(NULL::boolean);
;
SELECT list_reverse_sort(NULL::boolean);
SELECT list_reverse_sort(NULL::boolean);
SELECT list_reverse_sort(NULL::varchar);
SELECT list_reverse_sort(NULL::varchar);
;
SELECT list_reverse_sort(NULL::varchar);
SELECT list_reverse_sort(NULL::varchar);
SELECT list_reverse_sort(NULL::tinyint);
SELECT list_reverse_sort(NULL::tinyint);
;
SELECT list_reverse_sort(NULL::tinyint);
SELECT list_reverse_sort(NULL::tinyint);
SELECT list_reverse_sort(NULL::smallint);
SELECT list_reverse_sort(NULL::smallint);
;
SELECT list_reverse_sort(NULL::smallint);
SELECT list_reverse_sort(NULL::smallint);
SELECT list_reverse_sort(NULL::integer);
SELECT list_reverse_sort(NULL::integer);
;
SELECT list_reverse_sort(NULL::integer);
SELECT list_reverse_sort(NULL::integer);
SELECT list_reverse_sort(NULL::bigint);
SELECT list_reverse_sort(NULL::bigint);
;
SELECT list_reverse_sort(NULL::bigint);
SELECT list_reverse_sort(NULL::bigint);
SELECT list_reverse_sort(NULL::hugeint);
SELECT list_reverse_sort(NULL::hugeint);
;
SELECT list_reverse_sort(NULL::hugeint);
SELECT list_reverse_sort(NULL::hugeint);
SELECT list_reverse_sort(NULL::utinyint);
SELECT list_reverse_sort(NULL::utinyint);
;
SELECT list_reverse_sort(NULL::utinyint);
SELECT list_reverse_sort(NULL::utinyint);
SELECT list_reverse_sort(NULL::usmallint);
SELECT list_reverse_sort(NULL::usmallint);
;
SELECT list_reverse_sort(NULL::usmallint);
SELECT list_reverse_sort(NULL::usmallint);
SELECT list_reverse_sort(NULL::uinteger);
SELECT list_reverse_sort(NULL::uinteger);
;
SELECT list_reverse_sort(NULL::uinteger);
SELECT list_reverse_sort(NULL::uinteger);
SELECT list_reverse_sort(NULL::ubigint);
SELECT list_reverse_sort(NULL::ubigint);
;
SELECT list_reverse_sort(NULL::ubigint);
SELECT list_reverse_sort(NULL::ubigint);
SELECT list_reverse_sort(NULL::uhugeint);
SELECT list_reverse_sort(NULL::uhugeint);
;
SELECT list_reverse_sort(NULL::uhugeint);
SELECT list_reverse_sort(NULL::uhugeint);
SELECT list_reverse_sort(NULL::float);
SELECT list_reverse_sort(NULL::float);
;
SELECT list_reverse_sort(NULL::float);
SELECT list_reverse_sort(NULL::float);
SELECT list_reverse_sort(NULL::double);
SELECT list_reverse_sort(NULL::double);
;
SELECT list_reverse_sort(NULL::double);
SELECT list_reverse_sort(NULL::double);
SELECT list_reverse_sort(NULL::decimal(4,1));
SELECT list_reverse_sort(NULL::decimal(4,1));
;
SELECT list_reverse_sort(NULL::decimal(4,1));
SELECT list_reverse_sort(NULL::decimal(4,1));
SELECT list_reverse_sort(NULL::decimal(9,4));
SELECT list_reverse_sort(NULL::decimal(9,4));
;
SELECT list_reverse_sort(NULL::decimal(9,4));
SELECT list_reverse_sort(NULL::decimal(9,4));
SELECT list_reverse_sort(NULL::decimal(18,6));
SELECT list_reverse_sort(NULL::decimal(18,6));
;
SELECT list_reverse_sort(NULL::decimal(18,6));
SELECT list_reverse_sort(NULL::decimal(18,6));
SELECT list_reverse_sort(NULL::decimal(38,10));
SELECT list_reverse_sort(NULL::decimal(38,10));
;
SELECT list_reverse_sort(NULL::decimal(38,10));
SELECT list_reverse_sort(NULL::decimal(38,10));
SELECT list_reverse_sort(NULL::date);
SELECT list_reverse_sort(NULL::date);
;
SELECT list_reverse_sort(NULL::date);
SELECT list_reverse_sort(NULL::date);
SELECT list_reverse_sort(NULL::time);
SELECT list_reverse_sort(NULL::time);
;
SELECT list_reverse_sort(NULL::time);
SELECT list_reverse_sort(NULL::time);
SELECT list_reverse_sort(NULL::timestamp);
SELECT list_reverse_sort(NULL::timestamp);
;
SELECT list_reverse_sort(NULL::timestamp);
SELECT list_reverse_sort(NULL::timestamp);
SELECT list_reverse_sort(NULL::timestamp_s);
SELECT list_reverse_sort(NULL::timestamp_s);
;
SELECT list_reverse_sort(NULL::timestamp_s);
SELECT list_reverse_sort(NULL::timestamp_s);
SELECT list_reverse_sort(NULL::timestamp_ms);
SELECT list_reverse_sort(NULL::timestamp_ms);
;
SELECT list_reverse_sort(NULL::timestamp_ms);
SELECT list_reverse_sort(NULL::timestamp_ms);
SELECT list_reverse_sort(NULL::timestamp_ns);
SELECT list_reverse_sort(NULL::timestamp_ns);
;
SELECT list_reverse_sort(NULL::timestamp_ns);
SELECT list_reverse_sort(NULL::timestamp_ns);
SELECT list_reverse_sort(NULL::timetz);
SELECT list_reverse_sort(NULL::timetz);
;
SELECT list_reverse_sort(NULL::timetz);
SELECT list_reverse_sort(NULL::timetz);
SELECT list_reverse_sort(NULL::timestamptz);
SELECT list_reverse_sort(NULL::timestamptz);
;
SELECT list_reverse_sort(NULL::timestamptz);
SELECT list_reverse_sort(NULL::timestamptz);
SELECT list_reverse_sort(NULL::interval);
SELECT list_reverse_sort(NULL::interval);
;
SELECT list_reverse_sort(NULL::interval);
SELECT list_reverse_sort(NULL::interval);
SELECT list_reverse_sort(NULL::blob);
SELECT list_reverse_sort(NULL::blob);
;
SELECT list_reverse_sort(NULL::blob);
SELECT list_reverse_sort(NULL::blob);
SELECT list_sort([1, 2]);
SELECT list_sort([1, 2]);
;
SELECT list_sort([1, 2]);
SELECT list_sort(main.list_value(1, 2));
;
;
;
;
SELECT list_sort([1, 2]);
SELECT list_sort(list_sort([1, 2]));
SELECT list_sort(list_sort([1, 2]));
;
SELECT list_sort(list_sort([1, 2]));
SELECT list_sort(list_sort(main.list_value(1, 2)));
;
;
;
;
SELECT list_sort(list_sort([1, 2]));
SELECT list_reverse_sort([1, 2]);
SELECT list_reverse_sort([1, 2]);
;
SELECT list_reverse_sort([1, 2]);
SELECT list_reverse_sort(main.list_value(1, 2));
;
;
;
;
SELECT list_reverse_sort([1, 2]);
SELECT list_reverse_sort(list_reverse_sort([1, 2]));
SELECT list_reverse_sort(list_reverse_sort([1, 2]));
;
SELECT list_reverse_sort(list_reverse_sort([1, 2]));
SELECT list_reverse_sort(list_reverse_sort(main.list_value(1, 2)));
;
;
;
;
SELECT list_reverse_sort(list_reverse_sort([1, 2]));
SELECT list_sort([1, 3, NULL, 5, NULL, -5]);
SELECT list_sort([1, 3, NULL, 5, NULL, -5]);
;
SELECT list_sort([1, 3, NULL, 5, NULL, -5]);
SELECT list_sort(main.list_value(1, 3, NULL, 5, NULL, -5));
;
;
;
;
SELECT list_sort([1, 3, NULL, 5, NULL, -5]);
SELECT list_reverse_sort([1, 3, NULL, 5, NULL, -5]);
SELECT list_reverse_sort([1, 3, NULL, 5, NULL, -5]);
;
SELECT list_reverse_sort([1, 3, NULL, 5, NULL, -5]);
SELECT list_reverse_sort(main.list_value(1, 3, NULL, 5, NULL, -5));
;
;
;
;
SELECT list_reverse_sort([1, 3, NULL, 5, NULL, -5]);
CREATE TABLE integers AS SELECT LIST(i) AS i FROM range(1, 10, 1) t1(i);
INSERT INTO integers VALUES ([NULL]), (NULL), ([]);
SELECT list_sort(i) FROM integers;
SELECT list_sort(i) FROM integers;
;
SELECT list_sort(i) FROM integers;
SELECT list_sort(i) FROM integers;
;
;
;
;
SELECT list_sort(i) FROM integers;
SELECT list_reverse_sort(i) FROM integers;
SELECT list_reverse_sort(i) FROM integers;
;
SELECT list_reverse_sort(i) FROM integers;
SELECT list_reverse_sort(i) FROM integers;
;
;
;
;
SELECT list_reverse_sort(i) FROM integers;
SELECT list_sort(l, l, l);
SELECT list_sort(l, l, l);
;
SELECT list_sort(l, l, l);
SELECT list_sort(l, l, l);
SELECT list_sort(l, 'ASC', l);
SELECT list_sort(l, 'ASC', l);
;
SELECT list_sort(l, 'ASC', l);
SELECT list_sort(l, 'ASC', l);
SELECT list_reverse_sort(l, l);
SELECT list_reverse_sort(l, l);
;
SELECT list_reverse_sort(l, l);
SELECT list_reverse_sort(l, l);
SELECT list_reverse_sort(l, 'DESC');
SELECT list_reverse_sort(l, 'DESC');
;
SELECT list_reverse_sort(l, 'DESC');
SELECT list_reverse_sort(l, 'DESC');
SELECT list_reverse_sort(l, 'DESC', 'NULLS FIRST');
SELECT list_reverse_sort(l, 'DESC', 'NULLS FIRST');
;
SELECT list_reverse_sort(l, 'DESC', 'NULLS FIRST');
SELECT list_reverse_sort(l, 'DESC', 'NULLS FIRST');
SELECT array_sort([1, 2]);
SELECT array_sort([1, 2]);
;
SELECT array_sort([1, 2]);
SELECT array_sort(main.list_value(1, 2));
;
;
;
;
SELECT array_sort([1, 2]);
SELECT array_reverse_sort([1, 2]);
SELECT array_reverse_sort([1, 2]);
;
SELECT array_reverse_sort([1, 2]);
SELECT array_reverse_sort(main.list_value(1, 2));
;
;
;
;
SELECT array_reverse_sort([1, 2]);
SELECT list_sort([1, 3, NULL, 2], 'ASC');
SELECT list_sort([1, 3, NULL, 2], 'ASC');
;
SELECT list_sort([1, 3, NULL, 2], 'ASC');
SELECT list_sort(main.list_value(1, 3, NULL, 2), 'ASC');
;
;
;
SELECT list_sort([1, 3, NULL, 2], 'ASC');
SELECT list_sort([1, 3, NULL, 2], 'DESC');
SELECT list_sort([1, 3, NULL, 2], 'DESC');
;
SELECT list_sort([1, 3, NULL, 2], 'DESC');
SELECT list_sort(main.list_value(1, 3, NULL, 2), 'DESC');
;
;
;
SELECT list_sort([1, 3, NULL, 2], 'DESC');
SELECT list_sort([1, 3, NULL, 2], 'DESC', 'NULLS LAST');
SELECT list_sort([1, 3, NULL, 2], 'DESC', 'NULLS LAST');
;
SELECT list_sort([1, 3, NULL, 2], 'DESC', 'NULLS LAST');
SELECT list_sort(main.list_value(1, 3, NULL, 2), 'DESC', 'NULLS LAST');
;
;
;
SELECT list_sort([1, 3, NULL, 2], 'DESC', 'NULLS LAST');
SELECT list_sort([1, 3, NULL, 2], 'DESC', 'NULLS LAST');
SELECT list_sort([1, 3, NULL, 2], 'DESC', 'NULLS LAST');
;
SELECT list_sort([1, 3, NULL, 2], 'DESC', 'NULLS LAST');
SELECT list_sort(main.list_value(1, 3, NULL, 2), 'DESC', 'NULLS LAST');
;
;
;
SELECT list_sort([1, 3, NULL, 2], 'DESC', 'NULLS LAST');
SELECT list_sort([1, 3, NULL, 2], 'deSc', 'nuLls LAST');
SELECT list_sort([1, 3, NULL, 2], 'deSc', 'nuLls LAST');
;
SELECT list_sort([1, 3, NULL, 2], 'deSc', 'nuLls LAST');
SELECT list_sort(main.list_value(1, 3, NULL, 2), 'deSc', 'nuLls LAST');
;
;
;
SELECT list_sort([1, 3, NULL, 2], 'deSc', 'nuLls LAST');
SELECT list_sort([1, 3, NULL, 2], 'DESC', 'NULLS FIRST');
SELECT list_sort([1, 3, NULL, 2], 'DESC', 'NULLS FIRST');
;
SELECT list_sort([1, 3, NULL, 2], 'DESC', 'NULLS FIRST');
SELECT list_sort(main.list_value(1, 3, NULL, 2), 'DESC', 'NULLS FIRST');
;
;
;
SELECT list_sort([1, 3, NULL, 2], 'DESC', 'NULLS FIRST');
SELECT list_sort([1, 3, NULL, 2], 'ASC', 'NULLS FIRST');
SELECT list_sort([1, 3, NULL, 2], 'ASC', 'NULLS FIRST');
;
SELECT list_sort([1, 3, NULL, 2], 'ASC', 'NULLS FIRST');
SELECT list_sort(main.list_value(1, 3, NULL, 2), 'ASC', 'NULLS FIRST');
;
;
;
SELECT list_sort([1, 3, NULL, 2], 'ASC', 'NULLS FIRST');
SELECT list_sort([1, 3, NULL, 2], 'ASC', 'NULLS LAST');
SELECT list_sort([1, 3, NULL, 2], 'ASC', 'NULLS LAST');
;
SELECT list_sort([1, 3, NULL, 2], 'ASC', 'NULLS LAST');
SELECT list_sort(main.list_value(1, 3, NULL, 2), 'ASC', 'NULLS LAST');
;
;
;
SELECT list_sort([1, 3, NULL, 2], 'ASC', 'NULLS LAST');
SELECT list_reverse_sort([1, 3, NULL, 2], 'NULLS LAST');
SELECT list_reverse_sort([1, 3, NULL, 2], 'NULLS LAST');
;
SELECT list_reverse_sort([1, 3, NULL, 2], 'NULLS LAST');
SELECT list_reverse_sort(main.list_value(1, 3, NULL, 2), 'NULLS LAST');
;
;
;
SELECT list_reverse_sort([1, 3, NULL, 2], 'NULLS LAST');
SELECT list_reverse_sort([1, 3, NULL, 2], 'NULLS FIRST');
SELECT list_reverse_sort([1, 3, NULL, 2], 'NULLS FIRST');
;
SELECT list_reverse_sort([1, 3, NULL, 2], 'NULLS FIRST');
SELECT list_reverse_sort(main.list_value(1, 3, NULL, 2), 'NULLS FIRST');
;
;
;
SELECT list_reverse_sort([1, 3, NULL, 2], 'NULLS FIRST');
SELECT list_sort([True, False, NULL, True, True, NULL]);
SELECT list_sort([True, False, NULL, True, True, NULL]);
;
SELECT list_sort([True, False, NULL, True, True, NULL]);
SELECT list_sort(main.list_value(CAST('t' AS BOOLEAN), CAST('f' AS BOOLEAN), NULL, CAST('t' AS BOOLEAN), CAST('t' AS BOOLEAN), NULL));
;
;
;
;
SELECT list_sort([True, False, NULL, True, True, NULL]);
SELECT list_sort([NULL::BOOLEAN]);
SELECT list_sort([NULL::BOOLEAN]);
;
SELECT list_sort([NULL::BOOLEAN]);
SELECT list_sort(main.list_value(CAST(NULL AS BOOLEAN)));
;
;
;
;
SELECT list_sort([NULL::BOOLEAN]);
SELECT list_sort(['aa', 'a', 'cd', NULL, '42']);
SELECT list_sort(['aa', 'a', 'cd', NULL, '42']);
;
SELECT list_sort(['aa', 'a', 'cd', NULL, '42']);
SELECT list_sort(main.list_value('aa', 'a', 'cd', NULL, '42'));
;
;
;
;
SELECT list_sort(['aa', 'a', 'cd', NULL, '42']);
SELECT list_sort([NULL::VARCHAR]);
SELECT list_sort([NULL::VARCHAR]);
;
SELECT list_sort([NULL::VARCHAR]);
SELECT list_sort(main.list_value(CAST(NULL AS VARCHAR)));
;
;
;
;
SELECT list_sort([NULL::VARCHAR]);
SELECT list_sort([1::tinyint, NULL, 2::tinyint]);
SELECT list_sort([1::tinyint, NULL, 2::tinyint]);
;
SELECT list_sort([1::tinyint, NULL, 2::tinyint]);
SELECT list_sort(main.list_value(CAST(1 AS TINYINT), NULL, CAST(2 AS TINYINT)));
;
;
;
;
SELECT list_sort([1::tinyint, NULL, 2::tinyint]);
SELECT list_sort([NULL::tinyint]);
SELECT list_sort([NULL::tinyint]);
;
SELECT list_sort([NULL::tinyint]);
SELECT list_sort(main.list_value(CAST(NULL AS TINYINT)));
;
;
;
;
SELECT list_sort([NULL::tinyint]);
SELECT list_sort([1::smallint, NULL, 2::smallint]);
SELECT list_sort([1::smallint, NULL, 2::smallint]);
;
SELECT list_sort([1::smallint, NULL, 2::smallint]);
SELECT list_sort(main.list_value(CAST(1 AS SMALLINT), NULL, CAST(2 AS SMALLINT)));
;
;
;
;
SELECT list_sort([1::smallint, NULL, 2::smallint]);
SELECT list_sort([NULL::smallint]);
SELECT list_sort([NULL::smallint]);
;
SELECT list_sort([NULL::smallint]);
SELECT list_sort(main.list_value(CAST(NULL AS SMALLINT)));
;
;
;
;
SELECT list_sort([NULL::smallint]);
SELECT list_sort([1::integer, NULL, 2::integer]);
SELECT list_sort([1::integer, NULL, 2::integer]);
;
SELECT list_sort([1::integer, NULL, 2::integer]);
SELECT list_sort(main.list_value(CAST(1 AS INTEGER), NULL, CAST(2 AS INTEGER)));
;
;
;
;
SELECT list_sort([1::integer, NULL, 2::integer]);
SELECT list_sort([NULL::integer]);
SELECT list_sort([NULL::integer]);
;
SELECT list_sort([NULL::integer]);
SELECT list_sort(main.list_value(CAST(NULL AS INTEGER)));
;
;
;
;
SELECT list_sort([NULL::integer]);
SELECT list_sort([1::bigint, NULL, 2::bigint]);
SELECT list_sort([1::bigint, NULL, 2::bigint]);
;
SELECT list_sort([1::bigint, NULL, 2::bigint]);
SELECT list_sort(main.list_value(CAST(1 AS BIGINT), NULL, CAST(2 AS BIGINT)));
;
;
;
;
SELECT list_sort([1::bigint, NULL, 2::bigint]);
SELECT list_sort([NULL::bigint]);
SELECT list_sort([NULL::bigint]);
;
SELECT list_sort([NULL::bigint]);
SELECT list_sort(main.list_value(CAST(NULL AS BIGINT)));
;
;
;
;
SELECT list_sort([NULL::bigint]);
SELECT list_sort([1::hugeint, NULL, 2::hugeint]);
SELECT list_sort([1::hugeint, NULL, 2::hugeint]);
;
SELECT list_sort([1::hugeint, NULL, 2::hugeint]);
SELECT list_sort(main.list_value(CAST(1 AS HUGEINT), NULL, CAST(2 AS HUGEINT)));
;
;
;
;
SELECT list_sort([1::hugeint, NULL, 2::hugeint]);
SELECT list_sort([NULL::hugeint]);
SELECT list_sort([NULL::hugeint]);
;
SELECT list_sort([NULL::hugeint]);
SELECT list_sort(main.list_value(CAST(NULL AS HUGEINT)));
;
;
;
;
SELECT list_sort([NULL::hugeint]);
SELECT list_sort([1::utinyint, NULL, 2::utinyint]);
SELECT list_sort([1::utinyint, NULL, 2::utinyint]);
;
SELECT list_sort([1::utinyint, NULL, 2::utinyint]);
SELECT list_sort(main.list_value(CAST(1 AS UTINYINT), NULL, CAST(2 AS UTINYINT)));
;
;
;
;
SELECT list_sort([1::utinyint, NULL, 2::utinyint]);
SELECT list_sort([NULL::utinyint]);
SELECT list_sort([NULL::utinyint]);
;
SELECT list_sort([NULL::utinyint]);
SELECT list_sort(main.list_value(CAST(NULL AS UTINYINT)));
;
;
;
;
SELECT list_sort([NULL::utinyint]);
SELECT list_sort([1::usmallint, NULL, 2::usmallint]);
SELECT list_sort([1::usmallint, NULL, 2::usmallint]);
;
SELECT list_sort([1::usmallint, NULL, 2::usmallint]);
SELECT list_sort(main.list_value(CAST(1 AS USMALLINT), NULL, CAST(2 AS USMALLINT)));
;
;
;
;
SELECT list_sort([1::usmallint, NULL, 2::usmallint]);
SELECT list_sort([NULL::usmallint]);
SELECT list_sort([NULL::usmallint]);
;
SELECT list_sort([NULL::usmallint]);
SELECT list_sort(main.list_value(CAST(NULL AS USMALLINT)));
;
;
;
;
SELECT list_sort([NULL::usmallint]);
SELECT list_sort([1::uinteger, NULL, 2::uinteger]);
SELECT list_sort([1::uinteger, NULL, 2::uinteger]);
;
SELECT list_sort([1::uinteger, NULL, 2::uinteger]);
SELECT list_sort(main.list_value(CAST(1 AS UINTEGER), NULL, CAST(2 AS UINTEGER)));
;
;
;
;
SELECT list_sort([1::uinteger, NULL, 2::uinteger]);
SELECT list_sort([NULL::uinteger]);
SELECT list_sort([NULL::uinteger]);
;
SELECT list_sort([NULL::uinteger]);
SELECT list_sort(main.list_value(CAST(NULL AS UINTEGER)));
;
;
;
;
SELECT list_sort([NULL::uinteger]);
SELECT list_sort([1::ubigint, NULL, 2::ubigint]);
SELECT list_sort([1::ubigint, NULL, 2::ubigint]);
;
SELECT list_sort([1::ubigint, NULL, 2::ubigint]);
SELECT list_sort(main.list_value(CAST(1 AS UBIGINT), NULL, CAST(2 AS UBIGINT)));
;
;
;
;
SELECT list_sort([1::ubigint, NULL, 2::ubigint]);
SELECT list_sort([NULL::ubigint]);
SELECT list_sort([NULL::ubigint]);
;
SELECT list_sort([NULL::ubigint]);
SELECT list_sort(main.list_value(CAST(NULL AS UBIGINT)));
;
;
;
;
SELECT list_sort([NULL::ubigint]);
SELECT list_sort([1::uhugeint, NULL, 2::uhugeint]);
SELECT list_sort([1::uhugeint, NULL, 2::uhugeint]);
;
SELECT list_sort([1::uhugeint, NULL, 2::uhugeint]);
SELECT list_sort(main.list_value(CAST(1 AS UHUGEINT), NULL, CAST(2 AS UHUGEINT)));
;
;
;
;
SELECT list_sort([1::uhugeint, NULL, 2::uhugeint]);
SELECT list_sort([NULL::uhugeint]);
SELECT list_sort([NULL::uhugeint]);
;
SELECT list_sort([NULL::uhugeint]);
SELECT list_sort(main.list_value(CAST(NULL AS UHUGEINT)));
;
;
;
;
SELECT list_sort([NULL::uhugeint]);
SELECT list_sort([1::float]);
SELECT list_sort([1::float]);
;
SELECT list_sort([1::float]);
SELECT list_sort(main.list_value(CAST(1 AS FLOAT)));
;
;
;
;
SELECT list_sort([1::float]);
SELECT list_sort([NULL::float]);
SELECT list_sort([NULL::float]);
;
SELECT list_sort([NULL::float]);
SELECT list_sort(main.list_value(CAST(NULL AS FLOAT)));
;
;
;
;
SELECT list_sort([NULL::float]);
SELECT list_sort([1::double]);
SELECT list_sort([1::double]);
;
SELECT list_sort([1::double]);
SELECT list_sort(main.list_value(CAST(1 AS DOUBLE)));
;
;
;
;
SELECT list_sort([1::double]);
SELECT list_sort([NULL::double]);
SELECT list_sort([NULL::double]);
;
SELECT list_sort([NULL::double]);
SELECT list_sort(main.list_value(CAST(NULL AS DOUBLE)));
;
;
;
;
SELECT list_sort([NULL::double]);
SELECT list_sort([1::decimal(4,1)]);
SELECT list_sort([1::decimal(4,1)]);
;
SELECT list_sort([1::decimal(4,1)]);
SELECT list_sort(main.list_value(CAST(1 AS DECIMAL(4,1))));
;
;
;
;
SELECT list_sort([1::decimal(4,1)]);
SELECT list_sort([NULL::decimal(4,1)]);
SELECT list_sort([NULL::decimal(4,1)]);
;
SELECT list_sort([NULL::decimal(4,1)]);
SELECT list_sort(main.list_value(CAST(NULL AS DECIMAL(4,1))));
;
;
;
;
SELECT list_sort([NULL::decimal(4,1)]);
SELECT list_sort([1::decimal(9,4)]);
SELECT list_sort([1::decimal(9,4)]);
;
SELECT list_sort([1::decimal(9,4)]);
SELECT list_sort(main.list_value(CAST(1 AS DECIMAL(9,4))));
;
;
;
;
SELECT list_sort([1::decimal(9,4)]);
SELECT list_sort([NULL::decimal(9,4)]);
SELECT list_sort([NULL::decimal(9,4)]);
;
SELECT list_sort([NULL::decimal(9,4)]);
SELECT list_sort(main.list_value(CAST(NULL AS DECIMAL(9,4))));
;
;
;
;
SELECT list_sort([NULL::decimal(9,4)]);
SELECT list_sort([1::decimal(18,6)]);
SELECT list_sort([1::decimal(18,6)]);
;
SELECT list_sort([1::decimal(18,6)]);
SELECT list_sort(main.list_value(CAST(1 AS DECIMAL(18,6))));
;
;
;
;
SELECT list_sort([1::decimal(18,6)]);
SELECT list_sort([NULL::decimal(18,6)]);
SELECT list_sort([NULL::decimal(18,6)]);
;
SELECT list_sort([NULL::decimal(18,6)]);
SELECT list_sort(main.list_value(CAST(NULL AS DECIMAL(18,6))));
;
;
;
;
SELECT list_sort([NULL::decimal(18,6)]);
SELECT list_sort([1::decimal(38,10)]);
SELECT list_sort([1::decimal(38,10)]);
;
SELECT list_sort([1::decimal(38,10)]);
SELECT list_sort(main.list_value(CAST(1 AS DECIMAL(38,10))));
;
;
;
;
SELECT list_sort([1::decimal(38,10)]);
SELECT list_sort([NULL::decimal(38,10)]);
SELECT list_sort([NULL::decimal(38,10)]);
;
SELECT list_sort([NULL::decimal(38,10)]);
SELECT list_sort(main.list_value(CAST(NULL AS DECIMAL(38,10))));
;
;
;
;
SELECT list_sort([NULL::decimal(38,10)]);
SELECT list_sort(['2021-08-20'::DATE]);
SELECT list_sort(['2021-08-20'::DATE]);
;
SELECT list_sort(['2021-08-20'::DATE]);
SELECT list_sort(main.list_value(CAST('2021-08-20' AS DATE)));
;
;
;
;
SELECT list_sort(['2021-08-20'::DATE]);
SELECT list_sort(['14:59:37'::TIME]);
SELECT list_sort(['14:59:37'::TIME]);
;
SELECT list_sort(['14:59:37'::TIME]);
SELECT list_sort(main.list_value(CAST('14:59:37' AS TIME)));
;
;
;
;
SELECT list_sort(['14:59:37'::TIME]);
SELECT list_sort(['2021-08-20'::TIMESTAMP]);
SELECT list_sort(['2021-08-20'::TIMESTAMP]);
;
SELECT list_sort(['2021-08-20'::TIMESTAMP]);
SELECT list_sort(main.list_value(CAST('2021-08-20' AS TIMESTAMP)));
;
;
;
;
SELECT list_sort(['2021-08-20'::TIMESTAMP]);
SELECT list_sort(['2021-08-20'::TIMESTAMP_S]);
SELECT list_sort(['2021-08-20'::TIMESTAMP_S]);
;
SELECT list_sort(['2021-08-20'::TIMESTAMP_S]);
SELECT list_sort(main.list_value(CAST('2021-08-20' AS TIMESTAMP_S)));
;
;
;
;
SELECT list_sort(['2021-08-20'::TIMESTAMP_S]);
SELECT list_sort(['2021-08-20 00:00:00.123'::TIMESTAMP_MS]);
SELECT list_sort(['2021-08-20 00:00:00.123'::TIMESTAMP_MS]);
;
SELECT list_sort(['2021-08-20 00:00:00.123'::TIMESTAMP_MS]);
SELECT list_sort(main.list_value(CAST('2021-08-20 00:00:00.123' AS TIMESTAMP_MS)));
;
;
;
;
SELECT list_sort(['2021-08-20 00:00:00.123'::TIMESTAMP_MS]);
SELECT list_sort(['2021-08-20 00:00:00.123456'::TIMESTAMP_NS]);
SELECT list_sort(['2021-08-20 00:00:00.123456'::TIMESTAMP_NS]);
;
SELECT list_sort(['2021-08-20 00:00:00.123456'::TIMESTAMP_NS]);
SELECT list_sort(main.list_value(CAST('2021-08-20 00:00:00.123456' AS TIMESTAMP_NS)));
;
;
;
;
SELECT list_sort(['2021-08-20 00:00:00.123456'::TIMESTAMP_NS]);
SELECT list_sort(['14:59:37'::TIMETZ]);
SELECT list_sort(['14:59:37'::TIMETZ]);
;
SELECT list_sort(['14:59:37'::TIMETZ]);
SELECT list_sort(main.list_value(CAST('14:59:37' AS TIME WITH TIME ZONE)));
;
;
;
;
SELECT list_sort(['14:59:37'::TIMETZ]);
SELECT list_sort(['2021-08-20'::TIMESTAMPTZ]);
SELECT list_sort(['2021-08-20'::TIMESTAMPTZ]);
;
SELECT list_sort(['2021-08-20'::TIMESTAMPTZ]);
SELECT list_sort(main.list_value(CAST('2021-08-20' AS TIMESTAMP WITH TIME ZONE)));
;
;
;
;
SELECT list_sort(['2021-08-20'::TIMESTAMPTZ]);
SELECT list_sort([INTERVAL 1 YEAR]);
SELECT list_sort([INTERVAL 1 YEAR]);
;
SELECT list_sort([INTERVAL 1 YEAR]);
SELECT list_sort(main.list_value(to_years(CAST(trunc(CAST(1 AS DOUBLE)) AS INTEGER))));
;
;
;
;
SELECT list_sort([INTERVAL 1 YEAR]);
SELECT list_sort([NULL::date]);
SELECT list_sort([NULL::date]);
;
SELECT list_sort([NULL::date]);
SELECT list_sort(main.list_value(CAST(NULL AS DATE)));
;
;
;
;
SELECT list_sort([NULL::date]);
SELECT list_sort([NULL::time]);
SELECT list_sort([NULL::time]);
;
SELECT list_sort([NULL::time]);
SELECT list_sort(main.list_value(CAST(NULL AS TIME)));
;
;
;
;
SELECT list_sort([NULL::time]);
SELECT list_sort([NULL::timestamp]);
SELECT list_sort([NULL::timestamp]);
;
SELECT list_sort([NULL::timestamp]);
SELECT list_sort(main.list_value(CAST(NULL AS TIMESTAMP)));
;
;
;
;
SELECT list_sort([NULL::timestamp]);
SELECT list_sort([NULL::timestamp_s]);
SELECT list_sort([NULL::timestamp_s]);
;
SELECT list_sort([NULL::timestamp_s]);
SELECT list_sort(main.list_value(CAST(NULL AS TIMESTAMP_S)));
;
;
;
;
SELECT list_sort([NULL::timestamp_s]);
SELECT list_sort([NULL::timestamp_ms]);
SELECT list_sort([NULL::timestamp_ms]);
;
SELECT list_sort([NULL::timestamp_ms]);
SELECT list_sort(main.list_value(CAST(NULL AS TIMESTAMP_MS)));
;
;
;
;
SELECT list_sort([NULL::timestamp_ms]);
SELECT list_sort([NULL::timestamp_ns]);
SELECT list_sort([NULL::timestamp_ns]);
;
SELECT list_sort([NULL::timestamp_ns]);
SELECT list_sort(main.list_value(CAST(NULL AS TIMESTAMP_NS)));
;
;
;
;
SELECT list_sort([NULL::timestamp_ns]);
SELECT list_sort([NULL::timetz]);
SELECT list_sort([NULL::timetz]);
;
SELECT list_sort([NULL::timetz]);
SELECT list_sort(main.list_value(CAST(NULL AS TIME WITH TIME ZONE)));
;
;
;
;
SELECT list_sort([NULL::timetz]);
SELECT list_sort([NULL::timestamptz]);
SELECT list_sort([NULL::timestamptz]);
;
SELECT list_sort([NULL::timestamptz]);
SELECT list_sort(main.list_value(CAST(NULL AS TIMESTAMP WITH TIME ZONE)));
;
;
;
;
SELECT list_sort([NULL::timestamptz]);
SELECT list_sort([NULL::interval]);
SELECT list_sort([NULL::interval]);
;
SELECT list_sort([NULL::interval]);
SELECT list_sort(main.list_value(CAST(NULL AS INTERVAL)));
;
;
;
;
SELECT list_sort([NULL::interval]);
SELECT list_sort(['{a: 1}'::BLOB, '{a: 3}'::BLOB]);
SELECT list_sort(['{a: 1}'::BLOB, '{a: 3}'::BLOB]);
;
SELECT list_sort(['{a: 1}'::BLOB, '{a: 3}'::BLOB]);
SELECT list_sort(main.list_value('{a: 1}'::BLOB, '{a: 3}'::BLOB));
;
;
;
;
SELECT list_sort(['{a: 1}'::BLOB, '{a: 3}'::BLOB]);
SELECT list_sort([NULL::BLOB]);
SELECT list_sort([NULL::BLOB]);
;
SELECT list_sort([NULL::BLOB]);
SELECT list_sort(main.list_value(CAST(NULL AS BLOB)));
;
;
;
;
SELECT list_sort([NULL::BLOB]);
CREATE TYPE mood AS ENUM ('sad', 'ok', 'happy');
CREATE TABLE enums (e mood[]);
INSERT INTO enums VALUES (['happy', 'sad']);
SELECT list_sort(e) FROM enums;
SELECT list_sort(e) FROM enums;
;
SELECT list_sort(e) FROM enums;
SELECT list_sort(e) FROM enums;
;
;
;
;
SELECT list_sort(e) FROM enums;
SELECT list_sort([[1], [1, 2], NULL, [NULL], [], [1, 2, 3]]);
SELECT list_sort([[1], [1, 2], NULL, [NULL], [], [1, 2, 3]]);
;
SELECT list_sort([[1], [1, 2], NULL, [NULL], [], [1, 2, 3]]);
SELECT list_sort(main.list_value(main.list_value(1), main.list_value(1, 2), NULL, main.list_value(NULL), main.list_value(), main.list_value(1, 2, 3)));
;
;
;
;
SELECT list_sort([[1], [1, 2], NULL, [NULL], [], [1, 2, 3]]);
SELECT list_sort([{'a': 1}, {'a': 5}, {'a': 3}]);
SELECT list_sort([{'a': 1}, {'a': 5}, {'a': 3}]);
;
SELECT list_sort([{'a': 1}, {'a': 5}, {'a': 3}]);
SELECT list_sort(main.list_value(main.struct_pack(a := 1), main.struct_pack(a := 5), main.struct_pack(a := 3)));
;
;
;
;
SELECT list_sort([{'a': 1}, {'a': 5}, {'a': 3}]);
CREATE TABLE lists AS SELECT range % 4 g, list(range) l FROM range(10000) GROUP BY range % 4;;
with cte0 as (
  select g, list_reverse_sort(l) l from lists
), cte1 as (
  select g, unnest(l) i from cte0
), cte2 as (
  select g, i, lead(g, 1) over () lg, lead(i, 1) over () li from cte1
)
select count(*)
from cte2
where g = lg
  and lg not null
  and li > i;
with cte0 as (
  select g, list_reverse_sort(l) l from lists
), cte1 as (
  select g, unnest(l) i from cte0
), cte2 as (
  select g, i, lead(g, 1) over () lg, lead(i, 1) over () li from cte1
)
select count(*)
from cte2
where g = lg
  and lg not null
  and li > i;
;
with cte0 as (
  select g, list_reverse_sort(l) l from lists
), cte1 as (
  select g, unnest(l) i from cte0
), cte2 as (
  select g, i, lead(g, 1) over () lg, lead(i, 1) over () li from cte1
)
select count(*)
from cte2
where g = lg
  and lg not null
  and li > i;
WITH cte0 AS (SELECT g, list_reverse_sort(l) AS l FROM lists), cte1 AS (SELECT g, unnest(l) AS i FROM cte0), cte2 AS (SELECT g, i, lead(g, 1) OVER () AS lg, lead(i, 1) OVER () AS li FROM cte1)SELECT count_star() FROM cte2 WHERE ((g = lg) AND (lg IS NOT NULL) AND (li > i));
;
;
;
;
with cte0 as (
  select g, list_reverse_sort(l) l from lists
), cte1 as (
  select g, unnest(l) i from cte0
), cte2 as (
  select g, i, lead(g, 1) over () lg, lead(i, 1) over () li from cte1
)
select count(*)
from cte2
where g = lg
  and lg not null
  and li > i;
select k, array_sort(k,'DESC') from (values ([1,2,3,4])) as t(k);;
select k, array_sort(k,'DESC') from (values ([1,2,3,4])) as t(k);;
;
select k, array_sort(k,'DESC') from (values ([1,2,3,4])) as t(k);;
SELECT k, array_sort(k, 'DESC') FROM (SELECT * FROM (VALUES (main.list_value(1, 2, 3, 4))) AS valueslist) AS t(k);
;
;
;
select k, array_sort(k,'DESC') from (values ([1,2,3,4])) as t(k);;
select k, v, map(k,v), map(k,v)[(array_sort(k,'DESC'))[1]] from (values ([1,2,3,4],[2,3,4,5])) as t(k,v);;
select k, v, map(k,v), map(k,v)[(array_sort(k,'DESC'))[1]] from (values ([1,2,3,4],[2,3,4,5])) as t(k,v);;
;
select k, v, map(k,v), map(k,v)[(array_sort(k,'DESC'))[1]] from (values ([1,2,3,4],[2,3,4,5])) as t(k,v);;
SELECT k, v, map(k, v), map(k, v)[array_sort(k, 'DESC')[1]] FROM (SELECT * FROM (VALUES (main.list_value(1, 2, 3, 4), main.list_value(2, 3, 4, 5))) AS valueslist) AS t(k, v);
;
;
;
select k, v, map(k,v), map(k,v)[(array_sort(k,'DESC'))[1]] from (values ([1,2,3,4],[2,3,4,5])) as t(k,v);;
select id, list(distinct foo order by foo) from (
  values (1, '10'), (1, '15'), (2, '10')
) v (id, foo)
group by all
order by id;;
select id, list(distinct foo order by foo) from (
  values (1, '10'), (1, '15'), (2, '10')
) v (id, foo)
group by all
order by id;;
;
select id, list(distinct foo order by foo) from (
  values (1, '10'), (1, '15'), (2, '10')
) v (id, foo)
group by all
order by id;;
SELECT id, list_sort(list(DISTINCT foo), 'ORDER_DEFAULT', 'ORDER_DEFAULT') FROM (SELECT * FROM (VALUES (1, '10'), (1, '15'), (2, '10')) AS valueslist) AS v(id, foo) GROUP BY ALL ORDER BY id;
;
;
;
;
select id, list(distinct foo order by foo) from (
  values (1, '10'), (1, '15'), (2, '10')
) v (id, foo)
group by all
order by id;;
select id, list(distinct foo order by foo) from (
  values (1, '10'), (1, '10'), (1, '15'), (2, '10')
) v (id, foo)
group by id
order by id;;
select id, list(distinct foo order by foo) from (
  values (1, '10'), (1, '10'), (1, '15'), (2, '10')
) v (id, foo)
group by id
order by id;;
;
select id, list(distinct foo order by foo) from (
  values (1, '10'), (1, '10'), (1, '15'), (2, '10')
) v (id, foo)
group by id
order by id;;
SELECT id, list_sort(list(DISTINCT foo), 'ORDER_DEFAULT', 'ORDER_DEFAULT') FROM (SELECT * FROM (VALUES (1, '10'), (1, '10'), (1, '15'), (2, '10')) AS valueslist) AS v(id, foo) GROUP BY id ORDER BY id;
;
;
;
;
select id, list(distinct foo order by foo) from (
  values (1, '10'), (1, '10'), (1, '15'), (2, '10')
) v (id, foo)
group by id
order by id;;
select id, list(foo order by foo) from (
  values (1, '10'), (1, '10'), (1, '15'), (2, '10')
) v (id, foo)
group by id
order by id;;
select id, list(foo order by foo) from (
  values (1, '10'), (1, '10'), (1, '15'), (2, '10')
) v (id, foo)
group by id
order by id;;
;
select id, list(foo order by foo) from (
  values (1, '10'), (1, '10'), (1, '15'), (2, '10')
) v (id, foo)
group by id
order by id;;
SELECT id, list_sort(list(foo), 'ORDER_DEFAULT', 'ORDER_DEFAULT') FROM (SELECT * FROM (VALUES (1, '10'), (1, '10'), (1, '15'), (2, '10')) AS valueslist) AS v(id, foo) GROUP BY id ORDER BY id;
;
;
;
;
select id, list(foo order by foo) from (
  values (1, '10'), (1, '10'), (1, '15'), (2, '10')
) v (id, foo)
group by id
order by id;;
select id, list(distinct foo order by foo) from (
  values (1, '10'), (1, '10'), (1, '15'), (2, '10')
) v (id, foo)
group by id
order by id;;
select id, list(distinct foo order by foo) from (
  values (1, '10'), (1, '10'), (1, '15'), (2, '10')
) v (id, foo)
group by id
order by id;;
;
select id, list(distinct foo order by foo) from (
  values (1, '10'), (1, '10'), (1, '15'), (2, '10')
) v (id, foo)
group by id
order by id;;
SELECT id, list_sort(list(DISTINCT foo), 'ORDER_DEFAULT', 'ORDER_DEFAULT') FROM (SELECT * FROM (VALUES (1, '10'), (1, '10'), (1, '15'), (2, '10')) AS valueslist) AS v(id, foo) GROUP BY id ORDER BY id;
;
;
;
;
select id, list(distinct foo order by foo) from (
  values (1, '10'), (1, '10'), (1, '15'), (2, '10')
) v (id, foo)
group by id
order by id;;
select id, list(distinct foo order by bar) from (
  values (1, '10', 2), (1, '15', 1), (2, '10', 1)
) v (id, foo, bar)
group by all
order by id;;
select id, list(distinct foo order by bar) from (
  values (1, '10', 2), (1, '15', 1), (2, '10', 1)
) v (id, foo, bar)
group by all
order by id;;
;
select id, list(distinct foo order by bar) from (
  values (1, '10', 2), (1, '15', 1), (2, '10', 1)
) v (id, foo, bar)
group by all
order by id;;
select id, list(distinct foo order by bar) from (
  values (1, '10', 2), (1, '15', 1), (2, '10', 1)
) v (id, foo, bar)
group by all
order by id;;
CREATE TABLE stage AS SELECT * FROM 'data/parquet-testing/list_sort_segfault.parquet';;
CREATE TABLE health (a VARCHAR[]);;
INSERT INTO health SELECT list_sort(string_to_array(s, ',')) AS a FROM stage;;
