pragma enable_verification;;
create table cities (
	name		text,
	population	float8,
	altitude	int,
	unique (name)
);;
create table capitals (
	name		text,
	population	float8,
	altitude	int,
	state		char(2),
	unique (name)
);;
insert into cities values ('San Francisco', 7.24E+5, 63);;
insert into cities values ('Las Vegas', 2.583E+5, 2174);;
insert into cities values ('Mariposa', 1200, 1953);;
insert into capitals values ('Sacramento', 3.694E+5, 30, 'CA');;
insert into capitals values ('Madison', 1.913E+5, 845, 'WI');;
select * from capitals;;
select * from capitals;;
;
select * from capitals;;
SELECT * FROM capitals;
;
;
;
;
select * from capitals;;
insert into cities values ('Las Vegas', 2.583E+5, 2174) on conflict do nothing;;
insert into capitals values ('Sacramento', 4664.E+5, 30, 'CA') on conflict (name) do update set population = excluded.population;;
insert into capitals values ('Sacramento', 50, 2267, 'NE') on conflict (name) do nothing;;
select * from capitals;;
select * from capitals;;
;
select * from capitals;;
SELECT * FROM capitals;
;
;
;
;
select * from capitals;;
insert into cities values ('Las Vegas', 5.83E+5, 2001) on conflict (name) do update set population = excluded.population, altitude = excluded.altitude;;
select rowid, * from cities;;
select rowid, * from cities;;
;
select rowid, * from cities;;
SELECT rowid, * FROM cities;
;
;
;
;
select rowid, * from cities;;
insert into capitals values ('Las Vegas', 5.83E+5, 2222, 'NV') on conflict (name) do update set population = excluded.population;;
select * from capitals;;
select * from capitals;;
;
select * from capitals;;
SELECT * FROM capitals;
;
;
;
;
select * from capitals;;
select rowid, * from cities;;
select rowid, * from cities;;
;
select rowid, * from cities;;
SELECT rowid, * FROM cities;
;
;
;
;
select rowid, * from cities;;
insert into cities values ('Las Vegas', 5.86E+5, 2223) on conflict (name) do update set population = excluded.population, altitude = excluded.altitude;
select rowid, * from cities;;
insert into cities values ('Las Vegas', 5.86E+5, 2223) on conflict (name) do update set population = excluded.population, altitude = excluded.altitude;
select rowid, * from cities;;
insert into cities values ('Las Vegas', 5.86E+5, 2223) on conflict (name) do update set population = excluded.population, altitude = excluded.altitude;
select rowid, * from cities;;
;
insert into cities values ('Las Vegas', 5.86E+5, 2223) on conflict (name) do update set population = excluded.population, altitude = excluded.altitude;
select rowid, * from cities;;
SELECT rowid, * FROM cities;
;
;
;
;
insert into cities values ('Las Vegas', 5.86E+5, 2223) on conflict (name) do update set population = excluded.population, altitude = excluded.altitude;
select rowid, * from cities;;
drop table capitals;;
drop table cities;;
create table excluded(key int primary key, data text);;
insert into excluded values(1, '1');;
insert into excluded values(1, '2') on conflict (key) do update set data = excluded.data RETURNING *;;
insert into excluded AS target values(1, '2') on conflict (key) do update set data = excluded.data RETURNING *;;
insert into excluded AS target values(1, '2') on conflict (key) do update set data = target.data RETURNING *;;
insert into excluded values(1, '2') on conflict (key) do update set data = 3 RETURNING excluded.*;;
drop table excluded;;
create table dropcol(key int primary key, drop1 int, keep1 text, drop2 numeric, keep2 float);;
insert into dropcol(key, drop1, keep1, drop2, keep2) values(1, 1, '1', '1', 1);;
insert into dropcol(key, drop1, keep1, drop2, keep2) values(1, 2, '2', '2', 2) on conflict(key)
    do update set drop1 = excluded.drop1, keep1 = excluded.keep1, drop2 = excluded.drop2, keep2 = excluded.keep2
    where excluded.drop1 is not null and excluded.keep1 is not null and excluded.drop2 is not null and excluded.keep2 is not null
          and dropcol.drop1 is not null and dropcol.keep1 is not null and dropcol.drop2 is not null and dropcol.keep2 is not null
    returning *;
;;
insert into dropcol(key, drop1, keep1, drop2, keep2) values(1, 3, '3', '3', 3) on conflict(key)
    do update set drop1 = dropcol.drop1, keep1 = dropcol.keep1, drop2 = dropcol.drop2, keep2 = dropcol.keep2
    returning *;
;;
alter table dropcol
drop column drop1;;
alter table dropcol
drop column drop2;;
insert into dropcol(key, keep1, keep2) values(1, '4', 4) on conflict(key)
    do update set keep1 = excluded.keep1, keep2 = excluded.keep2
    where excluded.keep1 is not null and excluded.keep2 is not null
          and dropcol.keep1 is not null and dropcol.keep2 is not null
    returning *;
;;
insert into dropcol(key, keep1, keep2) values(1, '5', 5) on conflict(key)
    do update set keep1 = dropcol.keep1, keep2 = dropcol.keep2
    returning *;
;;
DROP TABLE dropcol;;
