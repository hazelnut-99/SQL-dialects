PRAGMA enable_verification;
SELECT string_split(NULL, NULL);
SELECT string_split(NULL, NULL);
;
SELECT string_split(NULL, NULL);
SELECT string_split(NULL, NULL);
;
;
;
;
SELECT string_split(NULL, NULL);
SELECT * FROM (VALUES (string_split('hello world', ' ')), (string_split(NULL, ' ')), (string_split('a b c', NULL)), (string_split('a b c', ' '))) tbl(i);
SELECT * FROM (VALUES (string_split('hello world', ' ')), (string_split(NULL, ' ')), (string_split('a b c', NULL)), (string_split('a b c', ' '))) tbl(i);
;
SELECT * FROM (VALUES (string_split('hello world', ' ')), (string_split(NULL, ' ')), (string_split('a b c', NULL)), (string_split('a b c', ' '))) tbl(i);
SELECT * FROM (SELECT * FROM (VALUES (string_split('hello world', ' ')), (string_split(NULL, ' ')), (string_split('a b c', NULL)), (string_split('a b c', ' '))) AS valueslist) AS tbl(i);
;
;
;
;
SELECT * FROM (VALUES (string_split('hello world', ' ')), (string_split(NULL, ' ')), (string_split('a b c', NULL)), (string_split('a b c', ' '))) tbl(i);
CREATE TABLE strings_with_null (s VARCHAR);
INSERT INTO strings_with_null VALUES ('aba'), (NULL), ('ababa');
SELECT UNNEST(string_split(s, 'b')) FROM strings_with_null;
SELECT UNNEST(string_split(s, 'b')) FROM strings_with_null;
;
SELECT UNNEST(string_split(s, 'b')) FROM strings_with_null;
SELECT unnest(string_split(s, 'b')) FROM strings_with_null;
;
;
;
;
SELECT UNNEST(string_split(s, 'b')) FROM strings_with_null;
SELECT UNNEST(string_split(NULL, ' ')) IS NULL LIMIT 5;
SELECT UNNEST(string_split(NULL, ' ')) IS NULL LIMIT 5;
;
SELECT UNNEST(string_split(NULL, ' ')) IS NULL LIMIT 5;
SELECT (unnest(string_split(NULL, ' ')) IS NULL) LIMIT 5;
;
;
;
;
SELECT UNNEST(string_split(NULL, ' ')) IS NULL LIMIT 5;
SELECT UNNEST(string_split('üüüüü', '◌̈'));
SELECT UNNEST(string_split('üüüüü', '◌̈'));
;
SELECT UNNEST(string_split('üüüüü', '◌̈'));
SELECT unnest(string_split('üüüüü', '◌̈'));
;
;
;
;
SELECT UNNEST(string_split('üüüüü', '◌̈'));
SELECT UNNEST(string_split('üüüüü', '◌'));
SELECT UNNEST(string_split('üüüüü', '◌'));
;
SELECT UNNEST(string_split('üüüüü', '◌'));
SELECT unnest(string_split('üüüüü', '◌'));
;
;
;
;
SELECT UNNEST(string_split('üüüüü', '◌'));
SELECT UNNEST(string_split_regex('üüüüü', '◌̈'));
SELECT UNNEST(string_split_regex('üüüüü', '◌̈'));
;
SELECT UNNEST(string_split_regex('üüüüü', '◌̈'));
SELECT unnest(string_split_regex('üüüüü', '◌̈'));
;
;
;
;
SELECT UNNEST(string_split_regex('üüüüü', '◌̈'));
SELECT UNNEST(string_split_regex('üüüüü', '◌'));
SELECT UNNEST(string_split_regex('üüüüü', '◌'));
;
SELECT UNNEST(string_split_regex('üüüüü', '◌'));
SELECT unnest(string_split_regex('üüüüü', '◌'));
;
;
;
;
SELECT UNNEST(string_split_regex('üüüüü', '◌'));
SELECT UNNEST(string_split(' 🦆🦆  🦆🦆', '  '));
SELECT UNNEST(string_split(' 🦆🦆  🦆🦆', '  '));
;
SELECT UNNEST(string_split(' 🦆🦆  🦆🦆', '  '));
SELECT unnest(string_split(' 🦆🦆  🦆🦆', '  '));
;
;
;
;
SELECT UNNEST(string_split(' 🦆🦆  🦆🦆', '  '));
SELECT UNNEST(string_split('a a a a a', ' '));
SELECT UNNEST(string_split('a a a a a', ' '));
;
SELECT UNNEST(string_split('a a a a a', ' '));
SELECT unnest(string_split('a a a a a', ' '));
;
;
;
;
SELECT UNNEST(string_split('a a a a a', ' '));
SELECT UNNEST(string_split('🦆 🦆 🦆 🦆 🦆', ' '));
SELECT UNNEST(string_split('🦆 🦆 🦆 🦆 🦆', ' '));
;
SELECT UNNEST(string_split('🦆 🦆 🦆 🦆 🦆', ' '));
SELECT unnest(string_split('🦆 🦆 🦆 🦆 🦆', ' '));
;
;
;
;
SELECT UNNEST(string_split('🦆 🦆 🦆 🦆 🦆', ' '));
SELECT UNNEST(string_split('🦆🐈🐈🦆🐈🐈🦆🐈🐈🦆🐈🐈🦆', '🐈🐈'));
SELECT UNNEST(string_split('🦆🐈🐈🦆🐈🐈🦆🐈🐈🦆🐈🐈🦆', '🐈🐈'));
;
SELECT UNNEST(string_split('🦆🐈🐈🦆🐈🐈🦆🐈🐈🦆🐈🐈🦆', '🐈🐈'));
SELECT unnest(string_split('🦆🐈🐈🦆🐈🐈🦆🐈🐈🦆🐈🐈🦆', '🐈🐈'));
;
;
;
;
SELECT UNNEST(string_split('🦆🐈🐈🦆🐈🐈🦆🐈🐈🦆🐈🐈🦆', '🐈🐈'));
SELECT UNNEST(string_split('', 'delim'));
SELECT UNNEST(string_split('', 'delim'));
;
SELECT UNNEST(string_split('', 'delim'));
SELECT unnest(string_split('', 'delim'));
;
;
;
;
SELECT UNNEST(string_split('', 'delim'));
SELECT UNNEST(string_split('aaaaa', ''));
SELECT UNNEST(string_split('aaaaa', ''));
;
SELECT UNNEST(string_split('aaaaa', ''));
SELECT unnest(string_split('aaaaa', ''));
;
;
;
;
SELECT UNNEST(string_split('aaaaa', ''));
SELECT UNNEST(string_split('🦆🦆🦆🦆🦆', ''));
SELECT UNNEST(string_split('🦆🦆🦆🦆🦆', ''));
;
SELECT UNNEST(string_split('🦆🦆🦆🦆🦆', ''));
SELECT unnest(string_split('🦆🦆🦆🦆🦆', ''));
;
;
;
;
SELECT UNNEST(string_split('🦆🦆🦆🦆🦆', ''));
SELECT UNNEST(string_split('abab', 'b'));
SELECT UNNEST(string_split('abab', 'b'));
;
SELECT UNNEST(string_split('abab', 'b'));
SELECT unnest(string_split('abab', 'b'));
;
;
;
;
SELECT UNNEST(string_split('abab', 'b'));
SELECT UNNEST(string_split('🦆b🦆b', 'b'));
SELECT UNNEST(string_split('🦆b🦆b', 'b'));
;
SELECT UNNEST(string_split('🦆b🦆b', 'b'));
SELECT unnest(string_split('🦆b🦆b', 'b'));
;
;
;
;
SELECT UNNEST(string_split('🦆b🦆b', 'b'));
CREATE TABLE documents(s VARCHAR);
INSERT INTO documents VALUES ('baabbaa'), ('aabbaab'), ('ababababa'), ('b🦆🦆bb🦆🦆'), ('🦆🦆bb🦆🦆b'), ('🦆b🦆b🦆b🦆b🦆');
SELECT UNNEST(string_split(s, 'bb')) FROM documents WHERE 1;
SELECT UNNEST(string_split(s, 'bb')) FROM documents WHERE 1;
;
SELECT UNNEST(string_split(s, 'bb')) FROM documents WHERE 1;
SELECT unnest(string_split(s, 'bb')) FROM documents WHERE 1;
;
;
;
;
SELECT UNNEST(string_split(s, 'bb')) FROM documents WHERE 1;
SELECT UNNEST(string_split(s, 'bb')) FROM documents WHERE s LIKE 'b%';
SELECT UNNEST(string_split(s, 'bb')) FROM documents WHERE s LIKE 'b%';
;
SELECT UNNEST(string_split(s, 'bb')) FROM documents WHERE s LIKE 'b%';
SELECT unnest(string_split(s, 'bb')) FROM documents WHERE (s ~~ 'b%');
;
;
;
;
SELECT UNNEST(string_split(s, 'bb')) FROM documents WHERE s LIKE 'b%';
SELECT string_agg(ss, 'bb') FROM (SELECT rowid AS id, UNNEST(string_split(s, 'bb')) AS ss FROM documents) AS q GROUP BY id ORDER BY id;
SELECT string_agg(ss, 'bb') FROM (SELECT rowid AS id, UNNEST(string_split(s, 'bb')) AS ss FROM documents) AS q GROUP BY id ORDER BY id;
;
SELECT string_agg(ss, 'bb') FROM (SELECT rowid AS id, UNNEST(string_split(s, 'bb')) AS ss FROM documents) AS q GROUP BY id ORDER BY id;
SELECT string_agg(ss, 'bb') FROM (SELECT rowid AS id, unnest(string_split(s, 'bb')) AS ss FROM documents) AS q GROUP BY id ORDER BY id;
;
;
;
;
SELECT string_agg(ss, 'bb') FROM (SELECT rowid AS id, UNNEST(string_split(s, 'bb')) AS ss FROM documents) AS q GROUP BY id ORDER BY id;
SELECT UNNEST(string_split_regex('a1a11a111a', '[0-9]+'));
SELECT UNNEST(string_split_regex('a1a11a111a', '[0-9]+'));
;
SELECT UNNEST(string_split_regex('a1a11a111a', '[0-9]+'));
SELECT unnest(string_split_regex('a1a11a111a', '[0-9]+'));
;
;
;
;
SELECT UNNEST(string_split_regex('a1a11a111a', '[0-9]+'));
SELECT UNNEST(string_split_regex('aaaaa', ''));
SELECT UNNEST(string_split_regex('aaaaa', ''));
;
SELECT UNNEST(string_split_regex('aaaaa', ''));
SELECT unnest(string_split_regex('aaaaa', ''));
;
;
;
;
SELECT UNNEST(string_split_regex('aaaaa', ''));
SELECT UNNEST(string_split_regex('a a  a   a', '\s+'));
SELECT UNNEST(string_split_regex('a a  a   a', '\s+'));
;
SELECT UNNEST(string_split_regex('a a  a   a', '\s+'));
SELECT unnest(string_split_regex('a a  a   a', '\s+'));
;
;
;
;
SELECT UNNEST(string_split_regex('a a  a   a', '\s+'));
SELECT UNNEST(string_split('aaaaa', NULL));
SELECT UNNEST(string_split('aaaaa', NULL));
;
SELECT UNNEST(string_split('aaaaa', NULL));
SELECT unnest(string_split('aaaaa', NULL));
;
;
;
;
SELECT UNNEST(string_split('aaaaa', NULL));
select UNNEST(string_split('1|2|3', '|'));
select UNNEST(string_split('1|2|3', '|'));
;
select UNNEST(string_split('1|2|3', '|'));
SELECT unnest(string_split('1|2|3', '|'));
;
;
;
;
select UNNEST(string_split('1|2|3', '|'));
select UNNEST(string_split('1|2|3|', '|'));
select UNNEST(string_split('1|2|3|', '|'));
;
select UNNEST(string_split('1|2|3|', '|'));
SELECT unnest(string_split('1|2|3|', '|'));
;
;
;
;
select UNNEST(string_split('1|2|3|', '|'));
select UNNEST(string_split('1||2|3||', '||'));
select UNNEST(string_split('1||2|3||', '||'));
;
select UNNEST(string_split('1||2|3||', '||'));
SELECT unnest(string_split('1||2|3||', '||'));
;
;
;
;
select UNNEST(string_split('1||2|3||', '||'));
select UNNEST(string_split('1|2|3', ''));
select UNNEST(string_split('1|2|3', ''));
;
select UNNEST(string_split('1|2|3', ''));
SELECT unnest(string_split('1|2|3', ''));
;
;
;
;
select UNNEST(string_split('1|2|3', ''));
select UNNEST(string_split('', '|'));
select UNNEST(string_split('', '|'));
;
select UNNEST(string_split('', '|'));
SELECT unnest(string_split('', '|'));
;
;
;
;
select UNNEST(string_split('', '|'));
select UNNEST(string_split('1|2|3', NULL));
select UNNEST(string_split('1|2|3', NULL));
;
select UNNEST(string_split('1|2|3', NULL));
SELECT unnest(string_split('1|2|3', NULL));
;
;
;
;
select UNNEST(string_split('1|2|3', NULL));
select string_split(NULL, '|') IS NULL;
select string_split(NULL, '|') IS NULL;
;
select string_split(NULL, '|') IS NULL;
SELECT (string_split(NULL, '|') IS NULL);
;
;
;
;
select string_split(NULL, '|') IS NULL;
select UNNEST(string_split('abc', ''));
select UNNEST(string_split('abc', ''));
;
select UNNEST(string_split('abc', ''));
SELECT unnest(string_split('abc', ''));
;
;
;
;
select UNNEST(string_split('abc', ''));
select UNNEST(string_split_regex('abc', '(|abc)'));
select UNNEST(string_split_regex('abc', '(|abc)'));
;
select UNNEST(string_split_regex('abc', '(|abc)'));
SELECT unnest(string_split_regex('abc', '(|abc)'));
;
;
;
;
select UNNEST(string_split_regex('abc', '(|abc)'));
select UNNEST(string_split_regex('abc', '(abc|)'));
select UNNEST(string_split_regex('abc', '(abc|)'));
;
select UNNEST(string_split_regex('abc', '(abc|)'));
SELECT unnest(string_split_regex('abc', '(abc|)'));
;
;
;
;
select UNNEST(string_split_regex('abc', '(abc|)'));
select UNNEST(string_split('abc', ','));
select UNNEST(string_split('abc', ','));
;
select UNNEST(string_split('abc', ','));
SELECT unnest(string_split('abc', ','));
;
;
;
;
select UNNEST(string_split('abc', ','));
select UNNEST(string_split_regex('abc', '(,|abc)'));
select UNNEST(string_split_regex('abc', '(,|abc)'));
;
select UNNEST(string_split_regex('abc', '(,|abc)'));
SELECT unnest(string_split_regex('abc', '(,|abc)'));
;
;
;
;
select UNNEST(string_split_regex('abc', '(,|abc)'));
select UNNEST(string_split_regex('abc', '(abc|,)'));
select UNNEST(string_split_regex('abc', '(abc|,)'));
;
select UNNEST(string_split_regex('abc', '(abc|,)'));
SELECT unnest(string_split_regex('abc', '(abc|,)'));
;
;
;
;
select UNNEST(string_split_regex('abc', '(abc|,)'));
select UNNEST(string_split('1,2,3,4,,6', ','));
select UNNEST(string_split('1,2,3,4,,6', ','));
;
select UNNEST(string_split('1,2,3,4,,6', ','));
SELECT unnest(string_split('1,2,3,4,,6', ','));
;
;
;
;
select UNNEST(string_split('1,2,3,4,,6', ','));
select UNNEST(string_split_regex('1,2,3,4,,6', '(,|)'));
select UNNEST(string_split_regex('1,2,3,4,,6', '(,|)'));
;
select UNNEST(string_split_regex('1,2,3,4,,6', '(,|)'));
SELECT unnest(string_split_regex('1,2,3,4,,6', '(,|)'));
;
;
;
;
select UNNEST(string_split_regex('1,2,3,4,,6', '(,|)'));
select UNNEST(string_split_regex('1,2,3,4,,6', '(|,)'));
select UNNEST(string_split_regex('1,2,3,4,,6', '(|,)'));
;
select UNNEST(string_split_regex('1,2,3,4,,6', '(|,)'));
SELECT unnest(string_split_regex('1,2,3,4,,6', '(|,)'));
;
;
;
;
select UNNEST(string_split_regex('1,2,3,4,,6', '(|,)'));
select UNNEST(string_split_regex('1,2,3,4,*,6', '(,|\*)'));
select UNNEST(string_split_regex('1,2,3,4,*,6', '(,|\*)'));
;
select UNNEST(string_split_regex('1,2,3,4,*,6', '(,|\*)'));
SELECT unnest(string_split_regex('1,2,3,4,*,6', '(,|\*)'));
;
;
;
;
select UNNEST(string_split_regex('1,2,3,4,*,6', '(,|\*)'));
select UNNEST(string_split_regex('1,2,3,4,*,6', '(\*|,)'));
select UNNEST(string_split_regex('1,2,3,4,*,6', '(\*|,)'));
;
select UNNEST(string_split_regex('1,2,3,4,*,6', '(\*|,)'));
SELECT unnest(string_split_regex('1,2,3,4,*,6', '(\*|,)'));
;
;
;
;
select UNNEST(string_split_regex('1,2,3,4,*,6', '(\*|,)'));
select string_split();
select string_split();
;
select string_split();
select string_split();
select string_split('a');
select string_split('a');
;
select string_split('a');
select string_split('a');
SELECT string_split_regex(a, '[') FROM test ORDER BY a;;
SELECT string_split_regex(a, '[') FROM test ORDER BY a;;
;
SELECT string_split_regex(a, '[') FROM test ORDER BY a;;
SELECT string_split_regex(a, '[') FROM test ORDER BY a;;
