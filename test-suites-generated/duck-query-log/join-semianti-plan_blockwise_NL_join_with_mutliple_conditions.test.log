PRAGMA enable_verification;
create table t1 as select * from values (1, 2), (2, 4), (3, 8), (6, 25), (1, 25) t(a, b);;
create table t2 as select * from values (4), (5) t(b);;
select * from t1 semi join t2 on t1.a < t2.b and t1.b > t2.b order by all;;
select * from t1 semi join t2 on t1.a < t2.b and t1.b > t2.b order by all;;
;
select * from t1 semi join t2 on t1.a < t2.b and t1.b > t2.b order by all;;
SELECT * FROM t1 SEMI JOIN t2 ON (((t1.a < t2.b) AND (t1.b > t2.b))) ORDER BY COLUMNS(*);
;
;
;
;
select * from t1 semi join t2 on t1.a < t2.b and t1.b > t2.b order by all;;
select * from t1 anti join t2 on t1.a < t2.b and t1.b < t2.b order by all;;
select * from t1 anti join t2 on t1.a < t2.b and t1.b < t2.b order by all;;
;
select * from t1 anti join t2 on t1.a < t2.b and t1.b < t2.b order by all;;
SELECT * FROM t1 ANTI JOIN t2 ON (((t1.a < t2.b) AND (t1.b < t2.b))) ORDER BY COLUMNS(*);
;
;
;
;
select * from t1 anti join t2 on t1.a < t2.b and t1.b < t2.b order by all;;
Explain select * from t1 anti join t2 on t1.a < t2.b and t1.b < t2.b order by all;;
select * from t1 anti join t2 on t1.a < t2.b and t1.b < t2.b order by all;;
select * from t1 anti join t2 on t1.a < t2.b and t1.b < t2.b order by all;;
;
select * from t1 anti join t2 on t1.a < t2.b and t1.b < t2.b order by all;;
SELECT * FROM t1 ANTI JOIN t2 ON (((t1.a < t2.b) AND (t1.b < t2.b))) ORDER BY COLUMNS(*);
;
;
;
;
select * from t1 anti join t2 on t1.a < t2.b and t1.b < t2.b order by all;;
select * from t1 semi join t2 on t1.a < t2.b or t1.b < t2.b order by all;;
select * from t1 semi join t2 on t1.a < t2.b or t1.b < t2.b order by all;;
;
select * from t1 semi join t2 on t1.a < t2.b or t1.b < t2.b order by all;;
SELECT * FROM t1 SEMI JOIN t2 ON (((t1.a < t2.b) OR (t1.b < t2.b))) ORDER BY COLUMNS(*);
;
;
;
;
select * from t1 semi join t2 on t1.a < t2.b or t1.b < t2.b order by all;;
select * from t1 semi join t2 on (t1.a < t2.b and t1.b < t2.b) or (t1.a < t2.b and t1.b = 4) order by all;;
select * from t1 semi join t2 on (t1.a < t2.b and t1.b < t2.b) or (t1.a < t2.b and t1.b = 4) order by all;;
;
select * from t1 semi join t2 on (t1.a < t2.b and t1.b < t2.b) or (t1.a < t2.b and t1.b = 4) order by all;;
SELECT * FROM t1 SEMI JOIN t2 ON ((((t1.a < t2.b) AND (t1.b < t2.b)) OR ((t1.a < t2.b) AND (t1.b = 4)))) ORDER BY COLUMNS(*);
;
;
;
;
select * from t1 semi join t2 on (t1.a < t2.b and t1.b < t2.b) or (t1.a < t2.b and t1.b = 4) order by all;;
select * from t1 semi join t2 on (t1.a < t2.b or t1.b < t2.b) and (t1.a = 1 or t1.b = 4) order by all;;
select * from t1 semi join t2 on (t1.a < t2.b or t1.b < t2.b) and (t1.a = 1 or t1.b = 4) order by all;;
;
select * from t1 semi join t2 on (t1.a < t2.b or t1.b < t2.b) and (t1.a = 1 or t1.b = 4) order by all;;
SELECT * FROM t1 SEMI JOIN t2 ON ((((t1.a < t2.b) OR (t1.b < t2.b)) AND ((t1.a = 1) OR (t1.b = 4)))) ORDER BY COLUMNS(*);
;
;
;
;
select * from t1 semi join t2 on (t1.a < t2.b or t1.b < t2.b) and (t1.a = 1 or t1.b = 4) order by all;;
CREATE TABLE flattened ("start" varchar, "end" varchar);;
insert into flattened values ('2023-03-15T00:00:00Z', '2023-03-20T00:00:00Z');;
create table input_table as select * from VALUES
('1', '2023-03-14T00:00:00Z', 2),
('2', '2023-03-15T00:00:00Z', 4),
('3', '2023-03-16T00:00:00Z', 7),
('4', '2023-03-17T00:00:00Z', 3),
('5', '2023-03-18T00:00:00Z', 2),
('6', '2023-03-19T23:59:59Z', 4),
('7', '2023-03-20T00:00:00Z', 7),
('8', '2023-03-21T00:00:00Z', 3) t(user_id, timestamp, value);;
SELECT * FROM input_table
ANTI JOIN flattened
ON input_table."timestamp" >= flattened.start AND input_table."timestamp" <  flattened.end;;
SELECT * FROM input_table
ANTI JOIN flattened
ON input_table."timestamp" >= flattened.start AND input_table."timestamp" <  flattened.end;;
;
SELECT * FROM input_table
ANTI JOIN flattened
ON input_table."timestamp" >= flattened.start AND input_table."timestamp" <  flattened.end;;
SELECT * FROM input_table ANTI JOIN flattened ON (((input_table."timestamp" >= flattened."start") AND (input_table."timestamp" < flattened."end")));
;
;
;
;
SELECT * FROM input_table
ANTI JOIN flattened
ON input_table."timestamp" >= flattened.start AND input_table."timestamp" <  flattened.end;;
