PRAGMA enable_verification;
CREATE TABLE test (a INTEGER);
INSERT INTO test VALUES (1), (2), (3);
SELECT * FROM test ORDER BY a;
BEGIN TRANSACTION;
UPDATE test SET a=a+1;
SELECT * FROM test;
SELECT * FROM test WHERE a=4;
SELECT * FROM test;
UPDATE test SET a=a+1;
SELECT * FROM test ORDER BY a;
SELECT * FROM test ORDER BY a;
COMMIT;
SELECT * FROM test ORDER BY a;
SELECT * FROM test ORDER BY a;
BEGIN TRANSACTION;
SELECT * FROM test;
SELECT * FROM test WHERE a=5;
UPDATE test SET a=9 WHERE a=5;
SELECT * FROM test ORDER BY a;
UPDATE test SET a=a+1;
SELECT * FROM test ORDER BY a;
UPDATE test SET a=7 WHERE a=3;
SELECT * FROM test ORDER BY a;
UPDATE test SET a=a+1;
SELECT * FROM test ORDER BY a;
UPDATE test SET a=8 WHERE a=4;
SELECT * FROM test ORDER BY a;
UPDATE test SET a=a+1;
SELECT * FROM test ORDER BY a;
COMMIT;
SELECT * FROM test ORDER BY a;
SELECT * FROM test ORDER BY a;
SET default_null_order='nulls_first';
SET immediate_transaction_mode=true;
PRAGMA enable_verification;
PRAGMA enable_verification;
PRAGMA enable_verification;
PRAGMA enable_verification;
PRAGMA enable_verification;
PRAGMA enable_verification;
CREATE TABLE test (a INTEGER);
INSERT INTO test VALUES (1), (2), (3);
BEGIN TRANSACTION;
UPDATE test SET a=NULL WHERE a=1;
BEGIN TRANSACTION;
UPDATE test SET a=NULL WHERE a=2;
BEGIN TRANSACTION;
UPDATE test SET a=NULL WHERE a=3;
BEGIN TRANSACTION;
SELECT COUNT(*) FROM test WHERE a IS NULL;
UPDATE test SET a=99 WHERE a IS NULL;
BEGIN TRANSACTION;
SELECT * FROM test ORDER BY a;
SELECT * FROM test ORDER BY a;
SELECT * FROM test ORDER BY a;
SELECT * FROM test ORDER BY a;
SELECT * FROM test ORDER BY a;
UPDATE test SET a=99 WHERE a=1;
UPDATE test SET a=99 WHERE a=2;
UPDATE test SET a=99 WHERE a=3;
UPDATE test SET a=99 WHERE a IS NULL;
CREATE TABLE test (a INTEGER);
INSERT INTO test VALUES (3);
CREATE  TABLE src (a INTEGER);
INSERT INTO src VALUES (2);
SELECT * FROM test;
SELECT * FROM src;
UPDATE test SET a=test.a+s.a FROM src s;
SELECT * FROM test;
UPDATE test SET a=test.a+t.a FROM test t;
SELECT * FROM test;
UPDATE test SET a=t.a+s.a FROM test t, src s;
SELECT * FROM test;
UPDATE test SET a=s.q FROM (SELECT a+1 as q FROM src) s;
SELECT * FROM test;
CREATE VIEW vt AS (SELECT 17 as v);
UPDATE test SET a=v FROM vt;
SELECT * FROM test;
UPDATE test SET a=s.a FROM src s WHERE s.a = 2;
SELECT * FROM test;
UPDATE test t SET a=1 FROM src s WHERE s.a = t.a;
SELECT * FROM test;
UPDATE test t SET a=9 FROM src s WHERE s.a=t.a;
SELECT * FROM test;
CREATE TABLE terms(docid INTEGER, term INTEGER);
CREATE TABLE docs(id INTEGER, len INTEGER);
insert into docs values (1, 0), (2, 0);
insert into terms values (1, 1);
insert into terms values (2, 1);
insert into terms values (2, 2);
insert into terms values (2, 3);
UPDATE docs
SET len = sq.len
FROM (
    SELECT docid AS id, count(term) AS len
    FROM terms
    GROUP BY docid
    ORDER BY docid
) AS sq
WHERE docs.id = sq.id;
select * from docs;
PRAGMA enable_verification;
CREATE TABLE test (a INTEGER);
INSERT INTO test VALUES (3);
SELECT * FROM test;
SELECT * FROM test WHERE a=3;
BEGIN TRANSACTION;
UPDATE test SET a=1;
SELECT * FROM test;
SELECT * FROM test WHERE a=1;
SELECT * FROM test;
SELECT * FROM test WHERE a=3;
COMMIT;
SELECT * FROM test;
SELECT * FROM test;
BEGIN TRANSACTION;
UPDATE test SET a=4;
SELECT * FROM test;
SELECT * FROM test;
ROLLBACK;
SELECT * FROM test;
SELECT * FROM test WHERE a=1;
SELECT * FROM test;
CREATE TABLE test (id INTEGER, a INTEGER);
INSERT INTO test VALUES (1, 1), (2, 2), (3, 3), (4, NULL);
SELECT * FROM test ORDER BY id;
BEGIN TRANSACTION;
UPDATE test SET a=CASE WHEN a IS NULL THEN 1 ELSE NULL END;
SELECT * FROM test ORDER BY id;
UPDATE test SET a=2 WHERE id >= 2 AND id <= 3;
SELECT * FROM test ORDER BY id;
UPDATE test SET a=NULL WHERE id >= 3;
SELECT * FROM test ORDER BY id;
UPDATE test SET a=id WHERE id != 3;
SELECT * FROM test ORDER BY id;
UPDATE test SET a=NULL WHERE id != 3;
SELECT * FROM test ORDER BY id;
UPDATE test SET a=3 WHERE id != 2;
SELECT * FROM test ORDER BY id;
UPDATE test SET a=7 WHERE id != 3;
SELECT * FROM test ORDER BY id;
UPDATE test SET a=NULL;
SELECT * FROM test ORDER BY id;
COMMIT;
SELECT * FROM test ORDER BY id;
CREATE VIEW test_table_view AS SELECT * FROM 'data/csv/issue2471.csv';
create table test_table (isin VARCHAR(20), value VARCHAR(1));
insert into test_table SELECT * FROM test_table_view;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
select count(distinct isin), min(isin), max(isin), min(value), max(value) from test_table;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;
PRAGMA enable_verification;
CREATE TABLE student(id INTEGER, name VARCHAR, PRIMARY KEY(id));
INSERT INTO student SELECT i, 'creator' FROM RANGE(260001) tbl(i);
SELECT name FROM student WHERE id = 122879;
SELECT name FROM student WHERE id = 122881;
SELECT name FROM student WHERE id = 245780;
SELECT name FROM student WHERE id = 150881;
UPDATE student SET name = 'updator0' WHERE id = 122879;
UPDATE student SET name = 'updator1' WHERE id = 122881;
UPDATE student SET name = 'updator2' WHERE id = 245780;
UPDATE student SET name = 'updator3' WHERE id = 150881;
SELECT name FROM student WHERE id = 122879;
SELECT name FROM student WHERE id = 122881;
SELECT name FROM student WHERE id = 245780;
SELECT name FROM student WHERE id = 150881;
CREATE TABLE student(id INTEGER, name VARCHAR, PRIMARY KEY(id));
insert into student select i, 'creator' from range(130001) tbl(i);
select id, name from student where id=122881;
update student set name = 'updator' where id = 122881;
select id, name from student where id=122881;
select id, name from student where id=122881;
CREATE TABLE test (a VARCHAR);
INSERT INTO test VALUES ('abcdefghijklmnopqrstuvwxyz');
INSERT INTO test SELECT a||a||a||a||a||a||a||a||a||a FROM test;
DELETE FROM test WHERE length(a) = (SELECT MIN(length(a)) FROM test);
INSERT INTO test SELECT a||a||a||a||a||a||a||a||a||a FROM test;
DELETE FROM test WHERE length(a) = (SELECT MIN(length(a)) FROM test);
INSERT INTO test SELECT a||a||a||a||a||a||a||a||a||a FROM test;
DELETE FROM test WHERE length(a) = (SELECT MIN(length(a)) FROM test);
INSERT INTO test SELECT a||a||a||a||a||a||a||a||a||a FROM test;
DELETE FROM test WHERE length(a) = (SELECT MIN(length(a)) FROM test);
INSERT INTO test SELECT a||a||a||a||a||a||a||a||a||a FROM test;
DELETE FROM test WHERE length(a) = (SELECT MIN(length(a)) FROM test);
SELECT LENGTH(a) FROM test;
BEGIN TRANSACTION;
UPDATE test SET a='a';
SELECT LENGTH(a) FROM test;
SELECT LENGTH(a) FROM test;
COMMIT;
SELECT LENGTH(a) FROM test;
SELECT LENGTH(a) FROM test;
PRAGMA enable_verification;
CREATE TABLE a (b int);
BEGIN;
INSERT INTO a VALUES (1);
UPDATE a SET b = b + 10;
COMMIT;
UPDATE a SET b = b + 10;
SELECT * FROM a;
SET default_null_order='nulls_first';
SET immediate_transaction_mode=true;
CREATE TABLE test (a VARCHAR);
INSERT INTO test VALUES ('hello'), ('world');
BEGIN TRANSACTION;
UPDATE test SET a=NULL where a='world';
SELECT * FROM test ORDER BY a;
SELECT * FROM test ORDER BY a;
COMMIT;
SELECT * FROM test ORDER BY a;
SET wal_autocheckpoint='1TB';
CREATE TABLE t(i int, j int);
INSERT INTO t SELECT ii, NULL FROM range(1024) tbl(ii);
select COUNT(j), MIN(j), MAX(j) from t;
CHECKPOINT;
select COUNT(j), MIN(j), MAX(j) from t;
UPDATE t SET j = 1;
select COUNT(j), MIN(j), MAX(j) from t;
CREATE TABLE t1 (c0 INT);
INSERT INTO t1(c0) VALUES (1),(2),(3);
UPDATE t1 SET c0 = DEFAULT;
CREATE TABLE test AS SELECT * FROM range (0, 50000, 1) t1(i);
SELECT COUNT(i), SUM(i) FROM test;
UPDATE test SET i=i+1;
SELECT COUNT(i), SUM(i) FROM test;
UPDATE test SET i=i+1;
SELECT COUNT(i), SUM(i) FROM test;
INSERT INTO test SELECT * FROM test;
SELECT COUNT(i), SUM(i) FROM test;
UPDATE test SET i=i+1;
SELECT COUNT(i), SUM(i) FROM test;
UPDATE test SET i=i+1;
SELECT COUNT(i), SUM(i) FROM test;
CREATE TABLE test (a VARCHAR);
INSERT INTO test VALUES ('hello'), ('world');
BEGIN TRANSACTION;
UPDATE test SET a='test' WHERE a='hello';
SELECT * FROM test ORDER BY a;
UPDATE test SET a='test2' WHERE a='world';
SELECT * FROM test ORDER BY a;
COMMIT;
SELECT * FROM test ORDER BY a;
SET wal_autocheckpoint='1TB';
create table test (id bigint primary key, c1 text);
insert into test (id, c1) values (1, 'foo');
insert into test (id, c1) values (2, 'bar');
begin transaction;
delete from test where id = 1;
update test set c1='baz' where id=2;
commit;
SELECT * FROM test ORDER BY id;
SELECT * FROM test ORDER BY id;
CREATE TABLE tbl (key INT, fruit VARCHAR, cost INT);
INSERT INTO tbl VALUES (1, 'apple', 2), (2, 'orange', 3);
UPDATE tbl SET (key, fruit, cost) = (1, 'pear', 2);
SELECT * FROM tbl;
UPDATE tbl SET (key, fruit, cost) = (2, 'apple', 3);
SELECT * FROM tbl;
UPDATE tbl SET (key, fruit, cost) = 3;
SELECT * FROM tbl;
UPDATE tbl SET (key, fruit, cost) = (1, 2);
UPDATE tbl SET (key, fruit, cost) = (1, 2, 3, 4);
UPDATE tbl SET (key, fruit, cost) = ADD(key, cost);
SELECT * FROM tbl;
UPDATE tbl SET () = (key, fruit);
UPDATE tbl SET (key, fruit) = ();
PRAGMA enable_verification;
CREATE TABLE t1 AS SELECT * FROM generate_series(0, 1999, 1) tbl(i);
CREATE TABLE t2 AS SELECT * FROM generate_series(0, 4999, 1) tbl(i);
SELECT SUM(i) FROM t1;
SELECT SUM(i) FROM t2;
SELECT COUNT(*) FROM t1, t2 WHERE t1.i<33;
SELECT COUNT(*) FROM t1, t2 WHERE t2.i<33;
UPDATE t1 SET i=33 FROM t2 WHERE t1.i<33;
UPDATE t2 SET i=33 FROM t1 WHERE t2.i<33;
SELECT SUM(i) FROM t1;
SELECT SUM(i) FROM t2;
UPDATE t1 SET i=34 FROM t2 WHERE t1.i=33 AND t1.i<>t2.i;
UPDATE t2 SET i=34 FROM t1 WHERE t2.i=33 AND t1.i<>t2.i;
SELECT SUM(i) FROM t1;
SELECT SUM(i) FROM t2;
UPDATE t1 SET i=35 FROM t2 WHERE t1.i=34 AND t1.i<t2.i;
UPDATE t2 SET i=35 FROM t1 WHERE t2.i=34 AND t2.i<t1.i;
SELECT SUM(i) FROM t1;
SELECT SUM(i) FROM t2;
BEGIN TRANSACTION;
CREATE TABLE test AS SELECT i AS a, 'hello' AS b FROM range (0, 3000, 1) t1(i);
INSERT INTO test SELECT * FROM test;
INSERT INTO test SELECT * FROM test;
INSERT INTO test SELECT * FROM test;
INSERT INTO test SELECT * FROM test;
INSERT INTO test SELECT * FROM test;
INSERT INTO test SELECT * FROM test;
INSERT INTO test SELECT * FROM test;
COMMIT;
SELECT SUM(a), SUM(LENGTH(b)) FROM test;
SELECT SUM(a), SUM(LENGTH(b)) FROM test;
BEGIN TRANSACTION;
SELECT SUM(a), SUM(LENGTH(b)) FROM test;
UPDATE test SET a=a+2, b='hellohello' WHERE a%2=0;
SELECT SUM(a), SUM(LENGTH(b)) FROM test;
SELECT SUM(a), SUM(LENGTH(b)) FROM test;
UPDATE test SET a=a+2, b='hellohello' WHERE a%2=1;
SELECT SUM(a), SUM(LENGTH(b)) FROM test;
SELECT SUM(a), SUM(LENGTH(b)) FROM test;
UPDATE test SET a=a+2, b='hellohellohellohello';
SELECT SUM(a), SUM(LENGTH(b)) FROM test;
SELECT SUM(a), SUM(LENGTH(b)) FROM test;
COMMIT;
SELECT SUM(a), SUM(LENGTH(b)) FROM test;
SELECT SUM(a), SUM(LENGTH(b)) FROM test;
create table t (id int, col varchar);
insert into t (id) select range as id from range(0, 1000000);
SELECT COUNT(*), COUNT(id), COUNT(col) FROM t;
update t set col = 'x';
SELECT COUNT(*), COUNT(id), COUNT(col) FROM t;
update t set col = NULL;
SELECT COUNT(*), COUNT(id), COUNT(col) FROM t;
CREATE TABLE test (a VARCHAR);
INSERT INTO test VALUES ('hello'), ('world');
BEGIN TRANSACTION;
UPDATE test SET a='test' WHERE a='hello';
SELECT * FROM test ORDER BY a;
SELECT * FROM test ORDER BY a;
ROLLBACK;
SELECT * FROM test ORDER BY a;
SELECT * FROM test ORDER BY a;
UPDATE test SET a='test' WHERE a='hello';
BEGIN TRANSACTION;
UPDATE test SET a='test2' WHERE a='test';
SELECT * FROM test ORDER BY a;
SELECT * FROM test ORDER BY a;
ROLLBACK;
SELECT * FROM test ORDER BY a;
SELECT * FROM test ORDER BY a;
BEGIN TRANSACTION;
UPDATE test SET a='test2' WHERE a='world';
SELECT * FROM test ORDER BY a;
SELECT * FROM test ORDER BY a;
ROLLBACK;
SELECT * FROM test ORDER BY a;
SELECT * FROM test ORDER BY a;
CREATE TABLE test (a INTEGER);
INSERT INTO test VALUES (1), (2), (3);
BEGIN TRANSACTION;
BEGIN TRANSACTION;
UPDATE test SET a=a+1;
DELETE FROM test;
SELECT * FROM test ORDER BY a;
SELECT * FROM test ORDER BY a;
COMMIT;
COMMIT;
DROP TABLE test;
SET default_null_order='nulls_first';
CREATE TABLE test (a INTEGER);
INSERT INTO test VALUES (1), (2), (3), (NULL);
SELECT * FROM test ORDER BY a;
BEGIN TRANSACTION;
UPDATE test SET a=NULL WHERE a=2;
SELECT * FROM test ORDER BY a;
SELECT * FROM test ORDER BY a;
COMMIT;
SELECT * FROM test ORDER BY a;
SELECT * FROM test ORDER BY a;
BEGIN TRANSACTION;
UPDATE test SET a=NULL WHERE a=3;
SELECT * FROM test ORDER BY a;
SELECT * FROM test ORDER BY a;
ROLLBACK;
SELECT * FROM test ORDER BY a;
SELECT * FROM test ORDER BY a;
BEGIN TRANSACTION;
UPDATE test SET a=10 WHERE a IS NULL;
SELECT * FROM test ORDER BY a;
SELECT * FROM test ORDER BY a;
ROLLBACK;
SELECT * FROM test ORDER BY a;
SELECT * FROM test ORDER BY a;
BEGIN TRANSACTION;
UPDATE test SET a=10 WHERE a IS NULL;
SELECT * FROM test ORDER BY a;
SELECT * FROM test ORDER BY a;
COMMIT;
SELECT * FROM test ORDER BY a;
SELECT * FROM test ORDER BY a;
CREATE TABLE test (a VARCHAR);
INSERT INTO test VALUES ('hello'), ('world');
BEGIN TRANSACTION;
SELECT * FROM test ORDER BY a;
SELECT * FROM test ORDER BY a;
DELETE FROM test WHERE a='hello';
SELECT * FROM test ORDER BY a;
SELECT * FROM test ORDER BY a;
UPDATE test SET a='hello';
SELECT * FROM test ORDER BY a;
SELECT * FROM test ORDER BY a;
COMMIT;
SELECT * FROM test ORDER BY a;
SET immediate_transaction_mode=true;
CREATE TABLE test (a INTEGER);
INSERT INTO test VALUES (1), (2), (3);
BEGIN TRANSACTION;
UPDATE test SET a=4 WHERE a=1;
BEGIN TRANSACTION;
UPDATE test SET a=5 WHERE a=2;
BEGIN TRANSACTION;
UPDATE test SET a=6 WHERE a=3;
BEGIN TRANSACTION;
SELECT * FROM test ORDER BY a;
SELECT * FROM test ORDER BY a;
SELECT * FROM test ORDER BY a;
SELECT * FROM test ORDER BY a;
UPDATE test SET a=99 WHERE a=1;
UPDATE test SET a=99 WHERE a=2;
UPDATE test SET a=99 WHERE a=3;
UPDATE test SET a=a-3;
ROLLBACK;
ROLLBACK;
ROLLBACK;
ROLLBACK;
BEGIN TRANSACTION;
UPDATE test SET a=4 WHERE a=1;
BEGIN TRANSACTION;
UPDATE test SET a=5 WHERE a=2;
BEGIN TRANSACTION;
UPDATE test SET a=6 WHERE a=3;
BEGIN TRANSACTION;
SELECT * FROM test ORDER BY a;
SELECT * FROM test ORDER BY a;
SELECT * FROM test ORDER BY a;
SELECT * FROM test ORDER BY a;
UPDATE test SET a=7 WHERE a=4;
UPDATE test SET a=8 WHERE a=5;
UPDATE test SET a=9 WHERE a=6;
SELECT * FROM test ORDER BY a;
SELECT * FROM test ORDER BY a;
SELECT * FROM test ORDER BY a;
SELECT * FROM test ORDER BY a;
SELECT * FROM test ORDER BY a;
COMMIT;
SELECT * FROM test ORDER BY a;
SELECT * FROM test ORDER BY a;
SELECT * FROM test ORDER BY a;
SELECT * FROM test ORDER BY a;
COMMIT;
SELECT * FROM test ORDER BY a;
SELECT * FROM test ORDER BY a;
SELECT * FROM test ORDER BY a;
SELECT * FROM test ORDER BY a;
COMMIT;
SELECT * FROM test ORDER BY a;
SELECT * FROM test ORDER BY a;
SELECT * FROM test ORDER BY a;
SELECT * FROM test ORDER BY a;
COMMIT;
SELECT * FROM test ORDER BY a;
SET immediate_transaction_mode=true;
CREATE TABLE test (a INTEGER);
INSERT INTO test VALUES (1), (2), (3);
SELECT SUM(a) FROM test;
BEGIN TRANSACTION;
INSERT INTO test VALUES (4), (5), (6);
SELECT SUM(a) FROM test;
SELECT SUM(a) FROM test;
DELETE FROM test WHERE a < 4;
SELECT SUM(a) FROM test;
SELECT SUM(a) FROM test;
UPDATE test SET a=a-3;
SELECT SUM(a) FROM test;
SELECT SUM(a) FROM test;
COMMIT;
SELECT SUM(a) FROM test;
SELECT SUM(a) FROM test;
CREATE TABLE test (id INTEGER, a INTEGER);
INSERT INTO test VALUES (1, 1), (2, 2), (3, 3), (4, NULL);
SELECT * FROM test ORDER BY id;
UPDATE test SET a=CASE WHEN id=1 THEN 7 ELSE NULL END WHERE id <= 2;
SELECT * FROM test ORDER BY id;
UPDATE test SET a=17 WHERE id > 2;
SELECT * FROM test ORDER BY id;
UPDATE test SET a=CASE WHEN id=4 THEN 1 ELSE NULL END;
SELECT * FROM test ORDER BY id;
UPDATE test SET a=2 WHERE id >= 2 AND id <= 3;
SELECT * FROM test ORDER BY id;
UPDATE test SET a=NULL WHERE id >= 3;
SELECT * FROM test ORDER BY id;
UPDATE test SET a=id WHERE id != 3;
SELECT * FROM test ORDER BY id;
UPDATE test SET a=NULL WHERE id != 3;
SELECT * FROM test ORDER BY id;
UPDATE test SET a=3 WHERE id != 2;
SELECT * FROM test ORDER BY id;
UPDATE test SET a=7 WHERE id != 3;
SELECT * FROM test ORDER BY id;
UPDATE test SET a=NULL;
SELECT * FROM test ORDER BY id;
CREATE TABLE test (a VARCHAR);
INSERT INTO test VALUES ('hello'), ('world');
BEGIN TRANSACTION;
SELECT * FROM test ORDER BY a;
SELECT * FROM test ORDER BY a;
UPDATE test SET a='test' WHERE a='hello';
SELECT * FROM test ORDER BY a;
UPDATE test SET a='test2' WHERE a='world';
SELECT * FROM test ORDER BY a;
SELECT * FROM test ORDER BY a;
COMMIT;
SELECT * FROM test ORDER BY a;
BEGIN;
CREATE TABLE t1(a VARCHAR(256) PRIMARY KEY, b INTEGER);
INSERT INTO t1 VALUES('    4-abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ', 2+1);
INSERT INTO t1 VALUES('   34-abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ', 18);
INSERT INTO t1 SELECT b, b+1 FROM t1 WHERE b<5;
FROM t1;
UPDATE t1 SET a = CONCAT(a, 'x') WHERE b%2=0;
FROM t1;
SET default_null_order='nulls_first';
CREATE TABLE test (a VARCHAR);
INSERT INTO test VALUES ('test'), ('world');
BEGIN TRANSACTION;
UPDATE test SET a=NULL WHERE a='world';
SELECT * FROM test ORDER BY a;
SELECT * FROM test ORDER BY a;
ROLLBACK;
SELECT * FROM test ORDER BY a;
SELECT * FROM test ORDER BY a;
UPDATE test SET a=NULL WHERE a='world';
SELECT * FROM test ORDER BY a;
BEGIN TRANSACTION;
UPDATE test SET a='world' WHERE a IS NULL;
SELECT * FROM test ORDER BY a;
SELECT * FROM test ORDER BY a;
ROLLBACK;
SELECT * FROM test ORDER BY a;
SELECT * FROM test ORDER BY a;
SET default_null_order='nulls_first';
CREATE TABLE test (a VARCHAR);
INSERT INTO test VALUES ('a'), ('b'), ('c'), (NULL);
INSERT INTO test SELECT * FROM test;
INSERT INTO test SELECT * FROM test;
INSERT INTO test SELECT * FROM test;
INSERT INTO test SELECT * FROM test;
INSERT INTO test SELECT * FROM test;
INSERT INTO test SELECT * FROM test;
INSERT INTO test SELECT * FROM test;
INSERT INTO test SELECT * FROM test;
SELECT DISTINCT a FROM test ORDER BY a;
SELECT DISTINCT a FROM test ORDER BY a;
BEGIN TRANSACTION;
UPDATE test SET a='aa' WHERE a='a';
SELECT DISTINCT a FROM test ORDER BY a;
SELECT DISTINCT a FROM test ORDER BY a;
ROLLBACK;
SELECT DISTINCT a FROM test ORDER BY a;
SELECT DISTINCT a FROM test ORDER BY a;
UPDATE test SET a='aa' WHERE a='a';
SELECT DISTINCT a FROM test ORDER BY a;
SELECT DISTINCT a FROM test ORDER BY a;
CREATE TABLE test (a INTEGER, b INTEGER);
INSERT INTO test VALUES (11, 22), (NULL, 22), (12, 21);
UPDATE test SET b=b+1 WHERE a=11;
SELECT a, b FROM test ORDER BY a;
UPDATE test SET b=b+1 WHERE a=11;
SELECT a, b FROM test ORDER BY a;
UPDATE test SET b=NULL WHERE a=11;
SELECT a, b FROM test ORDER BY a;
SELECT a, b FROM test ORDER BY a;
begin transaction;
create table integers as select * from generate_series(0, 10000000, 1) tbl(i);
select sum(i) from integers;
update integers set i=i+1;
select sum(i) from integers;
update integers set i=i+1;
select sum(i) from integers;
update integers set i=i+1;
select sum(i) from integers;
update integers set i=i+1;
select sum(i) from integers;
update integers set i=i+1;
select sum(i) from integers;
update integers set i=i+1;
select sum(i) from integers;
update integers set i=i+1;
select sum(i) from integers;
update integers set i=i+1;
select sum(i) from integers;
update integers set i=i+1;
select sum(i) from integers;
update integers set i=i+1;
select sum(i) from integers;
commit;
select sum(i) from integers;
CREATE TABLE test (a INTEGER, b INTEGER);
INSERT INTO test VALUES (11, 22), (13, 22), (12, 21);
UPDATE test SET b=b+1 WHERE a=11;
SELECT a, b FROM test ORDER BY a;
UPDATE test SET b=b+1 WHERE a=11;
SELECT a, b FROM test ORDER BY a;
SELECT a, b FROM test ORDER BY a;
