[{"test_case": "test_case_00000_00000", "type": "same"}, {"test_case": "test_case_00000_00001", "type": "same"}, {"test_case": "test_case_00000_00002", "type": "same"}, {"test_case": "test_case_00000_00003", "type": "same"}, {"test_case": "test_case_00000_00004", "type": "error", "result_detail": "Conversion Error: Could not convert string '   f           ' to BOOL", "error_stage": "query"}, {"test_case": "test_case_00000_00005", "type": "same"}, {"test_case": "test_case_00000_00006", "type": "same"}, {"test_case": "test_case_00000_00007", "type": "same"}, {"test_case": "test_case_00000_00008", "type": "same"}, {"test_case": "test_case_00000_00009", "type": "same"}, {"test_case": "test_case_00000_00010", "type": "same"}, {"test_case": "test_case_00000_00011", "type": "same"}, {"test_case": "test_case_00000_00012", "type": "error", "result_detail": "Catalog Error: Scalar Function with name date does not exist!\nDid you mean \"age\"?\nLINE 1: SELECT date(now())::text = current_date::text;\n               ^", "error_stage": "query"}, {"test_case": "test_case_00000_00013", "type": "different", "host_result_detail": [[true]], "guest_result_detail": [[false]]}, {"test_case": "test_case_00000_00014", "type": "error", "result_detail": "Parser Error: Type TIME WITH TIME ZONE does not support any modifiers!", "error_stage": "query"}, {"test_case": "test_case_00000_00015", "type": "error", "result_detail": "Conversion Error: Unimplemented type for cast (TIMESTAMP WITH TIME ZONE -> TIME)\nLINE 1: SELECT now()::time::text = localtime::text;\n                    ^", "error_stage": "query"}, {"test_case": "test_case_00000_00016", "type": "error", "result_detail": "Parser Error: Type TIME does not support any modifiers!", "error_stage": "query"}, {"test_case": "test_case_00000_00017", "type": "same"}, {"test_case": "test_case_00000_00018", "type": "error", "result_detail": "Catalog Error: Scalar Function with name current_timestamp does not exist!\nDid you mean \"get_current_timestamp\"?\nLINE 1: ...gth(current_timestamp::text) >= length(current_timestamp(0)::text);\n                                                  ^", "error_stage": "query"}, {"test_case": "test_case_00000_00019", "type": "same"}, {"test_case": "test_case_00000_00020", "type": "error", "result_detail": "Catalog Error: Scalar Function with name current_time does not exist!\nDid you mean \"current_date\"?\nLINE 1: SELECT current_time = current_time(7);\n                              ^", "error_stage": "query"}, {"test_case": "test_case_00000_00021", "type": "error", "result_detail": "Catalog Error: Scalar Function with name current_timestamp does not exist!\nDid you mean \"get_current_timestamp\"?\nLINE 1: SELECT current_timestamp = current_timestamp(7);\n                                   ^", "error_stage": "query"}, {"test_case": "test_case_00000_00022", "type": "error", "result_detail": "Catalog Error: Scalar Function with name localtime does not exist!\nDid you mean \"lcase\"?\nLINE 1: SELECT localtime = localtime(7);\n                           ^", "error_stage": "query"}, {"test_case": "test_case_00000_00023", "type": "error", "result_detail": "Catalog Error: Scalar Function with name localtimestamp does not exist!\nDid you mean \"to_timestamp\"?\nLINE 1: SELECT localtimestamp = localtimestamp(7);\n                                ^", "error_stage": "query"}, {"test_case": "test_case_00000_00024", "type": "same"}, {"test_case": "test_case_00000_00025", "type": "different", "host_result_detail": [["public"]], "guest_result_detail": [["main"]]}, {"test_case": "test_case_00000_00026", "type": "different", "host_result_detail": [["public"]], "guest_result_detail": [["main"]]}, {"test_case": "test_case_00000_00027", "type": "different", "host_result_detail": [["public"]], "guest_result_detail": [["main"]]}, {"test_case": "test_case_00000_00028", "type": "error", "result_detail": "Parser Error: Type BIT does not support any modifiers!", "error_stage": "query"}, {"test_case": "test_case_00000_00029", "type": "error", "result_detail": "Parser Error: Type BIT does not support any modifiers!", "error_stage": "query"}, {"test_case": "test_case_00000_00030", "type": "error", "result_detail": "Parser Error: Type BIT does not support any modifiers!", "error_stage": "query"}, {"test_case": "test_case_00000_00031", "type": "error", "result_detail": "Parser Error: Type BIT does not support any modifiers!", "error_stage": "query"}, {"test_case": "test_case_00000_00032", "type": "error", "result_detail": "Parser Error: Type BIT does not support any modifiers!", "error_stage": "query"}, {"test_case": "test_case_00000_00033", "type": "error", "result_detail": "Parser Error: Type BIT does not support any modifiers!", "error_stage": "query"}, {"test_case": "test_case_00000_00034", "type": "error", "result_detail": "Parser Error: Type BIT does not support any modifiers!", "error_stage": "query"}, {"test_case": "test_case_00000_00035", "type": "error", "result_detail": "Parser Error: Type BIT does not support any modifiers!", "error_stage": "query"}, {"test_case": "test_case_00000_00036", "type": "error", "result_detail": "Parser Error: Type BIT does not support any modifiers!", "error_stage": "query"}, {"test_case": "test_case_00000_00037", "type": "error", "result_detail": "Parser Error: Type BIT does not support any modifiers!", "error_stage": "query"}, {"test_case": "test_case_00000_00038", "type": "error", "result_detail": "Parser Error: Type BIT does not support any modifiers!", "error_stage": "query"}, {"test_case": "test_case_00000_00039", "type": "error", "result_detail": "Parser Error: Type BIT does not support any modifiers!", "error_stage": "query"}, {"test_case": "test_case_00000_00040", "type": "error", "result_detail": "Parser Error: Type BIT does not support any modifiers!", "error_stage": "query"}, {"test_case": "test_case_00000_00041", "type": "error", "result_detail": "Parser Error: Type BIT does not support any modifiers!", "error_stage": "query"}, {"test_case": "test_case_00000_00042", "type": "error", "result_detail": "Parser Error: Type BIT does not support any modifiers!", "error_stage": "query"}, {"test_case": "test_case_00000_00043", "type": "error", "result_detail": "Conversion Error: timestamp field value out of range: \"20011227 040506+08\", expected format is (YYYY-MM-DD HH:MM:SS[.US][\u00b1HH:MM| ZONE])", "error_stage": "query"}, {"test_case": "test_case_00000_00044", "type": "error", "result_detail": "Conversion Error: timestamp field value out of range: \"20011227 040506-08\", expected format is (YYYY-MM-DD HH:MM:SS[.US][\u00b1HH:MM| ZONE])", "error_stage": "query"}, {"test_case": "test_case_00000_00045", "type": "error", "result_detail": "Conversion Error: timestamp field value out of range: \"20011227 040506.789+08\", expected format is (YYYY-MM-DD HH:MM:SS[.US][\u00b1HH:MM| ZONE])", "error_stage": "query"}, {"test_case": "test_case_00000_00046", "type": "error", "result_detail": "Conversion Error: timestamp field value out of range: \"20011227 040506.789-08\", expected format is (YYYY-MM-DD HH:MM:SS[.US][\u00b1HH:MM| ZONE])", "error_stage": "query"}, {"test_case": "test_case_00000_00047", "type": "error", "result_detail": "Conversion Error: timestamp field value out of range: \"20011227T040506+08\", expected format is (YYYY-MM-DD HH:MM:SS[.US][\u00b1HH:MM| ZONE])", "error_stage": "query"}, {"test_case": "test_case_00000_00048", "type": "error", "result_detail": "Conversion Error: timestamp field value out of range: \"20011227T040506-08\", expected format is (YYYY-MM-DD HH:MM:SS[.US][\u00b1HH:MM| ZONE])", "error_stage": "query"}, {"test_case": "test_case_00000_00049", "type": "error", "result_detail": "Conversion Error: timestamp field value out of range: \"20011227T040506.789+08\", expected format is (YYYY-MM-DD HH:MM:SS[.US][\u00b1HH:MM| ZONE])", "error_stage": "query"}, {"test_case": "test_case_00000_00050", "type": "error", "result_detail": "Conversion Error: timestamp field value out of range: \"20011227T040506.789-08\", expected format is (YYYY-MM-DD HH:MM:SS[.US][\u00b1HH:MM| ZONE])", "error_stage": "query"}, {"test_case": "test_case_00000_00051", "type": "same"}, {"test_case": "test_case_00000_00052", "type": "error", "result_detail": "Conversion Error: timestamp field value out of range: \"2001.12.27 04:05:06.789-08\", expected format is (YYYY-MM-DD HH:MM:SS[.US][\u00b1HH:MM| ZONE])", "error_stage": "query"}, {"test_case": "test_case_00000_00053", "type": "same"}, {"test_case": "test_case_00000_00054", "type": "error", "result_detail": "Conversion Error: timestamp field value out of range: \"12/27/2001 04:05:06.789-08\", expected format is (YYYY-MM-DD HH:MM:SS[.US][\u00b1HH:MM| ZONE])", "error_stage": "query"}, {"test_case": "test_case_00000_00055", "type": "error", "result_detail": "Conversion Error: timestamp field value out of range: \"2001-12-27 04:05:06.789 MET DST\", expected format is (YYYY-MM-DD HH:MM:SS[.US][\u00b1HH:MM| ZONE])", "error_stage": "query"}, {"test_case": "test_case_00000_00056", "type": "error", "result_detail": "Conversion Error: timestamp field value out of range: \"2001-12-27 allballs\", expected format is (YYYY-MM-DD HH:MM:SS[.US][\u00b1HH:MM| ZONE])", "error_stage": "query"}, {"test_case": "test_case_00000_00057", "type": "error", "result_detail": "Conversion Error: Could not convert string '01:00' to INTERVAL", "error_stage": "query"}, {"test_case": "test_case_00000_00058", "type": "error", "result_detail": "Conversion Error: Could not convert string '+02:00' to INTERVAL", "error_stage": "query"}, {"test_case": "test_case_00000_00059", "type": "error", "result_detail": "Conversion Error: Could not convert string '-08:00' to INTERVAL", "error_stage": "query"}, {"test_case": "test_case_00000_00060", "type": "error", "result_detail": "Conversion Error: Could not convert string '-1 +02:03' to INTERVAL", "error_stage": "query"}, {"test_case": "test_case_00000_00061", "type": "error", "result_detail": "Conversion Error: Could not convert string '-1 days +02:03' to INTERVAL", "error_stage": "query"}, {"test_case": "test_case_00000_00062", "type": "same"}, {"test_case": "test_case_00000_00063", "type": "same"}, {"test_case": "test_case_00000_00064", "type": "error", "result_detail": "Conversion Error: Could not convert string '10 years -11 month -12 days +13:14' to INTERVAL", "error_stage": "query"}, {"test_case": "test_case_00000_00065", "type": "different", "host_result_detail": [[""]], "guest_result_detail": [["\"\""]]}, {"test_case": "test_case_00000_00066", "type": "error", "result_detail": "Parser Error: syntax error at or near \"'$'\"", "error_stage": "query"}, {"test_case": "test_case_00000_00067", "type": "error", "result_detail": "Parser Error: syntax error at or near \"'1'\"", "error_stage": "query"}, {"test_case": "test_case_00000_00068", "type": "error", "result_detail": "Parser Error: syntax error at or near \"'$.a.b'\"", "error_stage": "query"}, {"test_case": "test_case_00000_00069", "type": "error", "result_detail": "Parser Error: syntax error at or near \"'$.b'\"", "error_stage": "query"}, {"test_case": "test_case_00000_00070", "type": "error", "result_detail": "Parser Error: syntax error at or near \"'$.a + 2'\"", "error_stage": "query"}, {"test_case": "test_case_00000_00071", "type": "error", "result_detail": "Parser Error: syntax error at or near \"'$.b + 2'\"", "error_stage": "query"}, {"test_case": "test_case_00000_00072", "type": "error", "result_detail": "Parser Error: syntax error at or near \"'$.a.a'\"", "error_stage": "query"}, {"test_case": "test_case_00000_00073", "type": "error", "result_detail": "Parser Error: syntax error at or near \"'$.*.a'\"", "error_stage": "query"}, {"test_case": "test_case_00000_00074", "type": "error", "result_detail": "Parser Error: syntax error at or near \"'$.*.a'\"", "error_stage": "query"}, {"test_case": "test_case_00000_00075", "type": "error", "result_detail": "Parser Error: syntax error at or near \"'$.*.b'\"", "error_stage": "query"}, {"test_case": "test_case_00000_00076", "type": "error", "result_detail": "Parser Error: syntax error at or near \"'strict $.*.b'\"", "error_stage": "query"}, {"test_case": "test_case_00000_00077", "type": "error", "result_detail": "Parser Error: syntax error at or near \"'$.*'\"", "error_stage": "query"}, {"test_case": "test_case_00000_00078", "type": "error", "result_detail": "Parser Error: syntax error at or near \"'$.*'\"", "error_stage": "query"}, {"test_case": "test_case_00000_00079", "type": "error", "result_detail": "Parser Error: syntax error at or near \"'lax $.**{1}'\"", "error_stage": "query"}, {"test_case": "test_case_00000_00080", "type": "error", "result_detail": "Parser Error: syntax error at or near \"'lax $.**{2}'\"", "error_stage": "query"}, {"test_case": "test_case_00000_00081", "type": "error", "result_detail": "Parser Error: syntax error at or near \"'lax $.**{3}'\"", "error_stage": "query"}, {"test_case": "test_case_00000_00082", "type": "error", "result_detail": "Parser Error: syntax error at or near \"'$[*]'\"", "error_stage": "query"}, {"test_case": "test_case_00000_00083", "type": "error", "result_detail": "Parser Error: syntax error at or near \"'$[*]'\"", "error_stage": "query"}, {"test_case": "test_case_00000_00084", "type": "error", "result_detail": "Parser Error: syntax error at or near \"'$[1]'\"", "error_stage": "query"}, {"test_case": "test_case_00000_00085", "type": "error", "result_detail": "Parser Error: syntax error at or near \"'strict $[1]'\"", "error_stage": "query"}, {"test_case": "test_case_00000_00086", "type": "error", "result_detail": "Catalog Error: Type with name macaddr8 does not exist!\nDid you mean \"char\"?", "error_stage": "query"}, {"test_case": "test_case_00000_00087", "type": "error", "result_detail": "Catalog Error: Type with name macaddr8 does not exist!\nDid you mean \"char\"?", "error_stage": "query"}, {"test_case": "test_case_00000_00088", "type": "error", "result_detail": "Catalog Error: Type with name macaddr8 does not exist!\nDid you mean \"char\"?", "error_stage": "query"}, {"test_case": "test_case_00000_00089", "type": "error", "result_detail": "Catalog Error: Type with name macaddr8 does not exist!\nDid you mean \"char\"?", "error_stage": "query"}, {"test_case": "test_case_00000_00090", "type": "error", "result_detail": "Catalog Error: Type with name macaddr8 does not exist!\nDid you mean \"char\"?", "error_stage": "query"}, {"test_case": "test_case_00000_00091", "type": "error", "result_detail": "Catalog Error: Type with name macaddr8 does not exist!\nDid you mean \"char\"?", "error_stage": "query"}, {"test_case": "test_case_00000_00092", "type": "same"}, {"test_case": "test_case_00000_00093", "type": "same"}, {"test_case": "test_case_00000_00094", "type": "same"}, {"test_case": "test_case_00000_00095", "type": "same"}, {"test_case": "test_case_00000_00096", "type": "same"}, {"test_case": "test_case_00000_00097", "type": "same"}, {"test_case": "test_case_00000_00098", "type": "same"}, {"test_case": "test_case_00000_00099", "type": "error", "result_detail": "Binder Error: No function matches the given name and argument types 'md5(BLOB)'. You might need to add explicit type casts.\n\tCandidate functions:\n\tmd5(VARCHAR) -> VARCHAR\n\nLINE 1: select md5(''::bytea) = 'd41d8cd98f00b204e9800...\n               ^", "error_stage": "query"}, {"test_case": "test_case_00000_00100", "type": "error", "result_detail": "Binder Error: No function matches the given name and argument types 'md5(BLOB)'. You might need to add explicit type casts.\n\tCandidate functions:\n\tmd5(VARCHAR) -> VARCHAR\n\nLINE 1: select md5('a'::bytea) = '0cc175b9c0f1b6a831c3...\n               ^", "error_stage": "query"}, {"test_case": "test_case_00000_00101", "type": "error", "result_detail": "Binder Error: No function matches the given name and argument types 'md5(BLOB)'. You might need to add explicit type casts.\n\tCandidate functions:\n\tmd5(VARCHAR) -> VARCHAR\n\nLINE 1: select md5('abc'::bytea) = '900150983cd24fb0d6...\n               ^", "error_stage": "query"}, {"test_case": "test_case_00000_00102", "type": "error", "result_detail": "Binder Error: No function matches the given name and argument types 'md5(BLOB)'. You might need to add explicit type casts.\n\tCandidate functions:\n\tmd5(VARCHAR) -> VARCHAR\n\nLINE 1: select md5('message digest'::bytea) = 'f96b697...\n               ^", "error_stage": "query"}, {"test_case": "test_case_00000_00103", "type": "error", "result_detail": "Binder Error: No function matches the given name and argument types 'md5(BLOB)'. You might need to add explicit type casts.\n\tCandidate functions:\n\tmd5(VARCHAR) -> VARCHAR\n\nLINE 1: select md5('abcdefghijklmnopqrstuvwxyz'::bytea...\n               ^", "error_stage": "query"}, {"test_case": "test_case_00000_00104", "type": "error", "result_detail": "Binder Error: No function matches the given name and argument types 'md5(BLOB)'. You might need to add explicit type casts.\n\tCandidate functions:\n\tmd5(VARCHAR) -> VARCHAR\n\nLINE 1: select md5('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefgh...\n               ^", "error_stage": "query"}, {"test_case": "test_case_00000_00105", "type": "error", "result_detail": "Binder Error: No function matches the given name and argument types 'md5(BLOB)'. You might need to add explicit type casts.\n\tCandidate functions:\n\tmd5(VARCHAR) -> VARCHAR\n\nLINE 1: select md5('1234567890123456789012345678901234...\n               ^", "error_stage": "query"}, {"test_case": "test_case_00000_00106", "type": "error", "result_detail": "Catalog Error: Scalar Function with name num_nonnulls does not exist!\nDid you mean \"enum_last\"?\nLINE 1: SELECT num_nonnulls('1');\n               ^", "error_stage": "query"}, {"test_case": "test_case_00000_00107", "type": "error", "result_detail": "Catalog Error: Scalar Function with name num_nonnulls does not exist!\nDid you mean \"enum_last\"?\nLINE 1: SELECT num_nonnulls(NULL::text);\n               ^", "error_stage": "query"}, {"test_case": "test_case_00000_00108", "type": "error", "result_detail": "Catalog Error: Scalar Function with name num_nonnulls does not exist!\nDid you mean \"enum_last\"?\nLINE 1: SELECT num_nonnulls(NULL::text, NULL::int);\n               ^", "error_stage": "query"}, {"test_case": "test_case_00000_00109", "type": "error", "result_detail": "Catalog Error: Scalar Function with name num_nonnulls does not exist!\nDid you mean \"enum_last\"?\nLINE 1: SELECT num_nonnulls(1, 2, NULL::text, NULL::po...\n               ^", "error_stage": "query"}, {"test_case": "test_case_00000_00110", "type": "error", "result_detail": "Catalog Error: Scalar Function with name num_nonnulls does not exist!\nDid you mean \"enum_last\"?\nLINE 1: SELECT num_nonnulls(VARIADIC '{1,2,NULL,3}'::i...\n               ^", "error_stage": "query"}, {"test_case": "test_case_00000_00111", "type": "error", "result_detail": "Catalog Error: Scalar Function with name num_nonnulls does not exist!\nDid you mean \"enum_last\"?\nLINE 1: SELECT num_nonnulls(VARIADIC '{\"1\",\"2\",\"3\",\"4\"...\n               ^", "error_stage": "query"}, {"test_case": "test_case_00000_00112", "type": "error", "result_detail": "Catalog Error: Scalar Function with name num_nonnulls does not exist!\nDid you mean \"enum_last\"?\nLINE 1: SELECT num_nonnulls(VARIADIC ARRAY(SELECT CASE...\n               ^", "error_stage": "query"}, {"test_case": "test_case_00000_00113", "type": "error", "result_detail": "Catalog Error: Scalar Function with name num_nulls does not exist!\nDid you mean \"enum_last\"?\nLINE 1: SELECT num_nulls(NULL);\n               ^", "error_stage": "query"}, {"test_case": "test_case_00000_00114", "type": "error", "result_detail": "Catalog Error: Scalar Function with name num_nulls does not exist!\nDid you mean \"enum_last\"?\nLINE 1: SELECT num_nulls('1');\n               ^", "error_stage": "query"}, {"test_case": "test_case_00000_00115", "type": "error", "result_detail": "Catalog Error: Scalar Function with name num_nulls does not exist!\nDid you mean \"enum_last\"?\nLINE 1: SELECT num_nulls(NULL::text);\n               ^", "error_stage": "query"}, {"test_case": "test_case_00000_00116", "type": "error", "result_detail": "Catalog Error: Scalar Function with name num_nulls does not exist!\nDid you mean \"enum_last\"?\nLINE 1: SELECT num_nulls(NULL::text, NULL::int);\n               ^", "error_stage": "query"}, {"test_case": "test_case_00000_00117", "type": "error", "result_detail": "Catalog Error: Scalar Function with name num_nulls does not exist!\nDid you mean \"enum_last\"?\nLINE 1: SELECT num_nulls(1, 2, NULL::text, NULL::point...\n               ^", "error_stage": "query"}, {"test_case": "test_case_00000_00118", "type": "error", "result_detail": "Catalog Error: Scalar Function with name num_nulls does not exist!\nDid you mean \"enum_last\"?\nLINE 1: SELECT num_nulls(VARIADIC '{1,2,NULL,3}'::int[...\n               ^", "error_stage": "query"}, {"test_case": "test_case_00000_00119", "type": "error", "result_detail": "Catalog Error: Scalar Function with name num_nulls does not exist!\nDid you mean \"enum_last\"?\nLINE 1: SELECT num_nulls(VARIADIC '{\"1\",\"2\",\"3\",\"4\"}':...\n               ^", "error_stage": "query"}, {"test_case": "test_case_00000_00120", "type": "error", "result_detail": "Catalog Error: Scalar Function with name num_nulls does not exist!\nDid you mean \"enum_last\"?\nLINE 1: SELECT num_nulls(VARIADIC ARRAY(SELECT CASE WH...\n               ^", "error_stage": "query"}, {"test_case": "test_case_00000_00121", "type": "error", "result_detail": "Catalog Error: Scalar Function with name num_nonnulls does not exist!\nDid you mean \"enum_last\"?\nLINE 1: SELECT num_nonnulls(VARIADIC NULL::text[]);\n               ^", "error_stage": "query"}, {"test_case": "test_case_00000_00122", "type": "error", "result_detail": "Catalog Error: Scalar Function with name num_nonnulls does not exist!\nDid you mean \"enum_last\"?\nLINE 1: SELECT num_nonnulls(VARIADIC '{}'::int[]);\n               ^", "error_stage": "query"}, {"test_case": "test_case_00000_00123", "type": "error", "result_detail": "Catalog Error: Scalar Function with name num_nulls does not exist!\nDid you mean \"enum_last\"?\nLINE 1: SELECT num_nulls(VARIADIC NULL::text[]);\n               ^", "error_stage": "query"}, {"test_case": "test_case_00000_00124", "type": "error", "result_detail": "Catalog Error: Scalar Function with name num_nulls does not exist!\nDid you mean \"enum_last\"?\nLINE 1: SELECT num_nulls(VARIADIC '{}'::int[]);\n               ^", "error_stage": "query"}, {"test_case": "test_case_00000_00125", "type": "error", "result_detail": "Catalog Error: Type with name name does not exist!\nDid you mean \"date\"?", "error_stage": "query"}, {"test_case": "test_case_00000_00126", "type": "error", "result_detail": "Catalog Error: Type with name name does not exist!\nDid you mean \"date\"?", "error_stage": "query"}, {"test_case": "test_case_00000_00127", "type": "different", "host_result_detail": [[37]], "guest_result_detail": [[0]]}, {"test_case": "test_case_00000_00128", "type": "different", "host_result_detail": [[187]], "guest_result_detail": [[0]]}, {"test_case": "test_case_00000_00129", "type": "different", "host_result_detail": [[1071]], "guest_result_detail": [[0]]}, {"test_case": "test_case_00000_00130", "type": "different", "host_result_detail": [[2147483647]], "guest_result_detail": [[0]]}, {"test_case": "test_case_00000_00131", "type": "different", "host_result_detail": [[2147483648]], "guest_result_detail": [[0]]}, {"test_case": "test_case_00000_00132", "type": "different", "host_result_detail": [[2147483647]], "guest_result_detail": [[0]]}, {"test_case": "test_case_00000_00133", "type": "different", "host_result_detail": [[2147483648]], "guest_result_detail": [[0]]}, {"test_case": "test_case_00000_00134", "type": "different", "host_result_detail": [[2147483647]], "guest_result_detail": [[0]]}, {"test_case": "test_case_00000_00135", "type": "different", "host_result_detail": [[2147483648]], "guest_result_detail": [[0]]}, {"test_case": "test_case_00000_00136", "type": "different", "host_result_detail": [[-2147483648]], "guest_result_detail": [[0]]}, {"test_case": "test_case_00000_00137", "type": "different", "host_result_detail": [[-2147483649]], "guest_result_detail": [[0]]}, {"test_case": "test_case_00000_00138", "type": "different", "host_result_detail": [[-2147483648]], "guest_result_detail": [[0]]}, {"test_case": "test_case_00000_00139", "type": "different", "host_result_detail": [[-2147483649]], "guest_result_detail": [[0]]}, {"test_case": "test_case_00000_00140", "type": "different", "host_result_detail": [[-2147483648]], "guest_result_detail": [[0]]}, {"test_case": "test_case_00000_00141", "type": "different", "host_result_detail": [[-2147483649]], "guest_result_detail": [[0]]}, {"test_case": "test_case_00000_00142", "type": "different", "host_result_detail": [[9223372036854775807]], "guest_result_detail": [[0]]}, {"test_case": "test_case_00000_00143", "type": "different", "host_result_detail": [[9.223372036854776e+18]], "guest_result_detail": [[0]]}, {"test_case": "test_case_00000_00144", "type": "different", "host_result_detail": [[9223372036854775807]], "guest_result_detail": [[0]]}, {"test_case": "test_case_00000_00145", "type": "different", "host_result_detail": [[9.223372036854776e+18]], "guest_result_detail": [[0]]}, {"test_case": "test_case_00000_00146", "type": "different", "host_result_detail": [[9223372036854775807]], "guest_result_detail": [[0]]}, {"test_case": "test_case_00000_00147", "type": "different", "host_result_detail": [[9.223372036854776e+18]], "guest_result_detail": [[0]]}, {"test_case": "test_case_00000_00148", "type": "different", "host_result_detail": [[-9223372036854775808]], "guest_result_detail": [[0]]}, {"test_case": "test_case_00000_00149", "type": "different", "host_result_detail": [[-9.223372036854776e+18]], "guest_result_detail": [[0]]}, {"test_case": "test_case_00000_00150", "type": "different", "host_result_detail": [[-9223372036854775808]], "guest_result_detail": [[0]]}, {"test_case": "test_case_00000_00151", "type": "different", "host_result_detail": [[-9.223372036854776e+18]], "guest_result_detail": [[0]]}, {"test_case": "test_case_00000_00152", "type": "different", "host_result_detail": [[-9223372036854775808]], "guest_result_detail": [[0]]}, {"test_case": "test_case_00000_00153", "type": "different", "host_result_detail": [[-9.223372036854776e+18]], "guest_result_detail": [[0]]}, {"test_case": "test_case_00000_00154", "type": "error", "result_detail": [[123]], "error_stage": null}, {"test_case": "test_case_00000_00155", "type": "error", "result_detail": [[0]], "error_stage": null}, {"test_case": "test_case_00000_00156", "type": "error", "result_detail": [[0.0]], "error_stage": null}, {"test_case": "test_case_00000_00157", "type": "error", "result_detail": [[0.0]], "error_stage": null}, {"test_case": "test_case_00000_00158", "type": "error", "result_detail": [[0.0]], "error_stage": null}, {"test_case": "test_case_00000_00159", "type": "error", "result_detail": [[0.0]], "error_stage": null}, {"test_case": "test_case_00000_00160", "type": "error", "result_detail": [[0.0]], "error_stage": null}, {"test_case": "test_case_00000_00161", "type": "error", "result_detail": [], "error_stage": null}, {"test_case": "test_case_00000_00162", "type": "error", "result_detail": [[0, true, true]], "error_stage": null}, {"test_case": "test_case_00000_00163", "type": "error", "result_detail": "Invalid Input Error: invalid escape sequence: \\1", "error_stage": "query"}, {"test_case": "test_case_00000_00164", "type": "error", "result_detail": "Invalid Input Error: invalid escape sequence: \\1", "error_stage": "query"}, {"test_case": "test_case_00000_00165", "type": "error", "result_detail": "Invalid Input Error: invalid escape sequence: \\1", "error_stage": "query"}, {"test_case": "test_case_00000_00166", "type": "error", "result_detail": "Invalid Input Error: invalid escape sequence: \\1", "error_stage": "query"}, {"test_case": "test_case_00000_00167", "type": "error", "result_detail": "Invalid Input Error: invalid escape sequence: \\1", "error_stage": "query"}, {"test_case": "test_case_00000_00168", "type": "error", "result_detail": "Invalid Input Error: invalid escape sequence: \\1", "error_stage": "query"}, {"test_case": "test_case_00000_00169", "type": "error", "result_detail": "Invalid Input Error: invalid escape sequence: \\1", "error_stage": "query"}, {"test_case": "test_case_00000_00170", "type": "error", "result_detail": "Invalid Input Error: invalid escape sequence: \\1", "error_stage": "query"}, {"test_case": "test_case_00000_00171", "type": "error", "result_detail": "Invalid Input Error: invalid escape sequence: \\1", "error_stage": "query"}, {"test_case": "test_case_00000_00172", "type": "error", "result_detail": "Invalid Input Error: invalid escape sequence: \\1", "error_stage": "query"}, {"test_case": "test_case_00000_00173", "type": "error", "result_detail": "Invalid Input Error: invalid escape sequence: \\1", "error_stage": "query"}, {"test_case": "test_case_00000_00174", "type": "error", "result_detail": "Conversion Error: Could not convert string ' TO (([a-z0-9._]+|\"([^\"]+|\"\")+\")+)' to INT64\nLINE 1: select substring('asd TO foo' from ' TO (([a-z0-9._]+|\"([^\"]+|\"\")+\")+)');\n                                           ^", "error_stage": "query"}, {"test_case": "test_case_00000_00175", "type": "error", "result_detail": "Conversion Error: Could not convert string '((a))+' to INT64\nLINE 1: select substring('a' from '((a))+');\n                                  ^", "error_stage": "query"}, {"test_case": "test_case_00000_00176", "type": "error", "result_detail": "Conversion Error: Could not convert string '((a)+)' to INT64\nLINE 1: select substring('a' from '((a)+)');\n                                  ^", "error_stage": "query"}, {"test_case": "test_case_00000_00177", "type": "error", "result_detail": "Catalog Error: Scalar Function with name regexp_match does not exist!\nDid you mean \"regexp_matches\"?\nLINE 1: select regexp_match('abc', '');\n               ^", "error_stage": "query"}, {"test_case": "test_case_00000_00178", "type": "error", "result_detail": "Catalog Error: Scalar Function with name regexp_match does not exist!\nDid you mean \"regexp_matches\"?\nLINE 1: select regexp_match('abc', 'bc');\n               ^", "error_stage": "query"}, {"test_case": "test_case_00000_00179", "type": "error", "result_detail": "Catalog Error: Scalar Function with name regexp_match does not exist!\nDid you mean \"regexp_matches\"?\nLINE 1: select regexp_match('abc', 'd') is null;\n               ^", "error_stage": "query"}, {"test_case": "test_case_00000_00180", "type": "error", "result_detail": "Catalog Error: Scalar Function with name regexp_match does not exist!\nDid you mean \"regexp_matches\"?\nLINE 1: select regexp_match('abc', '(B)(c)', 'i');\n               ^", "error_stage": "query"}, {"test_case": "test_case_00000_00181", "type": "error", "result_detail": "Catalog Error: Scalar Function with name regoper does not exist!\nDid you mean \"regr_slope\"?\nLINE 1: SELECT regoper('||/');\n               ^", "error_stage": "query"}, {"test_case": "test_case_00000_00182", "type": "error", "result_detail": "Catalog Error: Scalar Function with name regoperator does not exist!\nDid you mean \"repeat\"?\nLINE 1: SELECT regoperator('+(int4,int4)');\n               ^", "error_stage": "query"}, {"test_case": "test_case_00000_00183", "type": "error", "result_detail": "Catalog Error: Scalar Function with name regproc does not exist!\nDid you mean \"epoch\"?\nLINE 1: SELECT regproc('now');\n               ^", "error_stage": "query"}, {"test_case": "test_case_00000_00184", "type": "error", "result_detail": "Catalog Error: Scalar Function with name regprocedure does not exist!\nDid you mean \"reduce\"?\nLINE 1: SELECT regprocedure('abs(numeric)');\n               ^", "error_stage": "query"}, {"test_case": "test_case_00000_00185", "type": "error", "result_detail": "Catalog Error: Scalar Function with name regtype does not exist!\nDid you mean \"repeat\"?\nLINE 1: SELECT regtype('int4');\n               ^", "error_stage": "query"}, {"test_case": "test_case_00000_00186", "type": "error", "result_detail": "Catalog Error: Scalar Function with name regcollation does not exist!\nDid you mean \"cot\"?\nLINE 1: SELECT regcollation('\"POSIX\"');\n               ^", "error_stage": "query"}, {"test_case": "test_case_00000_00187", "type": "error", "result_detail": "Catalog Error: Scalar Function with name to_regoper does not exist!\nDid you mean \"bit_or\"?\nLINE 1: SELECT to_regoper('||/');\n               ^", "error_stage": "query"}, {"test_case": "test_case_00000_00188", "type": "error", "result_detail": "Catalog Error: Scalar Function with name to_regoperator does not exist!\nDid you mean \"repeat\"?\nLINE 1: SELECT to_regoperator('+(int4,int4)');\n               ^", "error_stage": "query"}, {"test_case": "test_case_00000_00189", "type": "error", "result_detail": "Catalog Error: Scalar Function with name to_regproc does not exist!\nDid you mean \"epoch\"?\nLINE 1: SELECT to_regproc('now');\n               ^", "error_stage": "query"}, {"test_case": "test_case_00000_00190", "type": "error", "result_detail": "Catalog Error: Scalar Function with name to_regprocedure does not exist!\nDid you mean \"reduce\"?\nLINE 1: SELECT to_regprocedure('abs(numeric)');\n               ^", "error_stage": "query"}, {"test_case": "test_case_00000_00191", "type": "error", "result_detail": "Catalog Error: Scalar Function with name to_regtype does not exist!\nDid you mean \"json_type\"?\nLINE 1: SELECT to_regtype('int4');\n               ^", "error_stage": "query"}, {"test_case": "test_case_00000_00192", "type": "error", "result_detail": "Catalog Error: Scalar Function with name to_regcollation does not exist!\nDid you mean \"to_seconds\"?\nLINE 1: SELECT to_regcollation('\"POSIX\"');\n               ^", "error_stage": "query"}, {"test_case": "test_case_00000_00193", "type": "error", "result_detail": [["first line - next line - third line"]], "error_stage": null}, {"test_case": "test_case_00000_00194", "type": "error", "result_detail": [[1]], "error_stage": null}, {"test_case": "test_case_00000_00195", "type": "error", "result_detail": [], "error_stage": null}, {"test_case": "test_case_00000_00196", "type": "error", "result_detail": [], "error_stage": null}, {"test_case": "test_case_00000_00197", "type": "error", "result_detail": [[1]], "error_stage": null}, {"test_case": "test_case_00000_00198", "type": "error", "result_detail": [[1]], "error_stage": null}, {"test_case": "test_case_00000_00199", "type": "error", "result_detail": [[true]], "error_stage": null}, {"test_case": "test_case_00000_00200", "type": "error", "result_detail": [[false]], "error_stage": null}, {"test_case": "test_case_00000_00201", "type": "error", "result_detail": "Catalog Error: Type with name tid does not exist!\nDid you mean \"oid\"?", "error_stage": "query"}, {"test_case": "test_case_00000_00202", "type": "error", "result_detail": "Catalog Error: Type with name tid does not exist!\nDid you mean \"oid\"?", "error_stage": "query"}, {"test_case": "test_case_00000_00203", "type": "error", "result_detail": [[[1, 2, 3], [3, 4, 5]]], "error_stage": null}, {"test_case": "test_case_00000_00204", "type": "error", "result_detail": [[[1, 2], [1, 2, 3, 4]]], "error_stage": null}, {"test_case": "test_case_00000_00205", "type": "error", "result_detail": "Binder Error: No function matches the given name and argument types 'generate_series(INTEGER_LITERAL, BIGINT[])'. You might need to add explicit type casts.\n\tCandidate functions:\n\tgenerate_series(BIGINT) -> BIGINT[]\n\tgenerate_series(BIGINT, BIGINT) -> BIGINT[]\n\tgenerate_series(BIGINT, BIGINT, BIGINT) -> BIGINT[]\n\tgenerate_series(TIMESTAMP, TIMESTAMP, INTERVAL) -> TIMESTAMP[]\n\tgenerate_series(TIMESTAMP WITH TIME ZONE, TIMESTAMP WITH TIME ZONE, INTERVAL) -> TIMESTAMP WITH TIME ZONE[]\n\nLINE 1: SELECT generate_series(1, generate_series(1, 3...\n               ^", "error_stage": "query"}, {"test_case": "test_case_00000_00206", "type": "error", "result_detail": "Catalog Error: Type with name tsvector does not exist!\nDid you mean \"text\"?", "error_stage": "query"}, {"test_case": "test_case_00000_00207", "type": "error", "result_detail": "Catalog Error: Type with name tsvector does not exist!\nDid you mean \"text\"?", "error_stage": "query"}, {"test_case": "test_case_00000_00208", "type": "error", "result_detail": "Catalog Error: Type with name tsvector does not exist!\nDid you mean \"text\"?", "error_stage": "query"}, {"test_case": "test_case_00000_00209", "type": "error", "result_detail": "Catalog Error: Type with name tsvector does not exist!\nDid you mean \"text\"?", "error_stage": "query"}, {"test_case": "test_case_00000_00210", "type": "error", "result_detail": "Catalog Error: Type with name tsvector does not exist!\nDid you mean \"text\"?", "error_stage": "query"}, {"test_case": "test_case_00000_00211", "type": "error", "result_detail": "Catalog Error: Type with name tsvector does not exist!\nDid you mean \"text\"?", "error_stage": "query"}, {"test_case": "test_case_00000_00212", "type": "error", "result_detail": "Catalog Error: Scalar Function with name array_to_tsvector does not exist!\nDid you mean \"array_to_json\"?\nLINE 1: SELECT array_to_tsvector(ARRAY['base','hidden'...\n               ^", "error_stage": "query"}, {"test_case": "test_case_00000_00213", "type": "error", "result_detail": "Catalog Error: Scalar Function with name array_to_tsvector does not exist!\nDid you mean \"array_to_json\"?\nLINE 1: SELECT array_to_tsvector(ARRAY['foo','bar','ba...\n               ^", "error_stage": "query"}, {"test_case": "test_case_00000_00214", "type": "error", "result_detail": "Catalog Error: Scalar Function with name ts_filter does not exist!\nDid you mean \"filter\"?\nLINE 1: SELECT ts_filter('base:7A empir:17 evil:15 fir...\n               ^", "error_stage": "query"}, {"test_case": "test_case_00000_00215", "type": "error", "result_detail": "Catalog Error: Scalar Function with name ts_filter does not exist!\nDid you mean \"filter\"?\nLINE 1: SELECT ts_filter('base hidden rebel spaceship ...\n               ^", "error_stage": "query"}, {"test_case": "test_case_00000_00216", "type": "error", "result_detail": "Catalog Error: Type with name txid_snapshot does not exist!\nDid you mean \"int\"?", "error_stage": "query"}, {"test_case": "test_case_00000_00217", "type": "error", "result_detail": "Catalog Error: Type with name txid_snapshot does not exist!\nDid you mean \"int\"?", "error_stage": "query"}, {"test_case": "test_case_00000_00218", "type": "error", "result_detail": "Catalog Error: Type with name txid_snapshot does not exist!\nDid you mean \"int\"?", "error_stage": "query"}, {"test_case": "test_case_00000_00219", "type": "error", "result_detail": [[1], [2]], "error_stage": null}, {"test_case": "test_case_00000_00220", "type": "error", "result_detail": [[1]], "error_stage": null}, {"test_case": "test_case_00000_00221", "type": "error", "result_detail": [[1], [2]], "error_stage": null}, {"test_case": "test_case_00000_00222", "type": "error", "result_detail": [[1], [1]], "error_stage": null}, {"test_case": "test_case_00000_00223", "type": "error", "result_detail": [[1], [2], [3]], "error_stage": null}, {"test_case": "test_case_00000_00224", "type": "error", "result_detail": [[1], [2]], "error_stage": null}, {"test_case": "test_case_00000_00225", "type": "error", "result_detail": [[1], [2], [2]], "error_stage": null}, {"test_case": "test_case_00000_00226", "type": "error", "result_detail": [[1.1], [2.2]], "error_stage": null}, {"test_case": "test_case_00000_00227", "type": "error", "result_detail": [[1.1], [2.0]], "error_stage": null}, {"test_case": "test_case_00000_00228", "type": "error", "result_detail": [[1.0], [2.2]], "error_stage": null}, {"test_case": "test_case_00000_00229", "type": "error", "result_detail": [[1.0]], "error_stage": null}, {"test_case": "test_case_00000_00230", "type": "error", "result_detail": [[1.1], [2.0]], "error_stage": null}, {"test_case": "test_case_00000_00231", "type": "error", "result_detail": [[1.0], [1.0]], "error_stage": null}, {"test_case": "test_case_00000_00232", "type": "error", "result_detail": [[1.1], [2.0], [3.0]], "error_stage": null}, {"test_case": "test_case_00000_00233", "type": "error", "result_detail": [[1.1], [2.0]], "error_stage": null}, {"test_case": "test_case_00000_00234", "type": "error", "result_detail": [[1.1], [2.0], [2.0]], "error_stage": null}, {"test_case": "test_case_00000_00235", "type": "error", "result_detail": [[1.1], [2.0]], "error_stage": null}, {"test_case": "test_case_00000_00236", "type": "error", "result_detail": "Catalog Error: Type with name xid does not exist!\nDid you mean \"oid\"?", "error_stage": "query"}, {"test_case": "test_case_00000_00237", "type": "error", "result_detail": "Catalog Error: Type with name xid does not exist!\nDid you mean \"oid\"?", "error_stage": "query"}, {"test_case": "test_case_00000_00238", "type": "error", "result_detail": "Catalog Error: Type with name xid does not exist!\nDid you mean \"oid\"?", "error_stage": "query"}, {"test_case": "test_case_00000_00239", "type": "error", "result_detail": "Catalog Error: Type with name xid8 does not exist!\nDid you mean \"oid\"?", "error_stage": "query"}, {"test_case": "test_case_00000_00240", "type": "error", "result_detail": "Catalog Error: Type with name xid8 does not exist!\nDid you mean \"oid\"?", "error_stage": "query"}, {"test_case": "test_case_00000_00241", "type": "error", "result_detail": "Catalog Error: Type with name xid does not exist!\nDid you mean \"oid\"?", "error_stage": "query"}, {"test_case": "test_case_00000_00242", "type": "error", "result_detail": "Catalog Error: Type with name xid does not exist!\nDid you mean \"oid\"?", "error_stage": "query"}, {"test_case": "test_case_00000_00243", "type": "error", "result_detail": "Catalog Error: Type with name xid8 does not exist!\nDid you mean \"oid\"?", "error_stage": "query"}, {"test_case": "test_case_00000_00244", "type": "error", "result_detail": "Catalog Error: Type with name xid8 does not exist!\nDid you mean \"oid\"?", "error_stage": "query"}, {"test_case": "test_case_00000_00245", "type": "error", "result_detail": "Catalog Error: Type with name xid does not exist!\nDid you mean \"oid\"?", "error_stage": "query"}, {"test_case": "test_case_00000_00246", "type": "error", "result_detail": "Catalog Error: Type with name xid does not exist!\nDid you mean \"oid\"?", "error_stage": "query"}]