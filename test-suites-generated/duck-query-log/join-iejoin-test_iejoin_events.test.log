PRAGMA enable_verification;
SELECT SETSEED(0.8675309);;
SELECT SETSEED(0.8675309);;
;
SELECT SETSEED(0.8675309);;
SELECT setseed(0.8675309);
;
;
;
;
SELECT SETSEED(0.8675309);;
CREATE TABLE events AS (
	SELECT *,
		 "start" + INTERVAL (CASE WHEN random() < 0.1 THEN 120 ELSE (5 + round(random() * 50, 0)::BIGINT) END) MINUTE
		 	AS "end"
	FROM (
		SELECT id,
			'Event ' || id::VARCHAR as "name",
			(5 + round(random() * 5000, 0)::BIGINT) AS audience,
			'1992-01-01'::TIMESTAMP
				+ INTERVAL (round(random() * 40 * 365, 0)::BIGINT) DAY
				+ INTERVAL (round(random() * 23, 0)::BIGINT) HOUR
				AS "start",
			'Sponsor ' || (1 + round(random() * 10, 0)::BIGINT) AS sponsor
		FROM range(1, 1000) tbl(id)
	) q
);;
SELECT COUNT(*) FROM (
	SELECT r.id, s.id
	FROM events r, events s
	WHERE r.start <= s.end AND r.end >= s.start
	  AND r.id <> s.id
) q2;;
SELECT COUNT(*) FROM (
	SELECT r.id, s.id
	FROM events r, events s
	WHERE r.start <= s.end AND r.end >= s.start
	  AND r.id <> s.id
) q2;;
;
SELECT COUNT(*) FROM (
	SELECT r.id, s.id
	FROM events r, events s
	WHERE r.start <= s.end AND r.end >= s.start
	  AND r.id <> s.id
) q2;;
SELECT count_star() FROM (SELECT r.id, s.id FROM events AS r , events AS s WHERE ((r."start" <= s."end") AND (r."end" >= s."start") AND (r.id != s.id))) AS q2;
;
;
;
;
SELECT COUNT(*) FROM (
	SELECT r.id, s.id
	FROM events r, events s
	WHERE r.start <= s.end AND r.end >= s.start
	  AND r.id <> s.id
) q2;;
